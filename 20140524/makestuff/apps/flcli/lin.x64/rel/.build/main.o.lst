   1              		.file	"main.c"
   2              		.section	.rodata.str1.1,"aMS",@progbits,1
   3              	.LC0:
   4 0000 646F5772 		.string	"doWrite()"
   4      69746528 
   4      2900
   5              		.section	.text.unlikely,"ax",@progbits
   6              	.LCOLDB1:
   7              		.text
   8              	.LHOTB1:
   9              		.p2align 4,,15
  11              	doWrite:
  12              	.LFB59:
  13              		.cfi_startproc
  14 0000 4157     		pushq	%r15
  15              		.cfi_def_cfa_offset 16
  16              		.cfi_offset 15, -16
  17 0002 4156     		pushq	%r14
  18              		.cfi_def_cfa_offset 24
  19              		.cfi_offset 14, -24
  20 0004 4531FF   		xorl	%r15d, %r15d
  21 0007 4155     		pushq	%r13
  22              		.cfi_def_cfa_offset 32
  23              		.cfi_offset 13, -32
  24 0009 4154     		pushq	%r12
  25              		.cfi_def_cfa_offset 40
  26              		.cfi_offset 12, -40
  27 000b 4989FE   		movq	%rdi, %r14
  28 000e 55       		pushq	%rbp
  29              		.cfi_def_cfa_offset 48
  30              		.cfi_offset 6, -48
  31 000f 53       		pushq	%rbx
  32              		.cfi_def_cfa_offset 56
  33              		.cfi_offset 3, -56
  34 0010 4D89CD   		movq	%r9, %r13
  35 0013 4889D3   		movq	%rdx, %rbx
  36 0016 31ED     		xorl	%ebp, %ebp
  37 0018 4881EC38 		subq	$65592, %rsp
  37      000100
  38              		.cfi_def_cfa_offset 65648
  39 001f 64488B04 		movq	%fs:40, %rax
  39      25280000 
  39      00
  40 0028 48898424 		movq	%rax, 65576(%rsp)
  40      28000100 
  41 0030 31C0     		xorl	%eax, %eax
  42 0032 400FB6C6 		movzbl	%sil, %eax
  43 0036 48894C24 		movq	%rcx, 16(%rsp)
  43      10
  44 003b 4C894424 		movq	%r8, 24(%rsp)
  44      18
  45 0040 8944240C 		movl	%eax, 12(%rsp)
  46              		.p2align 4,,10
  47 0044 0F1F4000 		.p2align 3
  48              	.L11:
  49 0048 488D7C24 		leaq	32(%rsp), %rdi
  49      20
  50 004d 4889D9   		movq	%rbx, %rcx
  51 0050 BAFBFF00 		movl	$65531, %edx
  51      00
  52 0055 BE010000 		movl	$1, %esi
  52      00
  53 005a E8000000 		call	fread
  53      00
  54 005f 4885C0   		testq	%rax, %rax
  55 0062 4989C4   		movq	%rax, %r12
  56 0065 7559     		jne	.L63
  57              	.L2:
  58 0067 4C89EE   		movq	%r13, %rsi
  59 006a 4C89F7   		movq	%r14, %rdi
  60 006d E8000000 		call	flAwaitAsyncWrites
  60      00
  61 0072 85C0     		testl	%eax, %eax
  62 0074 0F85F601 		jne	.L3
  62      0000
  63 007a 488B4424 		movq	24(%rsp), %rax
  63      18
  64 007f 66448938 		movw	%r15w, (%rax)
  65 0083 488B4424 		movq	16(%rsp), %rax
  65      10
  66 0088 488928   		movq	%rbp, (%rax)
  67 008b 31C0     		xorl	%eax, %eax
  68              	.L6:
  69 008d 488B9C24 		movq	65576(%rsp), %rbx
  69      28000100 
  70 0095 6448331C 		xorq	%fs:40, %rbx
  70      25280000 
  70      00
  71 009e 0F85E301 		jne	.L64
  71      0000
  72 00a4 4881C438 		addq	$65592, %rsp
  72      000100
  73              		.cfi_remember_state
  74              		.cfi_def_cfa_offset 56
  75 00ab 5B       		popq	%rbx
  76              		.cfi_def_cfa_offset 48
  77 00ac 5D       		popq	%rbp
  78              		.cfi_def_cfa_offset 40
  79 00ad 415C     		popq	%r12
  80              		.cfi_def_cfa_offset 32
  81 00af 415D     		popq	%r13
  82              		.cfi_def_cfa_offset 24
  83 00b1 415E     		popq	%r14
  84              		.cfi_def_cfa_offset 16
  85 00b3 415F     		popq	%r15
  86              		.cfi_def_cfa_offset 8
  87 00b5 C3       		ret
  88 00b6 662E0F1F 		.p2align 4,,10
  88      84000000 
  88      0000
  89              		.p2align 3
  90              	.L63:
  91              		.cfi_restore_state
  92 00c0 8B74240C 		movl	12(%rsp), %esi
  93 00c4 488D4C24 		leaq	32(%rsp), %rcx
  93      20
  94 00c9 4D89E8   		movq	%r13, %r8
  95 00cc 4889C2   		movq	%rax, %rdx
  96 00cf 4C89F7   		movq	%r14, %rdi
  97 00d2 4801C5   		addq	%rax, %rbp
  98 00d5 E8000000 		call	flWriteChannelAsync
  98      00
  99 00da 85C0     		testl	%eax, %eax
 100 00dc 0F858E01 		jne	.L3
 100      0000
 101 00e2 498D5424 		leaq	-16(%r12), %rdx
 101      F0
 102 00e7 498D4424 		leaq	-1(%r12), %rax
 102      FF
 103 00ec 48C1EA04 		shrq	$4, %rdx
 104 00f0 4883C201 		addq	$1, %rdx
 105 00f4 4889D1   		movq	%rdx, %rcx
 106 00f7 48C1E104 		salq	$4, %rcx
 107 00fb 4883F80E 		cmpq	$14, %rax
 108 00ff 0F865B01 		jbe	.L13
 108      0000
 109 0105 660FEFC0 		pxor	%xmm0, %xmm0
 110 0109 31F6     		xorl	%esi, %esi
 111              	.L5:
 112 010b 4889F7   		movq	%rsi, %rdi
 113 010e 660FEFDB 		pxor	%xmm3, %xmm3
 114 0112 48C1E704 		salq	$4, %rdi
 115 0116 4883C601 		addq	$1, %rsi
 116 011a 660F6F4C 		movdqa	32(%rsp,%rdi), %xmm1
 116      3C20
 117 0120 4839F2   		cmpq	%rsi, %rdx
 118 0123 660F6FD1 		movdqa	%xmm1, %xmm2
 119 0127 660F68CB 		punpckhbw	%xmm3, %xmm1
 120 012b 660F60D3 		punpcklbw	%xmm3, %xmm2
 121 012f 660FFDC2 		paddw	%xmm2, %xmm0
 122 0133 660FFDC1 		paddw	%xmm1, %xmm0
 123 0137 77D2     		ja	.L5
 124 0139 660F6FC8 		movdqa	%xmm0, %xmm1
 125 013d 488D7C24 		leaq	32(%rsp), %rdi
 125      20
 126 0142 4829C8   		subq	%rcx, %rax
 127 0145 660F73D9 		psrldq	$8, %xmm1
 127      08
 128 014a 660FFDC1 		paddw	%xmm1, %xmm0
 129 014e 660F6FC8 		movdqa	%xmm0, %xmm1
 130 0152 660F73D9 		psrldq	$4, %xmm1
 130      04
 131 0157 660FFDC1 		paddw	%xmm1, %xmm0
 132 015b 660F6FC8 		movdqa	%xmm0, %xmm1
 133 015f 660F73D9 		psrldq	$2, %xmm1
 133      02
 134 0164 660FFDC1 		paddw	%xmm1, %xmm0
 135 0168 660FC5D0 		pextrw	$0, %xmm0, %edx
 135      00
 136 016d 4101D7   		addl	%edx, %r15d
 137 0170 4C39E1   		cmpq	%r12, %rcx
 138 0173 488D140F 		leaq	(%rdi,%rcx), %rdx
 139 0177 0F84CB00 		je	.L9
 139      0000
 140              	.L4:
 141 017d 0FB60A   		movzbl	(%rdx), %ecx
 142 0180 4101CF   		addl	%ecx, %r15d
 143 0183 4885C0   		testq	%rax, %rax
 144 0186 0F84BC00 		je	.L9
 144      0000
 145 018c 0FB64A01 		movzbl	1(%rdx), %ecx
 146 0190 4101CF   		addl	%ecx, %r15d
 147 0193 4883F801 		cmpq	$1, %rax
 148 0197 0F84AB00 		je	.L9
 148      0000
 149 019d 0FB64A02 		movzbl	2(%rdx), %ecx
 150 01a1 4101CF   		addl	%ecx, %r15d
 151 01a4 4883F802 		cmpq	$2, %rax
 152 01a8 0F849A00 		je	.L9
 152      0000
 153 01ae 0FB64A03 		movzbl	3(%rdx), %ecx
 154 01b2 4101CF   		addl	%ecx, %r15d
 155 01b5 4883F803 		cmpq	$3, %rax
 156 01b9 0F848900 		je	.L9
 156      0000
 157 01bf 0FB64A04 		movzbl	4(%rdx), %ecx
 158 01c3 4101CF   		addl	%ecx, %r15d
 159 01c6 4883F804 		cmpq	$4, %rax
 160 01ca 747C     		je	.L9
 161 01cc 0FB64A05 		movzbl	5(%rdx), %ecx
 162 01d0 4101CF   		addl	%ecx, %r15d
 163 01d3 4883F805 		cmpq	$5, %rax
 164 01d7 746F     		je	.L9
 165 01d9 0FB64A06 		movzbl	6(%rdx), %ecx
 166 01dd 4101CF   		addl	%ecx, %r15d
 167 01e0 4883F806 		cmpq	$6, %rax
 168 01e4 7462     		je	.L9
 169 01e6 0FB64A07 		movzbl	7(%rdx), %ecx
 170 01ea 4101CF   		addl	%ecx, %r15d
 171 01ed 4883F807 		cmpq	$7, %rax
 172 01f1 7455     		je	.L9
 173 01f3 0FB64A08 		movzbl	8(%rdx), %ecx
 174 01f7 4101CF   		addl	%ecx, %r15d
 175 01fa 4883F808 		cmpq	$8, %rax
 176 01fe 7448     		je	.L9
 177 0200 0FB64A09 		movzbl	9(%rdx), %ecx
 178 0204 4101CF   		addl	%ecx, %r15d
 179 0207 4883F809 		cmpq	$9, %rax
 180 020b 743B     		je	.L9
 181 020d 0FB64A0A 		movzbl	10(%rdx), %ecx
 182 0211 4101CF   		addl	%ecx, %r15d
 183 0214 4883F80A 		cmpq	$10, %rax
 184 0218 742E     		je	.L9
 185 021a 0FB64A0B 		movzbl	11(%rdx), %ecx
 186 021e 4101CF   		addl	%ecx, %r15d
 187 0221 4883F80B 		cmpq	$11, %rax
 188 0225 7421     		je	.L9
 189 0227 0FB64A0C 		movzbl	12(%rdx), %ecx
 190 022b 4101CF   		addl	%ecx, %r15d
 191 022e 4883F80C 		cmpq	$12, %rax
 192 0232 7414     		je	.L9
 193 0234 0FB64A0D 		movzbl	13(%rdx), %ecx
 194 0238 4101CF   		addl	%ecx, %r15d
 195 023b 4883F80D 		cmpq	$13, %rax
 196 023f 7407     		je	.L9
 197 0241 0FB6420E 		movzbl	14(%rdx), %eax
 198 0245 4101C7   		addl	%eax, %r15d
 199              	.L9:
 200 0248 4981FCFB 		cmpq	$65531, %r12
 200      FF0000
 201 024f 0F84F3FD 		je	.L11
 201      FFFF
 202 0255 E90DFEFF 		jmp	.L2
 202      FF
 203 025a 660F1F44 		.p2align 4,,10
 203      0000
 204              		.p2align 3
 205              	.L13:
 206 0260 488D5424 		leaq	32(%rsp), %rdx
 206      20
 207 0265 E913FFFF 		jmp	.L4
 207      FF
 208 026a 660F1F44 		.p2align 4,,10
 208      0000
 209              		.p2align 3
 210              	.L3:
 211 0270 BE000000 		movl	$.LC0, %esi
 211      00
 212 0275 4C89EF   		movq	%r13, %rdi
 213 0278 E8000000 		call	errPrefix
 213      00
 214 027d B8010000 		movl	$1, %eax
 214      00
 215 0282 E906FEFF 		jmp	.L6
 215      FF
 216              	.L64:
 217 0287 E8000000 		call	__stack_chk_fail
 217      00
 218              		.cfi_endproc
 219              	.LFE59:
 221              		.section	.text.unlikely
 222              	.LCOLDE1:
 223              		.text
 224              	.LHOTE1:
 225              		.section	.rodata.str1.1
 226              	.LC2:
 227 000a 776200   		.string	"wb"
 228              	.LC3:
 229 000d 646F5265 		.string	"doRead()"
 229      61642829 
 229      00
 230              		.section	.rodata.str1.8,"aMS",@progbits,1
 231              		.align 8
 232              	.LC6:
 233 0000 52656164 		.string	"Read %d bytes (checksum 0x%04X) from channel %d at %f MiB/s\n"
 233      20256420 
 233      62797465 
 233      73202863 
 233      6865636B 
 234              		.section	.rodata.str1.1
 235              	.LC7:
 236 0016 726200   		.string	"rb"
 237              		.section	.rodata.str1.8
 238 003d 000000   		.align 8
 239              	.LC8:
 240 0040 57726F74 		.string	"Wrote %zu bytes (checksum 0x%04X) to channel %lu at %f MiB/s\n"
 240      6520257A 
 240      75206279 
 240      74657320 
 240      28636865 
 241              		.section	.rodata.str1.1
 242              	.LC9:
 243 0019 25732061 		.string	"%s at column %d\n  %s\n  "
 243      7420636F 
 243      6C756D6E 
 243      2025640A 
 243      20202573 
 244              	.LC10:
 245 0031 5E0A00   		.string	"^\n"
 246              	.LC11:
 247 0034 2000     		.string	" "
 248              		.section	.text.unlikely
 249              	.LCOLDB12:
 250              		.text
 251              	.LHOTB12:
 252 028c 0F1F4000 		.p2align 4,,15
 254              	parseLine.constprop.0:
 255              	.LFB71:
 256              		.cfi_startproc
 257 0290 4157     		pushq	%r15
 258              		.cfi_def_cfa_offset 16
 259              		.cfi_offset 15, -16
 260 0292 4156     		pushq	%r14
 261              		.cfi_def_cfa_offset 24
 262              		.cfi_offset 14, -24
 263 0294 4889D1   		movq	%rdx, %rcx
 264 0297 4155     		pushq	%r13
 265              		.cfi_def_cfa_offset 32
 266              		.cfi_offset 13, -32
 267 0299 4154     		pushq	%r12
 268              		.cfi_def_cfa_offset 40
 269              		.cfi_offset 12, -40
 270 029b 4989D7   		movq	%rdx, %r15
 271 029e 55       		pushq	%rbp
 272              		.cfi_def_cfa_offset 48
 273              		.cfi_offset 6, -48
 274 029f 53       		pushq	%rbx
 275              		.cfi_def_cfa_offset 56
 276              		.cfi_offset 3, -56
 277 02a0 31D2     		xorl	%edx, %edx
 278 02a2 4989FC   		movq	%rdi, %r12
 279 02a5 4889F3   		movq	%rsi, %rbx
 280 02a8 4881ECA8 		subq	$168, %rsp
 280      000000
 281              		.cfi_def_cfa_offset 224
 282 02af 64488B04 		movq	%fs:40, %rax
 282      25280000 
 282      00
 283 02b8 48898424 		movq	%rax, 152(%rsp)
 283      98000000 
 284 02c0 31C0     		xorl	%eax, %eax
 285 02c2 488D4424 		leaq	112(%rsp), %rax
 285      70
 286 02c7 48897424 		movq	%rsi, 24(%rsp)
 286      18
 287 02cc BE000400 		movl	$1024, %esi
 287      00
 288 02d1 48C74424 		movq	$0, 112(%rsp)
 288      70000000 
 288      00
 289 02da 48C74424 		movq	$0, 120(%rsp)
 289      78000000 
 289      00
 290 02e3 4889C7   		movq	%rax, %rdi
 291 02e6 48C78424 		movq	$0, 128(%rsp)
 291      80000000 
 291      00000000 
 292 02f2 48C78424 		movq	$0, 136(%rsp)
 292      88000000 
 292      00000000 
 293 02fe E8000000 		call	bufInitialise
 293      00
 294 0303 85C0     		testl	%eax, %eax
 295 0305 0F85D500 		jne	.L185
 295      0000
 296 030b 0FB603   		movzbl	(%rbx), %eax
 297 030e 4889DA   		movq	%rbx, %rdx
 298 0311 48891D00 		movq	%rbx, ptr(%rip)
 298      000000
 299              	.L67:
 300 0318 3C3B     		cmpb	$59, %al
 301 031a 0F84A800 		je	.L68
 301      0000
 302 0320 3C72     		cmpb	$114, %al
 303 0322 0F84F802 		je	.L69
 303      0000
 304 0328 3C77     		cmpb	$119, %al
 305 032a 0F848801 		je	.L70
 305      0000
 306 0330 3C2B     		cmpb	$43, %al
 307 0332 7414     		je	.L458
 308              	.L428:
 309 0334 41BC0500 		movl	$5, %r12d
 309      0000
 310 033a BD050000 		movl	$5, %ebp
 310      00
 311 033f E9A70000 		jmp	.L66
 311      00
 312              		.p2align 4,,10
 313 0344 0F1F4000 		.p2align 3
 314              	.L458:
 315 0348 488D5A01 		leaq	1(%rdx), %rbx
 316 034c 4C8D6C24 		leaq	72(%rsp), %r13
 316      48
 317 0351 48891D00 		movq	%rbx, ptr(%rip)
 317      000000
 318 0358 E8000000 		call	__errno_location
 318      00
 319 035d BA100000 		movl	$16, %edx
 319      00
 320 0362 4889C5   		movq	%rax, %rbp
 321 0365 C7000000 		movl	$0, (%rax)
 321      0000
 322 036b 4C89EE   		movq	%r13, %rsi
 323 036e 4889DF   		movq	%rbx, %rdi
 324 0371 E8000000 		call	strtoul
 324      00
 325 0376 8B5500   		movl	0(%rbp), %edx
 326 0379 85D2     		testl	%edx, %edx
 327 037b 0F857011 		jne	.L214
 327      0000
 328 0381 3DFF0000 		cmpl	$255, %eax
 328      00
 329 0386 0F875511 		ja	.L215
 329      0000
 330 038c 488B5424 		movq	72(%rsp), %rdx
 330      48
 331 0391 48891500 		movq	%rdx, ptr(%rip)
 331      000000
 332 0398 0FB612   		movzbl	(%rdx), %edx
 333 039b 84D2     		testb	%dl, %dl
 334 039d 7405     		je	.L223
 335 039f 80FA3B   		cmpb	$59, %dl
 336 03a2 7590     		jne	.L428
 337              	.L223:
 338 03a4 0FB6F0   		movzbl	%al, %esi
 339 03a7 4C89FA   		movq	%r15, %rdx
 340 03aa 4C89E7   		movq	%r12, %rdi
 341 03ad E8000000 		call	flSelectConduit
 341      00
 342 03b2 85C0     		testl	%eax, %eax
 343 03b4 752A     		jne	.L185
 344              	.L131:
 345 03b6 488B1500 		movq	ptr(%rip), %rdx
 345      000000
 346 03bd 0FB602   		movzbl	(%rdx), %eax
 347 03c0 3C3B     		cmpb	$59, %al
 348 03c2 0F85FB09 		jne	.L459
 348      0000
 349              	.L68:
 350 03c8 488D4A01 		leaq	1(%rdx), %rcx
 351 03cc 0FB64201 		movzbl	1(%rdx), %eax
 352 03d0 48890D00 		movq	%rcx, ptr(%rip)
 352      000000
 353 03d7 4889CA   		movq	%rcx, %rdx
 354 03da E939FFFF 		jmp	.L67
 354      FF
 355 03df 90       		.p2align 4,,10
 356              		.p2align 3
 357              	.L185:
 358 03e0 41BC0100 		movl	$1, %r12d
 358      0000
 359 03e6 BD010000 		movl	$1, %ebp
 359      00
 360              	.L66:
 361 03eb 488D7C24 		leaq	112(%rsp), %rdi
 361      70
 362 03f0 31DB     		xorl	%ebx, %ebx
 363 03f2 4531ED   		xorl	%r13d, %r13d
 364 03f5 E8000000 		call	bufDestroy
 364      00
 365              	.L175:
 366 03fa 4C89EF   		movq	%r13, %rdi
 367 03fd E8000000 		call	free
 367      00
 368 0402 4889DF   		movq	%rbx, %rdi
 369 0405 E8000000 		call	free
 369      00
 370 040a 83FD01   		cmpl	$1, %ebp
 371 040d 7679     		jbe	.L176
 372 040f 488B4424 		movq	24(%rsp), %rax
 372      18
 373 0414 4C8B3500 		movq	ptr(%rip), %r14
 373      000000
 374 041b BA000000 		movl	$.LC9, %edx
 374      00
 375 0420 488B0CED 		movq	errMessages(,%rbp,8), %rcx
 375      00000000 
 376 0428 488B3D00 		movq	stderr(%rip), %rdi
 376      000000
 377 042f BE010000 		movl	$1, %esi
 377      00
 378 0434 31DB     		xorl	%ebx, %ebx
 379 0436 4929C6   		subq	%rax, %r14
 380 0439 4989C1   		movq	%rax, %r9
 381 043c 31C0     		xorl	%eax, %eax
 382 043e 4589F0   		movl	%r14d, %r8d
 383 0441 4589F5   		movl	%r14d, %r13d
 384 0444 E8000000 		call	__fprintf_chk
 384      00
 385 0449 4585F6   		testl	%r14d, %r14d
 386 044c 7E22     		jle	.L178
 387 044e 6690     		.p2align 4,,10
 388              		.p2align 3
 389              	.L350:
 390 0450 488B3D00 		movq	stderr(%rip), %rdi
 390      000000
 391 0457 31C0     		xorl	%eax, %eax
 392 0459 BA000000 		movl	$.LC11, %edx
 392      00
 393 045e BE010000 		movl	$1, %esi
 393      00
 394 0463 83C301   		addl	$1, %ebx
 395 0466 E8000000 		call	__fprintf_chk
 395      00
 396 046b 4139DD   		cmpl	%ebx, %r13d
 397 046e 75E0     		jne	.L350
 398              	.L178:
 399 0470 488B3D00 		movq	stderr(%rip), %rdi
 399      000000
 400 0477 BA000000 		movl	$.LC10, %edx
 400      00
 401 047c BE010000 		movl	$1, %esi
 401      00
 402 0481 31C0     		xorl	%eax, %eax
 403 0483 E8000000 		call	__fprintf_chk
 403      00
 404              	.L176:
 405 0488 488B8C24 		movq	152(%rsp), %rcx
 405      98000000 
 406 0490 6448330C 		xorq	%fs:40, %rcx
 406      25280000 
 406      00
 407 0499 4489E0   		movl	%r12d, %eax
 408 049c 0F856B11 		jne	.L460
 408      0000
 409 04a2 4881C4A8 		addq	$168, %rsp
 409      000000
 410              		.cfi_remember_state
 411              		.cfi_def_cfa_offset 56
 412 04a9 5B       		popq	%rbx
 413              		.cfi_def_cfa_offset 48
 414 04aa 5D       		popq	%rbp
 415              		.cfi_def_cfa_offset 40
 416 04ab 415C     		popq	%r12
 417              		.cfi_def_cfa_offset 32
 418 04ad 415D     		popq	%r13
 419              		.cfi_def_cfa_offset 24
 420 04af 415E     		popq	%r14
 421              		.cfi_def_cfa_offset 16
 422 04b1 415F     		popq	%r15
 423              		.cfi_def_cfa_offset 8
 424 04b3 C3       		ret
 425              		.p2align 4,,10
 426 04b4 0F1F4000 		.p2align 3
 427              	.L70:
 428              		.cfi_restore_state
 429 04b8 488D5A01 		leaq	1(%rdx), %rbx
 430 04bc 4C8D6C24 		leaq	72(%rsp), %r13
 430      48
 431 04c1 48C74424 		movq	$1, 64(%rsp)
 431      40010000 
 431      00
 432 04ca 48891D00 		movq	%rbx, ptr(%rip)
 432      000000
 433 04d1 E8000000 		call	__errno_location
 433      00
 434 04d6 BA100000 		movl	$16, %edx
 434      00
 435 04db 4889C5   		movq	%rax, %rbp
 436 04de C7000000 		movl	$0, (%rax)
 436      0000
 437 04e4 4C89EE   		movq	%r13, %rsi
 438 04e7 4889DF   		movq	%rbx, %rdi
 439 04ea E8000000 		call	strtoul
 439      00
 440 04ef 8B6D00   		movl	0(%rbp), %ebp
 441 04f2 4989C6   		movq	%rax, %r14
 442 04f5 85ED     		testl	%ebp, %ebp
 443 04f7 0F852A10 		jne	.L203
 443      0000
 444 04fd 4883F87F 		cmpq	$127, %rax
 445 0501 0F870210 		ja	.L204
 445      0000
 446 0507 488B4C24 		movq	72(%rsp), %rcx
 446      48
 447 050c 803920   		cmpb	$32, (%rcx)
 448 050f 48890D00 		movq	%rcx, ptr(%rip)
 448      000000
 449 0516 0F853805 		jne	.L145
 449      0000
 450 051c 0FB65101 		movzbl	1(%rcx), %edx
 451 0520 488D7101 		leaq	1(%rcx), %rsi
 452 0524 48893500 		movq	%rsi, ptr(%rip)
 452      000000
 453 052b 80FA22   		cmpb	$34, %dl
 454 052e 0F840C04 		je	.L222
 454      0000
 455 0534 80FA27   		cmpb	$39, %dl
 456 0537 0F840304 		je	.L222
 456      0000
 457 053d 8D42D0   		leal	-48(%rdx), %eax
 458 0540 3C09     		cmpb	$9, %al
 459 0542 760E     		jbe	.L144
 460 0544 83E2DF   		andl	$-33, %edx
 461 0547 8D42BF   		leal	-65(%rdx), %eax
 462 054a 3C05     		cmpb	$5, %al
 463 054c 0F870205 		ja	.L145
 463      0000
 464              	.L144:
 465 0552 488D4102 		leaq	2(%rcx), %rax
 466 0556 662E0F1F 		.p2align 4,,10
 466      84000000 
 466      0000
 467              		.p2align 3
 468              	.L181:
 469 0560 0FB610   		movzbl	(%rax), %edx
 470 0563 8D7AD0   		leal	-48(%rdx), %edi
 471 0566 4080FF09 		cmpb	$9, %dil
 472 056a 0F862005 		jbe	.L146
 472      0000
 473 0570 83E2DF   		andl	$-33, %edx
 474 0573 83EA41   		subl	$65, %edx
 475 0576 80FA05   		cmpb	$5, %dl
 476 0579 0F861105 		jbe	.L146
 476      0000
 477 057f 4829F0   		subq	%rsi, %rax
 478 0582 A801     		testb	$1, %al
 479 0584 0F85F70E 		jne	.L461
 479      0000
 480 058a 48D1E8   		shrq	%rax
 481 058d 48897424 		movq	%rsi, 16(%rsp)
 481      10
 482 0592 48894C24 		movq	%rcx, 8(%rsp)
 482      08
 483 0597 4989C5   		movq	%rax, %r13
 484 059a 4889C7   		movq	%rax, %rdi
 485 059d 48894424 		movq	%rax, 64(%rsp)
 485      40
 486 05a2 E8000000 		call	malloc
 486      00
 487 05a7 31FF     		xorl	%edi, %edi
 488 05a9 4D85ED   		testq	%r13, %r13
 489 05ac 4889C3   		movq	%rax, %rbx
 490 05af 488B4C24 		movq	8(%rsp), %rcx
 490      08
 491 05b4 488B7424 		movq	16(%rsp), %rsi
 491      10
 492 05b9 753D     		jne	.L351
 493 05bb E9010500 		jmp	.L157
 493      00
 494              		.p2align 4,,10
 495              		.p2align 3
 496              	.L463:
 497 05c0 8D42A9   		leal	-87(%rdx), %eax
 498              	.L151:
 499 05c3 440FB644 		movzbl	2(%rcx,%rdi,2), %r8d
 499      7902
 500 05c9 418D50D0 		leal	-48(%r8), %edx
 501 05cd 80FA09   		cmpb	$9, %dl
 502 05d0 7611     		jbe	.L155
 503 05d2 418D509F 		leal	-97(%r8), %edx
 504 05d6 80FA05   		cmpb	$5, %dl
 505 05d9 0F87C104 		ja	.L154
 505      0000
 506 05df 418D50A9 		leal	-87(%r8), %edx
 507              	.L155:
 508 05e3 C1E004   		sall	$4, %eax
 509 05e6 09D0     		orl	%edx, %eax
 510 05e8 88043B   		movb	%al, (%rbx,%rdi)
 511              	.L153:
 512 05eb 4883C701 		addq	$1, %rdi
 513 05ef 4939FD   		cmpq	%rdi, %r13
 514 05f2 0F84BE04 		je	.L462
 514      0000
 515              	.L351:
 516 05f8 0FB65479 		movzbl	1(%rcx,%rdi,2), %edx
 516      01
 517 05fd 8D42D0   		leal	-48(%rdx), %eax
 518 0600 3C09     		cmpb	$9, %al
 519 0602 76BF     		jbe	.L151
 520 0604 8D429F   		leal	-97(%rdx), %eax
 521 0607 3C05     		cmpb	$5, %al
 522 0609 76B5     		jbe	.L463
 523 060b 8D42BF   		leal	-65(%rdx), %eax
 524 060e 3C05     		cmpb	$5, %al
 525 0610 77D9     		ja	.L153
 526 0612 8D42C9   		leal	-55(%rdx), %eax
 527 0615 EBAC     		jmp	.L151
 528 0617 660F1F84 		.p2align 4,,10
 528      00000000 
 528      00
 529              		.p2align 3
 530              	.L69:
 531 0620 488D5A01 		leaq	1(%rdx), %rbx
 532 0624 48891D00 		movq	%rbx, ptr(%rip)
 532      000000
 533 062b E8000000 		call	__errno_location
 533      00
 534 0630 488D7424 		leaq	64(%rsp), %rsi
 534      40
 535 0635 4989C5   		movq	%rax, %r13
 536 0638 4889DF   		movq	%rbx, %rdi
 537 063b C7000000 		movl	$0, (%rax)
 537      0000
 538 0641 BA100000 		movl	$16, %edx
 538      00
 539 0646 E8000000 		call	strtoul
 539      00
 540 064b 418B5D00 		movl	0(%r13), %ebx
 541 064f 48894424 		movq	%rax, 32(%rsp)
 541      20
 542 0654 85DB     		testl	%ebx, %ebx
 543 0656 0F85E90E 		jne	.L76
 543      0000
 544 065c 837C2420 		cmpl	$127, 32(%rsp)
 544      7F
 545 0661 0F87FA0E 		ja	.L187
 545      0000
 546 0667 488B5424 		movq	64(%rsp), %rdx
 546      40
 547 066c 0FB602   		movzbl	(%rdx), %eax
 548 066f 48891500 		movq	%rdx, ptr(%rip)
 548      000000
 549 0676 A8DF     		testb	$-33, %al
 550 0678 7408     		je	.L74
 551 067a 3C3B     		cmpb	$59, %al
 552 067c 0F851207 		jne	.L77
 552      0000
 553              	.L74:
 554 0682 3C20     		cmpb	$32, %al
 555 0684 41BE0100 		movl	$1, %r14d
 555      0000
 556 068a BD010000 		movl	$1, %ebp
 556      00
 557 068f 0F84B006 		je	.L464
 557      0000
 558              	.L75:
 559 0695 488D7C24 		leaq	112(%rsp), %rdi
 559      70
 560 069a 31F6     		xorl	%esi, %esi
 561 069c 4C89F9   		movq	%r15, %rcx
 562 069f 4C89F2   		movq	%r14, %rdx
 563 06a2 4C8B6C24 		movq	120(%rsp), %r13
 563      78
 564 06a7 E8000000 		call	bufAppendConst
 564      00
 565 06ac 85C0     		testl	%eax, %eax
 566 06ae 0F856E02 		jne	.L179
 566      0000
 567 06b4 488D7C24 		leaq	80(%rsp), %rdi
 567      50
 568 06b9 31F6     		xorl	%esi, %esi
 569 06bb E8000000 		call	gettimeofday
 569      00
 570 06c0 0FB67424 		movzbl	32(%rsp), %esi
 570      20
 571 06c5 4C89E9   		movq	%r13, %rcx
 572 06c8 48034C24 		addq	112(%rsp), %rcx
 572      70
 573 06cd 41B9FFFF 		movl	$4294967295, %r9d
 573      FFFF
 574 06d3 4D89F8   		movq	%r15, %r8
 575 06d6 4C89F2   		movq	%r14, %rdx
 576 06d9 4C89E7   		movq	%r12, %rdi
 577 06dc E8000000 		call	flReadChannel
 577      00
 578 06e1 488D7C24 		leaq	96(%rsp), %rdi
 578      60
 579 06e6 31F6     		xorl	%esi, %esi
 580 06e8 89442408 		movl	%eax, 8(%rsp)
 581 06ec E8000000 		call	gettimeofday
 581      00
 582 06f1 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 582      000000
 583 06f8 0F841802 		je	.L116
 583      0000
 584 06fe 4C8B4424 		movq	112(%rsp), %r8
 584      70
 585 0703 4D85F6   		testq	%r14, %r14
 586 0706 498D7EFF 		leaq	-1(%r14), %rdi
 587 070a 4B8D1428 		leaq	(%r8,%r13), %rdx
 588 070e 0F849A01 		je	.L117
 588      0000
 589 0714 4889D6   		movq	%rdx, %rsi
 590 0717 48F7DE   		negq	%rsi
 591 071a 83E60F   		andl	$15, %esi
 592 071d 4C39F6   		cmpq	%r14, %rsi
 593 0720 490F47F6 		cmova	%r14, %rsi
 594 0724 4983FE13 		cmpq	$19, %r14
 595 0728 0F87920D 		ja	.L465
 595      0000
 596 072e 4C89F6   		movq	%r14, %rsi
 597              	.L118:
 598 0731 488D0C32 		leaq	(%rdx,%rsi), %rcx
 599 0735 4889F8   		movq	%rdi, %rax
 600 0738 31DB     		xorl	%ebx, %ebx
 601 073a 660F1F44 		.p2align 4,,10
 601      0000
 602              		.p2align 3
 603              	.L120:
 604 0740 4883C201 		addq	$1, %rdx
 605 0744 440FB64A 		movzbl	-1(%rdx), %r9d
 605      FF
 606 0749 4883E801 		subq	$1, %rax
 607 074d 4401CB   		addl	%r9d, %ebx
 608 0750 4839CA   		cmpq	%rcx, %rdx
 609 0753 75EB     		jne	.L120
 610 0755 4939F6   		cmpq	%rsi, %r14
 611 0758 0F844D01 		je	.L121
 611      0000
 612              	.L119:
 613 075e 4929F6   		subq	%rsi, %r14
 614 0761 4829F7   		subq	%rsi, %rdi
 615 0764 498D56F0 		leaq	-16(%r14), %rdx
 616 0768 4D89F2   		movq	%r14, %r10
 617 076b 48C1EA04 		shrq	$4, %rdx
 618 076f 4883C201 		addq	$1, %rdx
 619 0773 4989D1   		movq	%rdx, %r9
 620 0776 49C1E104 		salq	$4, %r9
 621 077a 4883FF0E 		cmpq	$14, %rdi
 622 077e 7673     		jbe	.L122
 623 0780 660FEFC0 		pxor	%xmm0, %xmm0
 624 0784 4C01EE   		addq	%r13, %rsi
 625 0787 660FEFDB 		pxor	%xmm3, %xmm3
 626 078b 4901F0   		addq	%rsi, %r8
 627 078e 31F6     		xorl	%esi, %esi
 628              	.L123:
 629 0790 66410F6F 		movdqa	(%r8), %xmm1
 629      08
 630 0795 4883C601 		addq	$1, %rsi
 631 0799 4983C010 		addq	$16, %r8
 632 079d 4839D6   		cmpq	%rdx, %rsi
 633 07a0 660F6FD1 		movdqa	%xmm1, %xmm2
 634 07a4 660F68CB 		punpckhbw	%xmm3, %xmm1
 635 07a8 660F60D3 		punpcklbw	%xmm3, %xmm2
 636 07ac 660FFDC2 		paddw	%xmm2, %xmm0
 637 07b0 660FFDC1 		paddw	%xmm1, %xmm0
 638 07b4 72DA     		jb	.L123
 639 07b6 660F6FC8 		movdqa	%xmm0, %xmm1
 640 07ba 4C01C9   		addq	%r9, %rcx
 641 07bd 4C29C8   		subq	%r9, %rax
 642 07c0 660F73D9 		psrldq	$8, %xmm1
 642      08
 643 07c5 660FFDC1 		paddw	%xmm1, %xmm0
 644 07c9 660F6FC8 		movdqa	%xmm0, %xmm1
 645 07cd 660F73D9 		psrldq	$4, %xmm1
 645      04
 646 07d2 660FFDC1 		paddw	%xmm1, %xmm0
 647 07d6 660F6FC8 		movdqa	%xmm0, %xmm1
 648 07da 660F73D9 		psrldq	$2, %xmm1
 648      02
 649 07df 660FFDC1 		paddw	%xmm1, %xmm0
 650 07e3 660FC5D0 		pextrw	$0, %xmm0, %edx
 650      00
 651 07e8 01D3     		addl	%edx, %ebx
 652 07ea 4D39CA   		cmpq	%r9, %r10
 653 07ed 0F84B800 		je	.L121
 653      0000
 654              	.L122:
 655 07f3 0FB611   		movzbl	(%rcx), %edx
 656 07f6 01D3     		addl	%edx, %ebx
 657 07f8 4885C0   		testq	%rax, %rax
 658 07fb 0F84AA00 		je	.L121
 658      0000
 659 0801 0FB65101 		movzbl	1(%rcx), %edx
 660 0805 01D3     		addl	%edx, %ebx
 661 0807 4883F801 		cmpq	$1, %rax
 662 080b 0F849A00 		je	.L121
 662      0000
 663 0811 0FB65102 		movzbl	2(%rcx), %edx
 664 0815 01D3     		addl	%edx, %ebx
 665 0817 4883F802 		cmpq	$2, %rax
 666 081b 0F848A00 		je	.L121
 666      0000
 667 0821 0FB65103 		movzbl	3(%rcx), %edx
 668 0825 01D3     		addl	%edx, %ebx
 669 0827 4883F803 		cmpq	$3, %rax
 670 082b 747E     		je	.L121
 671 082d 0FB65104 		movzbl	4(%rcx), %edx
 672 0831 01D3     		addl	%edx, %ebx
 673 0833 4883F804 		cmpq	$4, %rax
 674 0837 7472     		je	.L121
 675 0839 0FB65105 		movzbl	5(%rcx), %edx
 676 083d 01D3     		addl	%edx, %ebx
 677 083f 4883F805 		cmpq	$5, %rax
 678 0843 7466     		je	.L121
 679 0845 0FB65106 		movzbl	6(%rcx), %edx
 680 0849 01D3     		addl	%edx, %ebx
 681 084b 4883F806 		cmpq	$6, %rax
 682 084f 745A     		je	.L121
 683 0851 0FB65107 		movzbl	7(%rcx), %edx
 684 0855 01D3     		addl	%edx, %ebx
 685 0857 4883F807 		cmpq	$7, %rax
 686 085b 744E     		je	.L121
 687 085d 0FB65108 		movzbl	8(%rcx), %edx
 688 0861 01D3     		addl	%edx, %ebx
 689 0863 4883F808 		cmpq	$8, %rax
 690 0867 7442     		je	.L121
 691 0869 0FB65109 		movzbl	9(%rcx), %edx
 692 086d 01D3     		addl	%edx, %ebx
 693 086f 4883F809 		cmpq	$9, %rax
 694 0873 7436     		je	.L121
 695 0875 0FB6510A 		movzbl	10(%rcx), %edx
 696 0879 01D3     		addl	%edx, %ebx
 697 087b 4883F80A 		cmpq	$10, %rax
 698 087f 742A     		je	.L121
 699 0881 0FB6510B 		movzbl	11(%rcx), %edx
 700 0885 01D3     		addl	%edx, %ebx
 701 0887 4883F80B 		cmpq	$11, %rax
 702 088b 741E     		je	.L121
 703 088d 0FB6510C 		movzbl	12(%rcx), %edx
 704 0891 01D3     		addl	%edx, %ebx
 705 0893 4883F80C 		cmpq	$12, %rax
 706 0897 7412     		je	.L121
 707 0899 0FB6510D 		movzbl	13(%rcx), %edx
 708 089d 01D3     		addl	%edx, %ebx
 709 089f 4883F80D 		cmpq	$13, %rax
 710 08a3 7406     		je	.L121
 711 08a5 0FB6410E 		movzbl	14(%rcx), %eax
 712 08a9 01C3     		addl	%eax, %ebx
 713              	.L121:
 714 08ab 0FB7DB   		movzwl	%bx, %ebx
 715              	.L117:
 716 08ae 48694424 		imulq	$1000000, 96(%rsp), %rax
 716      6040420F 
 716      00
 717 08b7 48695424 		imulq	$1000000, 80(%rsp), %rdx
 717      5040420F 
 717      00
 718 08c0 660FEFC0 		pxor	%xmm0, %xmm0
 719 08c4 448B4424 		movl	32(%rsp), %r8d
 719      20
 720 08c9 660FEFC9 		pxor	%xmm1, %xmm1
 721 08cd 89D9     		movl	%ebx, %ecx
 722 08cf 48034424 		addq	104(%rsp), %rax
 722      68
 723 08d4 BE000000 		movl	$.LC6, %esi
 723      00
 724 08d9 BF010000 		movl	$1, %edi
 724      00
 725 08de 48035424 		addq	88(%rsp), %rdx
 725      58
 726 08e3 4829D0   		subq	%rdx, %rax
 727 08e6 89EA     		movl	%ebp, %edx
 728 08e8 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 728      C0
 729 08ed 89E8     		movl	%ebp, %eax
 730 08ef F2480F2A 		cvtsi2sdq	%rax, %xmm1
 730      C8
 731 08f4 B8010000 		movl	$1, %eax
 731      00
 732 08f9 F20F5E05 		divsd	.LC4(%rip), %xmm0
 732      00000000 
 733 0901 F20F5905 		mulsd	.LC5(%rip), %xmm0
 733      00000000 
 734 0909 F20F5EC8 		divsd	%xmm0, %xmm1
 735 090d 660F28C1 		movapd	%xmm1, %xmm0
 736 0911 E8000000 		call	__printf_chk
 736      00
 737              	.L116:
 738 0916 8B7C2408 		movl	8(%rsp), %edi
 739 091a 85FF     		testl	%edi, %edi
 740 091c 0F8494FA 		je	.L131
 740      FFFF
 741              	.L179:
 742 0922 41BC0100 		movl	$1, %r12d
 742      0000
 743 0928 48C74424 		movq	$0, 8(%rsp)
 743      08000000 
 743      00
 744 0931 4531ED   		xorl	%r13d, %r13d
 745 0934 BD010000 		movl	$1, %ebp
 745      00
 746              	.L137:
 747 0939 31DB     		xorl	%ebx, %ebx
 748 093b E92D0100 		jmp	.L130
 748      00
 749              		.p2align 4,,10
 750              		.p2align 3
 751              	.L222:
 752 0940 31F6     		xorl	%esi, %esi
 753 0942 66897424 		movw	%si, 60(%rsp)
 753      3C
 754 0947 0FB64102 		movzbl	2(%rcx), %eax
 755 094b 488D7102 		leaq	2(%rcx), %rsi
 756 094f 48893500 		movq	%rsi, ptr(%rip)
 756      000000
 757 0956 38C2     		cmpb	%al, %dl
 758 0958 0F84A30B 		je	.L205
 758      0000
 759 095e 84C0     		testb	%al, %al
 760 0960 0F84C103 		je	.L207
 760      0000
 761 0966 4889F3   		movq	%rsi, %rbx
 762 0969 EB0D     		jmp	.L138
 763 096b 0F1F4400 		.p2align 4,,10
 763      00
 764              		.p2align 3
 765              	.L466:
 766 0970 84C0     		testb	%al, %al
 767 0972 0F84AF03 		je	.L207
 767      0000
 768              	.L138:
 769 0978 4883C301 		addq	$1, %rbx
 770 097c 0FB603   		movzbl	(%rbx), %eax
 771 097f 38C2     		cmpb	%al, %dl
 772 0981 75ED     		jne	.L466
 773              	.L136:
 774 0983 84C0     		testb	%al, %al
 775 0985 0F849C03 		je	.L207
 775      0000
 776 098b 4889DD   		movq	%rbx, %rbp
 777 098e 48897424 		movq	%rsi, 8(%rsp)
 777      08
 778 0993 4829F5   		subq	%rsi, %rbp
 779 0996 488D7D01 		leaq	1(%rbp), %rdi
 780 099a E8000000 		call	malloc
 780      00
 781 099f 4885C0   		testq	%rax, %rax
 782 09a2 4989C5   		movq	%rax, %r13
 783 09a5 0F842D0C 		je	.L208
 783      0000
 784 09ab 488B7424 		movq	8(%rsp), %rsi
 784      08
 785 09b0 4839F3   		cmpq	%rsi, %rbx
 786 09b3 0F84060C 		je	.L209
 786      0000
 787 09b9 4889EA   		movq	%rbp, %rdx
 788 09bc 4889C7   		movq	%rax, %rdi
 789 09bf 4883C301 		addq	$1, %rbx
 790 09c3 E8000000 		call	strncpy
 790      00
 791 09c8 41C6442D 		movb	$0, 0(%r13,%rbp)
 791      0000
 792 09ce BE000000 		movl	$.LC7, %esi
 792      00
 793 09d3 4C89EF   		movq	%r13, %rdi
 794 09d6 48891D00 		movq	%rbx, ptr(%rip)
 794      000000
 795 09dd E8000000 		call	fopen
 795      00
 796 09e2 4885C0   		testq	%rax, %rax
 797 09e5 4889C3   		movq	%rax, %rbx
 798 09e8 48894424 		movq	%rax, 8(%rsp)
 798      08
 799 09ed 0F84BC0B 		je	.L210
 799      0000
 800 09f3 4C89EF   		movq	%r13, %rdi
 801 09f6 E8000000 		call	free
 801      00
 802 09fb 488D7C24 		leaq	80(%rsp), %rdi
 802      50
 803 0a00 31F6     		xorl	%esi, %esi
 804 0a02 E8000000 		call	gettimeofday
 804      00
 805 0a07 4C8D4424 		leaq	60(%rsp), %r8
 805      3C
 806 0a0c 488D4C24 		leaq	64(%rsp), %rcx
 806      40
 807 0a11 4D89F9   		movq	%r15, %r9
 808 0a14 4889DA   		movq	%rbx, %rdx
 809 0a17 4489F6   		movl	%r14d, %esi
 810 0a1a 4C89E7   		movq	%r12, %rdi
 811 0a1d E8DEF5FF 		call	doWrite
 811      FF
 812 0a22 488D7C24 		leaq	96(%rsp), %rdi
 812      60
 813 0a27 31F6     		xorl	%esi, %esi
 814 0a29 89C5     		movl	%eax, %ebp
 815 0a2b E8000000 		call	gettimeofday
 815      00
 816 0a30 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 816      000000
 817 0a37 0F85B403 		jne	.L467
 817      0000
 818              	.L139:
 819 0a3d 85ED     		testl	%ebp, %ebp
 820 0a3f 0F85910A 		jne	.L468
 820      0000
 821 0a45 488B7C24 		movq	8(%rsp), %rdi
 821      08
 822 0a4a E8000000 		call	fclose
 822      00
 823 0a4f E962F9FF 		jmp	.L131
 823      FF
 824              	.L145:
 825 0a54 41BC0500 		movl	$5, %r12d
 825      0000
 826 0a5a 48C74424 		movq	$0, 8(%rsp)
 826      08000000 
 826      00
 827 0a63 4531ED   		xorl	%r13d, %r13d
 828 0a66 31DB     		xorl	%ebx, %ebx
 829 0a68 BD050000 		movl	$5, %ebp
 829      00
 830              	.L130:
 831 0a6d 488D7C24 		leaq	112(%rsp), %rdi
 831      70
 832 0a72 E8000000 		call	bufDestroy
 832      00
 833 0a77 488B7C24 		movq	8(%rsp), %rdi
 833      08
 834 0a7c 4885FF   		testq	%rdi, %rdi
 835 0a7f 0F8475F9 		je	.L175
 835      FFFF
 836 0a85 E8000000 		call	fclose
 836      00
 837 0a8a E96BF9FF 		jmp	.L175
 837      FF
 838 0a8f 90       		.p2align 4,,10
 839              		.p2align 3
 840              	.L146:
 841 0a90 4883C001 		addq	$1, %rax
 842 0a94 E9C7FAFF 		jmp	.L181
 842      FF
 843 0a99 0F1F8000 		.p2align 4,,10
 843      000000
 844              		.p2align 3
 845              	.L154:
 846 0aa0 418D50BF 		leal	-65(%r8), %edx
 847 0aa4 80FA05   		cmpb	$5, %dl
 848 0aa7 0F873EFB 		ja	.L153
 848      FFFF
 849 0aad 418D50C9 		leal	-55(%r8), %edx
 850 0ab1 E92DFBFF 		jmp	.L155
 850      FF
 851              	.L462:
 852 0ab6 4A8D046E 		leaq	(%rsi,%r13,2), %rax
 853 0aba 48890500 		movq	%rax, ptr(%rip)
 853      000000
 854              	.L157:
 855 0ac1 488D7C24 		leaq	80(%rsp), %rdi
 855      50
 856 0ac6 31F6     		xorl	%esi, %esi
 857 0ac8 E8000000 		call	gettimeofday
 857      00
 858 0acd 488B5424 		movq	64(%rsp), %rdx
 858      40
 859 0ad2 4D89F8   		movq	%r15, %r8
 860 0ad5 4889D9   		movq	%rbx, %rcx
 861 0ad8 4489F6   		movl	%r14d, %esi
 862 0adb 4C89E7   		movq	%r12, %rdi
 863 0ade E8000000 		call	flWriteChannel
 863      00
 864 0ae3 488D7C24 		leaq	96(%rsp), %rdi
 864      60
 865 0ae8 31F6     		xorl	%esi, %esi
 866 0aea 4189C5   		movl	%eax, %r13d
 867 0aed E8000000 		call	gettimeofday
 867      00
 868 0af2 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 868      000000
 869 0af9 0F841202 		je	.L150
 869      0000
 870 0aff 488B5424 		movq	64(%rsp), %rdx
 870      40
 871 0b04 4885D2   		testq	%rdx, %rdx
 872 0b07 4C8D4AFF 		leaq	-1(%rdx), %r9
 873 0b0b 0F849901 		je	.L158
 873      0000
 874 0b11 4989D8   		movq	%rbx, %r8
 875 0b14 49F7D8   		negq	%r8
 876 0b17 4183E00F 		andl	$15, %r8d
 877 0b1b 4939D0   		cmpq	%rdx, %r8
 878 0b1e 4C0F47C2 		cmova	%rdx, %r8
 879 0b22 4883FA13 		cmpq	$19, %rdx
 880 0b26 0F873903 		ja	.L469
 880      0000
 881 0b2c 4989D0   		movq	%rdx, %r8
 882              	.L159:
 883 0b2f 4A8D3C03 		leaq	(%rbx,%r8), %rdi
 884 0b33 4C89C9   		movq	%r9, %rcx
 885 0b36 4889D8   		movq	%rbx, %rax
 886 0b39 31ED     		xorl	%ebp, %ebp
 887 0b3b 0F1F4400 		.p2align 4,,10
 887      00
 888              		.p2align 3
 889              	.L161:
 890 0b40 4883C001 		addq	$1, %rax
 891 0b44 0FB670FF 		movzbl	-1(%rax), %esi
 892 0b48 4883E901 		subq	$1, %rcx
 893 0b4c 01F5     		addl	%esi, %ebp
 894 0b4e 4839F8   		cmpq	%rdi, %rax
 895 0b51 75ED     		jne	.L161
 896 0b53 4C39C2   		cmpq	%r8, %rdx
 897 0b56 0F844B01 		je	.L162
 897      0000
 898              	.L160:
 899 0b5c 4989D2   		movq	%rdx, %r10
 900 0b5f 4D29C1   		subq	%r8, %r9
 901 0b62 4D29C2   		subq	%r8, %r10
 902 0b65 498D42F0 		leaq	-16(%r10), %rax
 903 0b69 48C1E804 		shrq	$4, %rax
 904 0b6d 4883C001 		addq	$1, %rax
 905 0b71 4889C6   		movq	%rax, %rsi
 906 0b74 48C1E604 		salq	$4, %rsi
 907 0b78 4983F90E 		cmpq	$14, %r9
 908 0b7c 7671     		jbe	.L163
 909 0b7e 660FEFC0 		pxor	%xmm0, %xmm0
 910 0b82 4901D8   		addq	%rbx, %r8
 911 0b85 4531C9   		xorl	%r9d, %r9d
 912 0b88 660FEFDB 		pxor	%xmm3, %xmm3
 913              	.L164:
 914 0b8c 66410F6F 		movdqa	(%r8), %xmm1
 914      08
 915 0b91 4983C101 		addq	$1, %r9
 916 0b95 4983C010 		addq	$16, %r8
 917 0b99 4939C1   		cmpq	%rax, %r9
 918 0b9c 660F6FD1 		movdqa	%xmm1, %xmm2
 919 0ba0 660F68CB 		punpckhbw	%xmm3, %xmm1
 920 0ba4 660F60D3 		punpcklbw	%xmm3, %xmm2
 921 0ba8 660FFDC2 		paddw	%xmm2, %xmm0
 922 0bac 660FFDC1 		paddw	%xmm1, %xmm0
 923 0bb0 72DA     		jb	.L164
 924 0bb2 660F6FC8 		movdqa	%xmm0, %xmm1
 925 0bb6 4801F7   		addq	%rsi, %rdi
 926 0bb9 4829F1   		subq	%rsi, %rcx
 927 0bbc 660F73D9 		psrldq	$8, %xmm1
 927      08
 928 0bc1 660FFDC1 		paddw	%xmm1, %xmm0
 929 0bc5 660F6FC8 		movdqa	%xmm0, %xmm1
 930 0bc9 660F73D9 		psrldq	$4, %xmm1
 930      04
 931 0bce 660FFDC1 		paddw	%xmm1, %xmm0
 932 0bd2 660F6FC8 		movdqa	%xmm0, %xmm1
 933 0bd6 660F73D9 		psrldq	$2, %xmm1
 933      02
 934 0bdb 660FFDC1 		paddw	%xmm1, %xmm0
 935 0bdf 660FC5C0 		pextrw	$0, %xmm0, %eax
 935      00
 936 0be4 01C5     		addl	%eax, %ebp
 937 0be6 4939F2   		cmpq	%rsi, %r10
 938 0be9 0F84B800 		je	.L162
 938      0000
 939              	.L163:
 940 0bef 0FB607   		movzbl	(%rdi), %eax
 941 0bf2 01C5     		addl	%eax, %ebp
 942 0bf4 4885C9   		testq	%rcx, %rcx
 943 0bf7 0F84AA00 		je	.L162
 943      0000
 944 0bfd 0FB64701 		movzbl	1(%rdi), %eax
 945 0c01 01C5     		addl	%eax, %ebp
 946 0c03 4883F901 		cmpq	$1, %rcx
 947 0c07 0F849A00 		je	.L162
 947      0000
 948 0c0d 0FB64702 		movzbl	2(%rdi), %eax
 949 0c11 01C5     		addl	%eax, %ebp
 950 0c13 4883F902 		cmpq	$2, %rcx
 951 0c17 0F848A00 		je	.L162
 951      0000
 952 0c1d 0FB64703 		movzbl	3(%rdi), %eax
 953 0c21 01C5     		addl	%eax, %ebp
 954 0c23 4883F903 		cmpq	$3, %rcx
 955 0c27 747E     		je	.L162
 956 0c29 0FB64704 		movzbl	4(%rdi), %eax
 957 0c2d 01C5     		addl	%eax, %ebp
 958 0c2f 4883F904 		cmpq	$4, %rcx
 959 0c33 7472     		je	.L162
 960 0c35 0FB64705 		movzbl	5(%rdi), %eax
 961 0c39 01C5     		addl	%eax, %ebp
 962 0c3b 4883F905 		cmpq	$5, %rcx
 963 0c3f 7466     		je	.L162
 964 0c41 0FB64706 		movzbl	6(%rdi), %eax
 965 0c45 01C5     		addl	%eax, %ebp
 966 0c47 4883F906 		cmpq	$6, %rcx
 967 0c4b 745A     		je	.L162
 968 0c4d 0FB64707 		movzbl	7(%rdi), %eax
 969 0c51 01C5     		addl	%eax, %ebp
 970 0c53 4883F907 		cmpq	$7, %rcx
 971 0c57 744E     		je	.L162
 972 0c59 0FB64708 		movzbl	8(%rdi), %eax
 973 0c5d 01C5     		addl	%eax, %ebp
 974 0c5f 4883F908 		cmpq	$8, %rcx
 975 0c63 7442     		je	.L162
 976 0c65 0FB64709 		movzbl	9(%rdi), %eax
 977 0c69 01C5     		addl	%eax, %ebp
 978 0c6b 4883F909 		cmpq	$9, %rcx
 979 0c6f 7436     		je	.L162
 980 0c71 0FB6470A 		movzbl	10(%rdi), %eax
 981 0c75 01C5     		addl	%eax, %ebp
 982 0c77 4883F90A 		cmpq	$10, %rcx
 983 0c7b 742A     		je	.L162
 984 0c7d 0FB6470B 		movzbl	11(%rdi), %eax
 985 0c81 01C5     		addl	%eax, %ebp
 986 0c83 4883F90B 		cmpq	$11, %rcx
 987 0c87 741E     		je	.L162
 988 0c89 0FB6470C 		movzbl	12(%rdi), %eax
 989 0c8d 01C5     		addl	%eax, %ebp
 990 0c8f 4883F90C 		cmpq	$12, %rcx
 991 0c93 7412     		je	.L162
 992 0c95 0FB6470D 		movzbl	13(%rdi), %eax
 993 0c99 01C5     		addl	%eax, %ebp
 994 0c9b 4883F90D 		cmpq	$13, %rcx
 995 0c9f 7406     		je	.L162
 996 0ca1 0FB6470E 		movzbl	14(%rdi), %eax
 997 0ca5 01C5     		addl	%eax, %ebp
 998              	.L162:
 999 0ca7 0FB7ED   		movzwl	%bp, %ebp
 1000              	.L158:
 1001 0caa 48694424 		imulq	$1000000, 96(%rsp), %rax
 1001      6040420F 
 1001      00
 1002 0cb3 48694C24 		imulq	$1000000, 80(%rsp), %rcx
 1002      5040420F 
 1002      00
 1003 0cbc 660FEFC9 		pxor	%xmm1, %xmm1
 1004 0cc0 48034424 		addq	104(%rsp), %rax
 1004      68
 1005 0cc5 48034C24 		addq	88(%rsp), %rcx
 1005      58
 1006 0cca 4829C8   		subq	%rcx, %rax
 1007 0ccd 4885D2   		testq	%rdx, %rdx
 1008 0cd0 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 1008      C8
 1009 0cd5 0F88A001 		js	.L169
 1009      0000
 1010 0cdb 660FEFC0 		pxor	%xmm0, %xmm0
 1011 0cdf F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 1011      C2
 1012              	.L170:
 1013 0ce4 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 1013      00000000 
 1014 0cec 4D89F0   		movq	%r14, %r8
 1015 0cef 89E9     		movl	%ebp, %ecx
 1016 0cf1 BE000000 		movl	$.LC8, %esi
 1016      00
 1017 0cf6 BF010000 		movl	$1, %edi
 1017      00
 1018 0cfb B8010000 		movl	$1, %eax
 1018      00
 1019 0d00 F20F590D 		mulsd	.LC5(%rip), %xmm1
 1019      00000000 
 1020 0d08 F20F5EC1 		divsd	%xmm1, %xmm0
 1021 0d0c E8000000 		call	__printf_chk
 1021      00
 1022              	.L150:
 1023 0d11 4585ED   		testl	%r13d, %r13d
 1024 0d14 0F85D708 		jne	.L213
 1024      0000
 1025 0d1a 4889DF   		movq	%rbx, %rdi
 1026 0d1d E8000000 		call	free
 1026      00
 1027 0d22 E98FF6FF 		jmp	.L131
 1027      FF
 1028              	.L207:
 1029 0d27 41BC0600 		movl	$6, %r12d
 1029      0000
 1030 0d2d 48C74424 		movq	$0, 8(%rsp)
 1030      08000000 
 1030      00
 1031 0d36 4531ED   		xorl	%r13d, %r13d
 1032 0d39 BD060000 		movl	$6, %ebp
 1032      00
 1033 0d3e 31DB     		xorl	%ebx, %ebx
 1034 0d40 E928FDFF 		jmp	.L130
 1034      FF
 1035              	.L464:
 1036 0d45 488D7A01 		leaq	1(%rdx), %rdi
 1037 0d49 488D7424 		leaq	64(%rsp), %rsi
 1037      40
 1038 0d4e 41C74500 		movl	$0, 0(%r13)
 1038      00000000 
 1039 0d56 BA100000 		movl	$16, %edx
 1039      00
 1040 0d5b 48893D00 		movq	%rdi, ptr(%rip)
 1040      000000
 1041 0d62 E8000000 		call	strtoul
 1041      00
 1042 0d67 458B4500 		movl	0(%r13), %r8d
 1043 0d6b 48894424 		movq	%rax, 40(%rsp)
 1043      28
 1044 0d70 89C5     		movl	%eax, %ebp
 1045 0d72 4585C0   		testl	%r8d, %r8d
 1046 0d75 0F85CA07 		jne	.L76
 1046      0000
 1047 0d7b 488B4424 		movq	64(%rsp), %rax
 1047      40
 1048 0d80 0FB610   		movzbl	(%rax), %edx
 1049 0d83 48890500 		movq	%rax, ptr(%rip)
 1049      000000
 1050 0d8a F6C2DF   		testb	$-33, %dl
 1051 0d8d 7421     		je	.L220
 1052 0d8f 80FA3B   		cmpb	$59, %dl
 1053 0d92 741C     		je	.L220
 1054              	.L77:
 1055 0d94 41BC0500 		movl	$5, %r12d
 1055      0000
 1056 0d9a 48C74424 		movq	$0, 8(%rsp)
 1056      08000000 
 1056      00
 1057 0da3 4531ED   		xorl	%r13d, %r13d
 1058 0da6 BD050000 		movl	$5, %ebp
 1058      00
 1059 0dab E989FBFF 		jmp	.L137
 1059      FF
 1060              	.L220:
 1061 0db0 80FA20   		cmpb	$32, %dl
 1062 0db3 0F84E300 		je	.L79
 1062      0000
 1063 0db9 448B7424 		movl	40(%rsp), %r14d
 1063      28
 1064 0dbe E9D2F8FF 		jmp	.L75
 1064      FF
 1065              	.L459:
 1066 0dc3 84C0     		testb	%al, %al
 1067 0dc5 41BC0500 		movl	$5, %r12d
 1067      0000
 1068 0dcb BD050000 		movl	$5, %ebp
 1068      00
 1069 0dd0 0F8515F6 		jne	.L66
 1069      FFFF
 1070 0dd6 488B5424 		movq	120(%rsp), %rdx
 1070      78
 1071 0ddb 488B7424 		movq	112(%rsp), %rsi
 1071      70
 1072 0de0 31FF     		xorl	%edi, %edi
 1073 0de2 4531E4   		xorl	%r12d, %r12d
 1074 0de5 31ED     		xorl	%ebp, %ebp
 1075 0de7 E8000000 		call	dump
 1075      00
 1076 0dec E9FAF5FF 		jmp	.L66
 1076      FF
 1077              	.L467:
 1078 0df1 48694424 		imulq	$1000000, 96(%rsp), %rax
 1078      6040420F 
 1078      00
 1079 0dfa 48694C24 		imulq	$1000000, 80(%rsp), %rcx
 1079      5040420F 
 1079      00
 1080 0e03 488B5424 		movq	64(%rsp), %rdx
 1080      40
 1081 0e08 660FEFC9 		pxor	%xmm1, %xmm1
 1082 0e0c 48034424 		addq	104(%rsp), %rax
 1082      68
 1083 0e11 48034C24 		addq	88(%rsp), %rcx
 1083      58
 1084 0e16 4829C8   		subq	%rcx, %rax
 1085 0e19 4885D2   		testq	%rdx, %rdx
 1086 0e1c F2480F2A 		cvtsi2sdq	%rax, %xmm1
 1086      C8
 1087 0e21 0F887806 		js	.L140
 1087      0000
 1088 0e27 660FEFC0 		pxor	%xmm0, %xmm0
 1089 0e2b F2480F2A 		cvtsi2sdq	%rdx, %xmm0
 1089      C2
 1090              	.L141:
 1091 0e30 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 1091      00000000 
 1092 0e38 0FB74C24 		movzwl	60(%rsp), %ecx
 1092      3C
 1093 0e3d 4D89F0   		movq	%r14, %r8
 1094 0e40 BE000000 		movl	$.LC8, %esi
 1094      00
 1095 0e45 BF010000 		movl	$1, %edi
 1095      00
 1096 0e4a B8010000 		movl	$1, %eax
 1096      00
 1097 0e4f F20F590D 		mulsd	.LC5(%rip), %xmm1
 1097      00000000 
 1098 0e57 F20F5EC1 		divsd	%xmm1, %xmm0
 1099 0e5b E8000000 		call	__printf_chk
 1099      00
 1100 0e60 E9D8FBFF 		jmp	.L139
 1100      FF
 1101              	.L469:
 1102 0e65 4D85C0   		testq	%r8, %r8
 1103 0e68 0F85C1FC 		jne	.L159
 1103      FFFF
 1104 0e6e 4C89C9   		movq	%r9, %rcx
 1105 0e71 4889DF   		movq	%rbx, %rdi
 1106 0e74 31ED     		xorl	%ebp, %ebp
 1107 0e76 E9E1FCFF 		jmp	.L160
 1107      FF
 1108              	.L169:
 1109 0e7b 4889D0   		movq	%rdx, %rax
 1110 0e7e 4889D1   		movq	%rdx, %rcx
 1111 0e81 660FEFC0 		pxor	%xmm0, %xmm0
 1112 0e85 48D1E8   		shrq	%rax
 1113 0e88 83E101   		andl	$1, %ecx
 1114 0e8b 4809C8   		orq	%rcx, %rax
 1115 0e8e F2480F2A 		cvtsi2sdq	%rax, %xmm0
 1115      C0
 1116 0e93 F20F58C0 		addsd	%xmm0, %xmm0
 1117 0e97 E948FEFF 		jmp	.L170
 1117      FF
 1118              	.L79:
 1119 0e9c 488D5001 		leaq	1(%rax), %rdx
 1120 0ea0 48891500 		movq	%rdx, ptr(%rip)
 1120      000000
 1121 0ea7 0FB65001 		movzbl	1(%rax), %edx
 1122 0eab 80FA22   		cmpb	$34, %dl
 1123 0eae 7409     		je	.L221
 1124 0eb0 80FA27   		cmpb	$39, %dl
 1125 0eb3 0F85DBFE 		jne	.L77
 1125      FFFF
 1126              	.L221:
 1127 0eb9 488D7002 		leaq	2(%rax), %rsi
 1128 0ebd 0FB64002 		movzbl	2(%rax), %eax
 1129 0ec1 48893500 		movq	%rsi, ptr(%rip)
 1129      000000
 1130 0ec8 38C2     		cmpb	%al, %dl
 1131 0eca 0F844207 		je	.L189
 1131      0000
 1132 0ed0 84C0     		testb	%al, %al
 1133 0ed2 0F844FFE 		je	.L207
 1133      FFFF
 1134 0ed8 4889F3   		movq	%rsi, %rbx
 1135 0edb EB08     		jmp	.L82
 1136              	.L470:
 1137 0edd 84C0     		testb	%al, %al
 1138 0edf 0F8442FE 		je	.L207
 1138      FFFF
 1139              	.L82:
 1140 0ee5 4883C301 		addq	$1, %rbx
 1141 0ee9 0FB603   		movzbl	(%rbx), %eax
 1142 0eec 38C2     		cmpb	%al, %dl
 1143 0eee 75ED     		jne	.L470
 1144              	.L81:
 1145 0ef0 84C0     		testb	%al, %al
 1146 0ef2 0F842FFE 		je	.L207
 1146      FFFF
 1147 0ef8 4889DD   		movq	%rbx, %rbp
 1148 0efb 48897424 		movq	%rsi, 8(%rsp)
 1148      08
 1149 0f00 4829F5   		subq	%rsi, %rbp
 1150 0f03 488D7D01 		leaq	1(%rbp), %rdi
 1151 0f07 E8000000 		call	malloc
 1151      00
 1152 0f0c 4885C0   		testq	%rax, %rax
 1153 0f0f 4989C5   		movq	%rax, %r13
 1154 0f12 0F84C006 		je	.L208
 1154      0000
 1155 0f18 488B7424 		movq	8(%rsp), %rsi
 1155      08
 1156 0f1d 4839F3   		cmpq	%rsi, %rbx
 1157 0f20 0F849906 		je	.L209
 1157      0000
 1158 0f26 4889EA   		movq	%rbp, %rdx
 1159 0f29 4889C7   		movq	%rax, %rdi
 1160 0f2c 4883C301 		addq	$1, %rbx
 1161 0f30 E8000000 		call	strncpy
 1161      00
 1162 0f35 41C6442D 		movb	$0, 0(%r13,%rbp)
 1162      0000
 1163 0f3b BE000000 		movl	$.LC2, %esi
 1163      00
 1164 0f40 4C89EF   		movq	%r13, %rdi
 1165 0f43 48891D00 		movq	%rbx, ptr(%rip)
 1165      000000
 1166 0f4a E8000000 		call	fopen
 1166      00
 1167 0f4f 4885C0   		testq	%rax, %rax
 1168 0f52 48894424 		movq	%rax, 8(%rsp)
 1168      08
 1169 0f57 0F842F06 		je	.L194
 1169      0000
 1170 0f5d 4C89EF   		movq	%r13, %rdi
 1171 0f60 BB000001 		movl	$65536, %ebx
 1171      00
 1172 0f65 E8000000 		call	free
 1172      00
 1173 0f6a 488D7C24 		leaq	80(%rsp), %rdi
 1173      50
 1174 0f6f 31F6     		xorl	%esi, %esi
 1175 0f71 E8000000 		call	gettimeofday
 1175      00
 1176 0f76 488B4424 		movq	40(%rsp), %rax
 1176      28
 1177 0f7b 41B9FFFF 		movl	$4294967295, %r9d
 1177      FFFF
 1178 0f81 4D89F8   		movq	%r15, %r8
 1179 0f84 4C89E7   		movq	%r12, %rdi
 1180 0f87 3D000001 		cmpl	$65536, %eax
 1180      00
 1181 0f8c 0F46D8   		cmovbe	%eax, %ebx
 1182 0f8f 0FB64424 		movzbl	32(%rsp), %eax
 1182      20
 1183 0f94 31C9     		xorl	%ecx, %ecx
 1184 0f96 89DA     		movl	%ebx, %edx
 1185 0f98 89C6     		movl	%eax, %esi
 1186 0f9a 89442410 		movl	%eax, 16(%rsp)
 1187 0f9e E8000000 		call	flReadChannelAsyncSubmit
 1187      00
 1188 0fa3 85C0     		testl	%eax, %eax
 1189 0fa5 0F852D03 		jne	.L86
 1189      0000
 1190 0fab 8B6C2428 		movl	40(%rsp), %ebp
 1191 0faf 29DD     		subl	%ebx, %ebp
 1192 0fb1 BB000000 		movl	$0, %ebx
 1192      00
 1193 0fb6 0F84C105 		je	.L195
 1193      0000
 1194 0fbc 0F1F4000 		.p2align 4,,10
 1195              		.p2align 3
 1196              	.L99:
 1197 0fc0 81FD0000 		cmpl	$65536, %ebp
 1197      0100
 1198 0fc6 41BD0000 		movl	$65536, %r13d
 1198      0100
 1199 0fcc 8B742410 		movl	16(%rsp), %esi
 1200 0fd0 440F46ED 		cmovbe	%ebp, %r13d
 1201 0fd4 41B9FFFF 		movl	$4294967295, %r9d
 1201      FFFF
 1202 0fda 31C9     		xorl	%ecx, %ecx
 1203 0fdc 4D89F8   		movq	%r15, %r8
 1204 0fdf 4489EA   		movl	%r13d, %edx
 1205 0fe2 4C89E7   		movq	%r12, %rdi
 1206 0fe5 E8000000 		call	flReadChannelAsyncSubmit
 1206      00
 1207 0fea 85C0     		testl	%eax, %eax
 1208 0fec 0F85E602 		jne	.L86
 1208      0000
 1209 0ff2 4429ED   		subl	%r13d, %ebp
 1210 0ff5 4C8D7424 		leaq	60(%rsp), %r14
 1210      3C
 1211 0ffa 4C8D6C24 		leaq	72(%rsp), %r13
 1211      48
 1212 0fff 41B9FFFF 		movl	$4294967295, %r9d
 1212      FFFF
 1213 1005 4D89F8   		movq	%r15, %r8
 1214 1008 4C89E7   		movq	%r12, %rdi
 1215 100b 4C89F1   		movq	%r14, %rcx
 1216 100e 4C89F2   		movq	%r14, %rdx
 1217 1011 4C89EE   		movq	%r13, %rsi
 1218 1014 E8000000 		call	flReadChannelAsyncAwait
 1218      00
 1219 1019 85C0     		testl	%eax, %eax
 1220 101b 0F85B702 		jne	.L86
 1220      0000
 1221 1021 8B54243C 		movl	60(%rsp), %edx
 1222 1025 488B4C24 		movq	8(%rsp), %rcx
 1222      08
 1223 102a BE010000 		movl	$1, %esi
 1223      00
 1224 102f 488B7C24 		movq	72(%rsp), %rdi
 1224      48
 1225 1034 E8000000 		call	fwrite
 1225      00
 1226 1039 3B44243C 		cmpl	60(%rsp), %eax
 1227 103d 0F85DF01 		jne	.L100
 1227      0000
 1228 1043 85C0     		testl	%eax, %eax
 1229 1045 4C8B4C24 		movq	72(%rsp), %r9
 1229      48
 1230 104a 448D40FF 		leal	-1(%rax), %r8d
 1231 104e 0F848201 		je	.L88
 1231      0000
 1232 1054 4C89CE   		movq	%r9, %rsi
 1233 1057 48F7DE   		negq	%rsi
 1234 105a 83E60F   		andl	$15, %esi
 1235 105d 39C6     		cmpl	%eax, %esi
 1236 105f 0F47F0   		cmova	%eax, %esi
 1237 1062 83F813   		cmpl	$19, %eax
 1238 1065 0F875502 		ja	.L471
 1238      0000
 1239 106b 89C6     		movl	%eax, %esi
 1240              	.L89:
 1241 106d 8D56FF   		leal	-1(%rsi), %edx
 1242 1070 4C89CF   		movq	%r9, %rdi
 1243 1073 498D4C11 		leaq	1(%r9,%rdx), %rcx
 1243      01
 1244 1078 4489C2   		movl	%r8d, %edx
 1245 107b 0F1F4400 		.p2align 4,,10
 1245      00
 1246              		.p2align 3
 1247              	.L91:
 1248 1080 4883C701 		addq	$1, %rdi
 1249 1084 440FB657 		movzbl	-1(%rdi), %r10d
 1249      FF
 1250 1089 83EA01   		subl	$1, %edx
 1251 108c 4401D3   		addl	%r10d, %ebx
 1252 108f 4839CF   		cmpq	%rcx, %rdi
 1253 1092 75EC     		jne	.L91
 1254 1094 39F0     		cmpl	%esi, %eax
 1255 1096 0F843A01 		je	.L88
 1255      0000
 1256              	.L90:
 1257 109c 29F0     		subl	%esi, %eax
 1258 109e 4129F0   		subl	%esi, %r8d
 1259 10a1 4189F2   		movl	%esi, %r10d
 1260 10a4 8D78F0   		leal	-16(%rax), %edi
 1261 10a7 C1EF04   		shrl	$4, %edi
 1262 10aa 83C701   		addl	$1, %edi
 1263 10ad 4189FB   		movl	%edi, %r11d
 1264 10b0 41C1E304 		sall	$4, %r11d
 1265 10b4 4183F80E 		cmpl	$14, %r8d
 1266 10b8 7676     		jbe	.L93
 1267 10ba 660FEFC0 		pxor	%xmm0, %xmm0
 1268 10be 4D01D1   		addq	%r10, %r9
 1269 10c1 31F6     		xorl	%esi, %esi
 1270              	.L94:
 1271 10c3 66410F6F 		movdqa	(%r9), %xmm1
 1271      09
 1272 10c8 83C601   		addl	$1, %esi
 1273 10cb 660FEFE4 		pxor	%xmm4, %xmm4
 1274 10cf 4983C110 		addq	$16, %r9
 1275 10d3 660F6FD1 		movdqa	%xmm1, %xmm2
 1276 10d7 39FE     		cmpl	%edi, %esi
 1277 10d9 660F60D4 		punpcklbw	%xmm4, %xmm2
 1278 10dd 660F68CC 		punpckhbw	%xmm4, %xmm1
 1279 10e1 660FFDC2 		paddw	%xmm2, %xmm0
 1280 10e5 660FFDC1 		paddw	%xmm1, %xmm0
 1281 10e9 72D8     		jb	.L94
 1282 10eb 660F6FC8 		movdqa	%xmm0, %xmm1
 1283 10ef 4429DA   		subl	%r11d, %edx
 1284 10f2 660F73D9 		psrldq	$8, %xmm1
 1284      08
 1285 10f7 660FFDC1 		paddw	%xmm1, %xmm0
 1286 10fb 660F6FC8 		movdqa	%xmm0, %xmm1
 1287 10ff 660F73D9 		psrldq	$4, %xmm1
 1287      04
 1288 1104 660FFDC1 		paddw	%xmm1, %xmm0
 1289 1108 660F6FC8 		movdqa	%xmm0, %xmm1
 1290 110c 660F73D9 		psrldq	$2, %xmm1
 1290      02
 1291 1111 660FFDC1 		paddw	%xmm1, %xmm0
 1292 1115 660FC5F0 		pextrw	$0, %xmm0, %esi
 1292      00
 1293 111a 01F3     		addl	%esi, %ebx
 1294 111c 4489DE   		movl	%r11d, %esi
 1295 111f 4801F1   		addq	%rsi, %rcx
 1296 1122 4439D8   		cmpl	%r11d, %eax
 1297 1125 0F84AB00 		je	.L88
 1297      0000
 1298 112b 0F1F4400 		.p2align 4,,10
 1298      00
 1299              		.p2align 3
 1300              	.L93:
 1301 1130 0FB601   		movzbl	(%rcx), %eax
 1302 1133 01C3     		addl	%eax, %ebx
 1303 1135 85D2     		testl	%edx, %edx
 1304 1137 0F849900 		je	.L88
 1304      0000
 1305 113d 0FB64101 		movzbl	1(%rcx), %eax
 1306 1141 01C3     		addl	%eax, %ebx
 1307 1143 83FA01   		cmpl	$1, %edx
 1308 1146 0F848A00 		je	.L88
 1308      0000
 1309 114c 0FB64102 		movzbl	2(%rcx), %eax
 1310 1150 01C3     		addl	%eax, %ebx
 1311 1152 83FA02   		cmpl	$2, %edx
 1312 1155 747F     		je	.L88
 1313 1157 0FB64103 		movzbl	3(%rcx), %eax
 1314 115b 01C3     		addl	%eax, %ebx
 1315 115d 83FA03   		cmpl	$3, %edx
 1316 1160 7474     		je	.L88
 1317 1162 0FB64104 		movzbl	4(%rcx), %eax
 1318 1166 01C3     		addl	%eax, %ebx
 1319 1168 83FA04   		cmpl	$4, %edx
 1320 116b 7469     		je	.L88
 1321 116d 0FB64105 		movzbl	5(%rcx), %eax
 1322 1171 01C3     		addl	%eax, %ebx
 1323 1173 83FA05   		cmpl	$5, %edx
 1324 1176 745E     		je	.L88
 1325 1178 0FB64106 		movzbl	6(%rcx), %eax
 1326 117c 01C3     		addl	%eax, %ebx
 1327 117e 83FA06   		cmpl	$6, %edx
 1328 1181 7453     		je	.L88
 1329 1183 0FB64107 		movzbl	7(%rcx), %eax
 1330 1187 01C3     		addl	%eax, %ebx
 1331 1189 83FA07   		cmpl	$7, %edx
 1332 118c 7448     		je	.L88
 1333 118e 0FB64108 		movzbl	8(%rcx), %eax
 1334 1192 01C3     		addl	%eax, %ebx
 1335 1194 83FA08   		cmpl	$8, %edx
 1336 1197 743D     		je	.L88
 1337 1199 0FB64109 		movzbl	9(%rcx), %eax
 1338 119d 01C3     		addl	%eax, %ebx
 1339 119f 83FA09   		cmpl	$9, %edx
 1340 11a2 7432     		je	.L88
 1341 11a4 0FB6410A 		movzbl	10(%rcx), %eax
 1342 11a8 01C3     		addl	%eax, %ebx
 1343 11aa 83FA0A   		cmpl	$10, %edx
 1344 11ad 7427     		je	.L88
 1345 11af 0FB6410B 		movzbl	11(%rcx), %eax
 1346 11b3 01C3     		addl	%eax, %ebx
 1347 11b5 83FA0B   		cmpl	$11, %edx
 1348 11b8 741C     		je	.L88
 1349 11ba 0FB6410C 		movzbl	12(%rcx), %eax
 1350 11be 01C3     		addl	%eax, %ebx
 1351 11c0 83FA0C   		cmpl	$12, %edx
 1352 11c3 7411     		je	.L88
 1353 11c5 0FB6410D 		movzbl	13(%rcx), %eax
 1354 11c9 01C3     		addl	%eax, %ebx
 1355 11cb 83FA0D   		cmpl	$13, %edx
 1356 11ce 7406     		je	.L88
 1357 11d0 0FB6410E 		movzbl	14(%rcx), %eax
 1358 11d4 01C3     		addl	%eax, %ebx
 1359              	.L88:
 1360 11d6 85ED     		testl	%ebp, %ebp
 1361 11d8 0F85E2FD 		jne	.L99
 1361      FFFF
 1362              	.L85:
 1363 11de 41B9FFFF 		movl	$4294967295, %r9d
 1363      FFFF
 1364 11e4 4D89F8   		movq	%r15, %r8
 1365 11e7 4C89F1   		movq	%r14, %rcx
 1366 11ea 4C89F2   		movq	%r14, %rdx
 1367 11ed 4C89EE   		movq	%r13, %rsi
 1368 11f0 4C89E7   		movq	%r12, %rdi
 1369 11f3 E8000000 		call	flReadChannelAsyncAwait
 1369      00
 1370 11f8 85C0     		testl	%eax, %eax
 1371 11fa 0F85D800 		jne	.L86
 1371      0000
 1372 1200 8B54243C 		movl	60(%rsp), %edx
 1373 1204 488B4C24 		movq	8(%rsp), %rcx
 1373      08
 1374 1209 BE010000 		movl	$1, %esi
 1374      00
 1375 120e 488B7C24 		movq	72(%rsp), %rdi
 1375      48
 1376 1213 E8000000 		call	fwrite
 1376      00
 1377 1218 3B44243C 		cmpl	60(%rsp), %eax
 1378 121c 0F84CF00 		je	.L472
 1378      0000
 1379              	.L100:
 1380 1222 BE000000 		movl	$.LC3, %esi
 1380      00
 1381 1227 4C89FF   		movq	%r15, %rdi
 1382 122a 31DB     		xorl	%ebx, %ebx
 1383 122c BD0B0000 		movl	$11, %ebp
 1383      00
 1384 1231 E8000000 		call	errPrefix
 1384      00
 1385              	.L84:
 1386 1236 488D7C24 		leaq	96(%rsp), %rdi
 1386      60
 1387 123b 31F6     		xorl	%esi, %esi
 1388 123d E8000000 		call	gettimeofday
 1388      00
 1389 1242 803D0000 		cmpb	$0, enableBenchmarking(%rip)
 1389      000000
 1390 1249 0F84EEF7 		je	.L139
 1390      FFFF
 1391 124f 48694424 		imulq	$1000000, 96(%rsp), %rax
 1391      6040420F 
 1391      00
 1392 1258 48695424 		imulq	$1000000, 80(%rsp), %rdx
 1392      5040420F 
 1392      00
 1393 1261 660FEFC9 		pxor	%xmm1, %xmm1
 1394 1265 488B7424 		movq	40(%rsp), %rsi
 1394      28
 1395 126a 660FEFC0 		pxor	%xmm0, %xmm0
 1396 126e 448B4424 		movl	32(%rsp), %r8d
 1396      20
 1397 1273 48034424 		addq	104(%rsp), %rax
 1397      68
 1398 1278 0FB7CB   		movzwl	%bx, %ecx
 1399 127b BF010000 		movl	$1, %edi
 1399      00
 1400 1280 48035424 		addq	88(%rsp), %rdx
 1400      58
 1401 1285 4829D0   		subq	%rdx, %rax
 1402 1288 89F2     		movl	%esi, %edx
 1403 128a F2480F2A 		cvtsi2sdq	%rax, %xmm1
 1403      C8
 1404 128f 89F0     		movl	%esi, %eax
 1405 1291 BE000000 		movl	$.LC6, %esi
 1405      00
 1406 1296 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 1406      C0
 1407 129b B8010000 		movl	$1, %eax
 1407      00
 1408 12a0 F20F5E0D 		divsd	.LC4(%rip), %xmm1
 1408      00000000 
 1409 12a8 F20F590D 		mulsd	.LC5(%rip), %xmm1
 1409      00000000 
 1410 12b0 F20F5EC1 		divsd	%xmm1, %xmm0
 1411 12b4 E8000000 		call	__printf_chk
 1411      00
 1412 12b9 E97FF7FF 		jmp	.L139
 1412      FF
 1413 12be 6690     		.p2align 4,,10
 1414              		.p2align 3
 1415              	.L471:
 1416 12c0 85F6     		testl	%esi, %esi
 1417 12c2 0F85A5FD 		jne	.L89
 1417      FFFF
 1418 12c8 4489C2   		movl	%r8d, %edx
 1419 12cb 4C89C9   		movq	%r9, %rcx
 1420 12ce E9C9FDFF 		jmp	.L90
 1420      FF
 1421              		.p2align 4,,10
 1422 12d3 0F1F4400 		.p2align 3
 1422      00
 1423              	.L86:
 1424 12d8 BE000000 		movl	$.LC3, %esi
 1424      00
 1425 12dd 4C89FF   		movq	%r15, %rdi
 1426 12e0 31DB     		xorl	%ebx, %ebx
 1427 12e2 E8000000 		call	errPrefix
 1427      00
 1428 12e7 BD010000 		movl	$1, %ebp
 1428      00
 1429 12ec E945FFFF 		jmp	.L84
 1429      FF
 1430              	.L472:
 1431 12f1 85C0     		testl	%eax, %eax
 1432 12f3 4C8B4424 		movq	72(%rsp), %r8
 1432      48
 1433 12f8 448D48FF 		leal	-1(%rax), %r9d
 1434 12fc 0F847801 		je	.L198
 1434      0000
 1435 1302 4C89C6   		movq	%r8, %rsi
 1436 1305 48F7DE   		negq	%rsi
 1437 1308 83E60F   		andl	$15, %esi
 1438 130b 39C6     		cmpl	%eax, %esi
 1439 130d 0F47F0   		cmova	%eax, %esi
 1440 1310 83F813   		cmpl	$19, %eax
 1441 1313 0F878302 		ja	.L473
 1441      0000
 1442 1319 89C6     		movl	%eax, %esi
 1443              	.L101:
 1444 131b 8D56FF   		leal	-1(%rsi), %edx
 1445 131e 4C89C7   		movq	%r8, %rdi
 1446 1321 498D4C10 		leaq	1(%r8,%rdx), %rcx
 1446      01
 1447 1326 4489CA   		movl	%r9d, %edx
 1448              	.L103:
 1449 1329 4883C701 		addq	$1, %rdi
 1450 132d 440FB657 		movzbl	-1(%rdi), %r10d
 1450      FF
 1451 1332 83EA01   		subl	$1, %edx
 1452 1335 4401D3   		addl	%r10d, %ebx
 1453 1338 4839F9   		cmpq	%rdi, %rcx
 1454 133b 75EC     		jne	.L103
 1455 133d 39F0     		cmpl	%esi, %eax
 1456 133f 0F843501 		je	.L198
 1456      0000
 1457              	.L102:
 1458 1345 29F0     		subl	%esi, %eax
 1459 1347 4129F1   		subl	%esi, %r9d
 1460 134a 4189F2   		movl	%esi, %r10d
 1461 134d 8D78F0   		leal	-16(%rax), %edi
 1462 1350 C1EF04   		shrl	$4, %edi
 1463 1353 83C701   		addl	$1, %edi
 1464 1356 4189FB   		movl	%edi, %r11d
 1465 1359 41C1E304 		sall	$4, %r11d
 1466 135d 4183F90E 		cmpl	$14, %r9d
 1467 1361 7671     		jbe	.L105
 1468 1363 660FEFC0 		pxor	%xmm0, %xmm0
 1469 1367 4D01D0   		addq	%r10, %r8
 1470 136a 31F6     		xorl	%esi, %esi
 1471 136c 660FEFDB 		pxor	%xmm3, %xmm3
 1472              	.L106:
 1473 1370 66410F6F 		movdqa	(%r8), %xmm1
 1473      08
 1474 1375 83C601   		addl	$1, %esi
 1475 1378 4983C010 		addq	$16, %r8
 1476 137c 39F7     		cmpl	%esi, %edi
 1477 137e 660F6FD1 		movdqa	%xmm1, %xmm2
 1478 1382 660F68CB 		punpckhbw	%xmm3, %xmm1
 1479 1386 660F60D3 		punpcklbw	%xmm3, %xmm2
 1480 138a 660FFDC2 		paddw	%xmm2, %xmm0
 1481 138e 660FFDC1 		paddw	%xmm1, %xmm0
 1482 1392 77DC     		ja	.L106
 1483 1394 660F6FC8 		movdqa	%xmm0, %xmm1
 1484 1398 4429DA   		subl	%r11d, %edx
 1485 139b 660F73D9 		psrldq	$8, %xmm1
 1485      08
 1486 13a0 660FFDC1 		paddw	%xmm1, %xmm0
 1487 13a4 660F6FC8 		movdqa	%xmm0, %xmm1
 1488 13a8 660F73D9 		psrldq	$4, %xmm1
 1488      04
 1489 13ad 660FFDC1 		paddw	%xmm1, %xmm0
 1490 13b1 660F6FC8 		movdqa	%xmm0, %xmm1
 1491 13b5 660F73D9 		psrldq	$2, %xmm1
 1491      02
 1492 13ba 660FFDC1 		paddw	%xmm1, %xmm0
 1493 13be 660FC5F0 		pextrw	$0, %xmm0, %esi
 1493      00
 1494 13c3 01F3     		addl	%esi, %ebx
 1495 13c5 4489DE   		movl	%r11d, %esi
 1496 13c8 4801F1   		addq	%rsi, %rcx
 1497 13cb 4439D8   		cmpl	%r11d, %eax
 1498 13ce 0F84A600 		je	.L198
 1498      0000
 1499              	.L105:
 1500 13d4 0FB601   		movzbl	(%rcx), %eax
 1501 13d7 01C3     		addl	%eax, %ebx
 1502 13d9 85D2     		testl	%edx, %edx
 1503 13db 0F849900 		je	.L198
 1503      0000
 1504 13e1 0FB64101 		movzbl	1(%rcx), %eax
 1505 13e5 01C3     		addl	%eax, %ebx
 1506 13e7 83FA01   		cmpl	$1, %edx
 1507 13ea 0F848A00 		je	.L198
 1507      0000
 1508 13f0 0FB64102 		movzbl	2(%rcx), %eax
 1509 13f4 01C3     		addl	%eax, %ebx
 1510 13f6 83FA02   		cmpl	$2, %edx
 1511 13f9 747F     		je	.L198
 1512 13fb 0FB64103 		movzbl	3(%rcx), %eax
 1513 13ff 01C3     		addl	%eax, %ebx
 1514 1401 83FA03   		cmpl	$3, %edx
 1515 1404 7474     		je	.L198
 1516 1406 0FB64104 		movzbl	4(%rcx), %eax
 1517 140a 01C3     		addl	%eax, %ebx
 1518 140c 83FA04   		cmpl	$4, %edx
 1519 140f 7469     		je	.L198
 1520 1411 0FB64105 		movzbl	5(%rcx), %eax
 1521 1415 01C3     		addl	%eax, %ebx
 1522 1417 83FA05   		cmpl	$5, %edx
 1523 141a 745E     		je	.L198
 1524 141c 0FB64106 		movzbl	6(%rcx), %eax
 1525 1420 01C3     		addl	%eax, %ebx
 1526 1422 83FA06   		cmpl	$6, %edx
 1527 1425 7453     		je	.L198
 1528 1427 0FB64107 		movzbl	7(%rcx), %eax
 1529 142b 01C3     		addl	%eax, %ebx
 1530 142d 83FA07   		cmpl	$7, %edx
 1531 1430 7448     		je	.L198
 1532 1432 0FB64108 		movzbl	8(%rcx), %eax
 1533 1436 01C3     		addl	%eax, %ebx
 1534 1438 83FA08   		cmpl	$8, %edx
 1535 143b 743D     		je	.L198
 1536 143d 0FB64109 		movzbl	9(%rcx), %eax
 1537 1441 01C3     		addl	%eax, %ebx
 1538 1443 83FA09   		cmpl	$9, %edx
 1539 1446 7432     		je	.L198
 1540 1448 0FB6410A 		movzbl	10(%rcx), %eax
 1541 144c 01C3     		addl	%eax, %ebx
 1542 144e 83FA0A   		cmpl	$10, %edx
 1543 1451 7427     		je	.L198
 1544 1453 0FB6410B 		movzbl	11(%rcx), %eax
 1545 1457 01C3     		addl	%eax, %ebx
 1546 1459 83FA0B   		cmpl	$11, %edx
 1547 145c 741C     		je	.L198
 1548 145e 0FB6410C 		movzbl	12(%rcx), %eax
 1549 1462 01C3     		addl	%eax, %ebx
 1550 1464 83FA0C   		cmpl	$12, %edx
 1551 1467 7411     		je	.L198
 1552 1469 0FB6410D 		movzbl	13(%rcx), %eax
 1553 146d 01C3     		addl	%eax, %ebx
 1554 146f 83FA0D   		cmpl	$13, %edx
 1555 1472 7406     		je	.L198
 1556 1474 0FB6410E 		movzbl	14(%rcx), %eax
 1557 1478 01C3     		addl	%eax, %ebx
 1558              	.L198:
 1559 147a 31ED     		xorl	%ebp, %ebp
 1560 147c E9B5FDFF 		jmp	.L84
 1560      FF
 1561              	.L461:
 1562 1481 41BC0900 		movl	$9, %r12d
 1562      0000
 1563 1487 48C74424 		movq	$0, 8(%rsp)
 1563      08000000 
 1563      00
 1564 1490 4531ED   		xorl	%r13d, %r13d
 1565 1493 31DB     		xorl	%ebx, %ebx
 1566 1495 BD090000 		movl	$9, %ebp
 1566      00
 1567 149a E9CEF5FF 		jmp	.L130
 1567      FF
 1568              	.L140:
 1569 149f 4889D0   		movq	%rdx, %rax
 1570 14a2 4889D1   		movq	%rdx, %rcx
 1571 14a5 660FEFC0 		pxor	%xmm0, %xmm0
 1572 14a9 48D1E8   		shrq	%rax
 1573 14ac 83E101   		andl	$1, %ecx
 1574 14af 4809C8   		orq	%rcx, %rax
 1575 14b2 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 1575      C0
 1576 14b7 F20F58C0 		addsd	%xmm0, %xmm0
 1577 14bb E970F9FF 		jmp	.L141
 1577      FF
 1578              	.L465:
 1579 14c0 4885F6   		testq	%rsi, %rsi
 1580 14c3 0F8568F2 		jne	.L118
 1580      FFFF
 1581 14c9 4889F8   		movq	%rdi, %rax
 1582 14cc 4889D1   		movq	%rdx, %rcx
 1583 14cf 31DB     		xorl	%ebx, %ebx
 1584 14d1 E988F2FF 		jmp	.L119
 1584      FF
 1585              	.L468:
 1586 14d6 4189EC   		movl	%ebp, %r12d
 1587 14d9 4531ED   		xorl	%r13d, %r13d
 1588 14dc E958F4FF 		jmp	.L137
 1588      FF
 1589              	.L215:
 1590 14e1 41BC0400 		movl	$4, %r12d
 1590      0000
 1591 14e7 BD040000 		movl	$4, %ebp
 1591      00
 1592 14ec E9FAEEFF 		jmp	.L66
 1592      FF
 1593              	.L214:
 1594 14f1 41BC0200 		movl	$2, %r12d
 1594      0000
 1595 14f7 BD020000 		movl	$2, %ebp
 1595      00
 1596 14fc E9EAEEFF 		jmp	.L66
 1596      FF
 1597              	.L205:
 1598 1501 4889F3   		movq	%rsi, %rbx
 1599 1504 E97AF4FF 		jmp	.L136
 1599      FF
 1600              	.L204:
 1601 1509 41BC0300 		movl	$3, %r12d
 1601      0000
 1602 150f 48C74424 		movq	$0, 8(%rsp)
 1602      08000000 
 1602      00
 1603 1518 4531ED   		xorl	%r13d, %r13d
 1604 151b 31DB     		xorl	%ebx, %ebx
 1605 151d BD030000 		movl	$3, %ebp
 1605      00
 1606 1522 E946F5FF 		jmp	.L130
 1606      FF
 1607              	.L203:
 1608 1527 41BC0200 		movl	$2, %r12d
 1608      0000
 1609 152d 48C74424 		movq	$0, 8(%rsp)
 1609      08000000 
 1609      00
 1610 1536 4531ED   		xorl	%r13d, %r13d
 1611 1539 31DB     		xorl	%ebx, %ebx
 1612 153b BD020000 		movl	$2, %ebp
 1612      00
 1613 1540 E928F5FF 		jmp	.L130
 1613      FF
 1614              	.L76:
 1615 1545 41BC0200 		movl	$2, %r12d
 1615      0000
 1616 154b 48C74424 		movq	$0, 8(%rsp)
 1616      08000000 
 1616      00
 1617 1554 4531ED   		xorl	%r13d, %r13d
 1618 1557 BD020000 		movl	$2, %ebp
 1618      00
 1619 155c E9D8F3FF 		jmp	.L137
 1619      FF
 1620              	.L187:
 1621 1561 41BC0300 		movl	$3, %r12d
 1621      0000
 1622 1567 48C74424 		movq	$0, 8(%rsp)
 1622      08000000 
 1622      00
 1623 1570 4531ED   		xorl	%r13d, %r13d
 1624 1573 BD030000 		movl	$3, %ebp
 1624      00
 1625 1578 E9BCF3FF 		jmp	.L137
 1625      FF
 1626              	.L195:
 1627 157d 4C8D7424 		leaq	60(%rsp), %r14
 1627      3C
 1628 1582 4C8D6C24 		leaq	72(%rsp), %r13
 1628      48
 1629 1587 E952FCFF 		jmp	.L85
 1629      FF
 1630              	.L194:
 1631 158c 41BC0B00 		movl	$11, %r12d
 1631      0000
 1632 1592 BD0B0000 		movl	$11, %ebp
 1632      00
 1633 1597 E99DF3FF 		jmp	.L137
 1633      FF
 1634              	.L473:
 1635 159c 85F6     		testl	%esi, %esi
 1636 159e 0F8577FD 		jne	.L101
 1636      FFFF
 1637 15a4 4489CA   		movl	%r9d, %edx
 1638 15a7 4C89C1   		movq	%r8, %rcx
 1639 15aa E996FDFF 		jmp	.L102
 1639      FF
 1640              	.L210:
 1641 15af 41BC0A00 		movl	$10, %r12d
 1641      0000
 1642 15b5 BD0A0000 		movl	$10, %ebp
 1642      00
 1643 15ba E97AF3FF 		jmp	.L137
 1643      FF
 1644              	.L209:
 1645 15bf 41BC0800 		movl	$8, %r12d
 1645      0000
 1646 15c5 48C74424 		movq	$0, 8(%rsp)
 1646      08000000 
 1646      00
 1647 15ce BD080000 		movl	$8, %ebp
 1647      00
 1648 15d3 E961F3FF 		jmp	.L137
 1648      FF
 1649              	.L208:
 1650 15d8 41BC0700 		movl	$7, %r12d
 1650      0000
 1651 15de 48C74424 		movq	$0, 8(%rsp)
 1651      08000000 
 1651      00
 1652 15e7 BD070000 		movl	$7, %ebp
 1652      00
 1653 15ec E948F3FF 		jmp	.L137
 1653      FF
 1654              	.L213:
 1655 15f1 41BC0100 		movl	$1, %r12d
 1655      0000
 1656 15f7 48C74424 		movq	$0, 8(%rsp)
 1656      08000000 
 1656      00
 1657 1600 4531ED   		xorl	%r13d, %r13d
 1658 1603 BD010000 		movl	$1, %ebp
 1658      00
 1659 1608 E960F4FF 		jmp	.L130
 1659      FF
 1660              	.L460:
 1661 160d E8000000 		call	__stack_chk_fail
 1661      00
 1662              	.L189:
 1663 1612 4889F3   		movq	%rsi, %rbx
 1664 1615 E9D6F8FF 		jmp	.L81
 1664      FF
 1665              		.cfi_endproc
 1666              	.LFE71:
 1668              		.section	.text.unlikely
 1669              	.LCOLDE12:
 1670              		.text
 1671              	.LHOTE12:
 1672              		.section	.text.unlikely
 1673              	.LCOLDB13:
 1674              		.text
 1675              	.LHOTB13:
 1676 161a 660F1F44 		.p2align 4,,15
 1676      0000
 1677              		.globl	decToHexa32
 1679              	decToHexa32:
 1680              	.LFB62:
 1681              		.cfi_startproc
 1682 1620 89F8     		movl	%edi, %eax
 1683 1622 83E00F   		andl	$15, %eax
 1684 1625 83F809   		cmpl	$9, %eax
 1685 1628 0F8EAA00 		jle	.L475
 1685      0000
 1686 162e 83C057   		addl	$87, %eax
 1687 1631 884607   		movb	%al, 7(%rsi)
 1688              	.L476:
 1689 1634 4889F8   		movq	%rdi, %rax
 1690 1637 48C1E804 		shrq	$4, %rax
 1691 163b 89C2     		movl	%eax, %edx
 1692 163d 83E20F   		andl	$15, %edx
 1693 1640 83FA09   		cmpl	$9, %edx
 1694 1643 0F8EF700 		jle	.L477
 1694      0000
 1695 1649 83C257   		addl	$87, %edx
 1696 164c 885606   		movb	%dl, 6(%rsi)
 1697              	.L478:
 1698 164f 48C1E804 		shrq	$4, %rax
 1699 1653 89C2     		movl	%eax, %edx
 1700 1655 83E20F   		andl	$15, %edx
 1701 1658 83FA09   		cmpl	$9, %edx
 1702 165b 0F8ECF00 		jle	.L479
 1702      0000
 1703 1661 83C257   		addl	$87, %edx
 1704 1664 885605   		movb	%dl, 5(%rsi)
 1705              	.L480:
 1706 1667 48C1E804 		shrq	$4, %rax
 1707 166b 89C2     		movl	%eax, %edx
 1708 166d 83E20F   		andl	$15, %edx
 1709 1670 83FA09   		cmpl	$9, %edx
 1710 1673 0F8EA700 		jle	.L481
 1710      0000
 1711 1679 83C257   		addl	$87, %edx
 1712 167c 885604   		movb	%dl, 4(%rsi)
 1713              	.L482:
 1714 167f 48C1E804 		shrq	$4, %rax
 1715 1683 89C2     		movl	%eax, %edx
 1716 1685 83E20F   		andl	$15, %edx
 1717 1688 83FA09   		cmpl	$9, %edx
 1718 168b 0F8E7F00 		jle	.L483
 1718      0000
 1719 1691 83C257   		addl	$87, %edx
 1720 1694 885603   		movb	%dl, 3(%rsi)
 1721              	.L484:
 1722 1697 48C1E804 		shrq	$4, %rax
 1723 169b 89C2     		movl	%eax, %edx
 1724 169d 83E20F   		andl	$15, %edx
 1725 16a0 83FA09   		cmpl	$9, %edx
 1726 16a3 7E5B     		jle	.L485
 1727 16a5 83C257   		addl	$87, %edx
 1728 16a8 885602   		movb	%dl, 2(%rsi)
 1729              	.L486:
 1730 16ab 48C1E804 		shrq	$4, %rax
 1731 16af 89C2     		movl	%eax, %edx
 1732 16b1 83E20F   		andl	$15, %edx
 1733 16b4 83FA09   		cmpl	$9, %edx
 1734 16b7 7E37     		jle	.L487
 1735 16b9 83C257   		addl	$87, %edx
 1736 16bc 885601   		movb	%dl, 1(%rsi)
 1737              	.L488:
 1738 16bf 48C1E804 		shrq	$4, %rax
 1739 16c3 83E00F   		andl	$15, %eax
 1740 16c6 83F809   		cmpl	$9, %eax
 1741 16c9 7F1D     		jg	.L489
 1742 16cb 83C030   		addl	$48, %eax
 1743 16ce 8806     		movb	%al, (%rsi)
 1744 16d0 C3       		ret
 1745              		.p2align 4,,10
 1746 16d1 0F1F8000 		.p2align 3
 1746      000000
 1747              	.L475:
 1748 16d8 83C030   		addl	$48, %eax
 1749 16db 884607   		movb	%al, 7(%rsi)
 1750 16de E951FFFF 		jmp	.L476
 1750      FF
 1751              		.p2align 4,,10
 1752 16e3 0F1F4400 		.p2align 3
 1752      00
 1753              	.L489:
 1754 16e8 83C057   		addl	$87, %eax
 1755 16eb 8806     		movb	%al, (%rsi)
 1756 16ed C3       		ret
 1757 16ee 6690     		.p2align 4,,10
 1758              		.p2align 3
 1759              	.L487:
 1760 16f0 83C230   		addl	$48, %edx
 1761 16f3 885601   		movb	%dl, 1(%rsi)
 1762 16f6 EBC7     		jmp	.L488
 1763 16f8 0F1F8400 		.p2align 4,,10
 1763      00000000 
 1764              		.p2align 3
 1765              	.L485:
 1766 1700 83C230   		addl	$48, %edx
 1767 1703 885602   		movb	%dl, 2(%rsi)
 1768 1706 EBA3     		jmp	.L486
 1769 1708 0F1F8400 		.p2align 4,,10
 1769      00000000 
 1770              		.p2align 3
 1771              	.L483:
 1772 1710 83C230   		addl	$48, %edx
 1773 1713 885603   		movb	%dl, 3(%rsi)
 1774 1716 E97CFFFF 		jmp	.L484
 1774      FF
 1775 171b 0F1F4400 		.p2align 4,,10
 1775      00
 1776              		.p2align 3
 1777              	.L481:
 1778 1720 83C230   		addl	$48, %edx
 1779 1723 885604   		movb	%dl, 4(%rsi)
 1780 1726 E954FFFF 		jmp	.L482
 1780      FF
 1781 172b 0F1F4400 		.p2align 4,,10
 1781      00
 1782              		.p2align 3
 1783              	.L479:
 1784 1730 83C230   		addl	$48, %edx
 1785 1733 885605   		movb	%dl, 5(%rsi)
 1786 1736 E92CFFFF 		jmp	.L480
 1786      FF
 1787 173b 0F1F4400 		.p2align 4,,10
 1787      00
 1788              		.p2align 3
 1789              	.L477:
 1790 1740 83C230   		addl	$48, %edx
 1791 1743 885606   		movb	%dl, 6(%rsi)
 1792 1746 E904FFFF 		jmp	.L478
 1792      FF
 1793              		.cfi_endproc
 1794              	.LFE62:
 1796              		.section	.text.unlikely
 1797              	.LCOLDE13:
 1798              		.text
 1799              	.LHOTE13:
 1800              		.section	.text.unlikely
 1801              	.LCOLDB14:
 1802              		.text
 1803              	.LHOTB14:
 1804 174b 0F1F4400 		.p2align 4,,15
 1804      00
 1805              		.globl	read_chan
 1807              	read_chan:
 1808              	.LFB64:
 1809              		.cfi_startproc
 1810 1750 4157     		pushq	%r15
 1811              		.cfi_def_cfa_offset 16
 1812              		.cfi_offset 15, -16
 1813 1752 4156     		pushq	%r14
 1814              		.cfi_def_cfa_offset 24
 1815              		.cfi_offset 14, -24
 1816 1754 89D1     		movl	%edx, %ecx
 1817 1756 4155     		pushq	%r13
 1818              		.cfi_def_cfa_offset 32
 1819              		.cfi_offset 13, -32
 1820 1758 4154     		pushq	%r12
 1821              		.cfi_def_cfa_offset 40
 1822              		.cfi_offset 12, -40
 1823 175a 83E10F   		andl	$15, %ecx
 1824 175d 55       		pushq	%rbp
 1825              		.cfi_def_cfa_offset 48
 1826              		.cfi_offset 6, -48
 1827 175e 53       		pushq	%rbx
 1828              		.cfi_def_cfa_offset 56
 1829              		.cfi_offset 3, -56
 1830 175f 4889F5   		movq	%rsi, %rbp
 1831 1762 4889FB   		movq	%rdi, %rbx
 1832 1765 4883EC78 		subq	$120, %rsp
 1833              		.cfi_def_cfa_offset 176
 1834 1769 64488B04 		movq	%fs:40, %rax
 1834      25280000 
 1834      00
 1835 1772 48894424 		movq	%rax, 104(%rsp)
 1835      68
 1836 1777 31C0     		xorl	%eax, %eax
 1837 1779 83F909   		cmpl	$9, %ecx
 1838 177c C6442411 		movb	$0, 17(%rsp)
 1838      00
 1839 1781 C6442442 		movb	$0, 66(%rsp)
 1839      00
 1840 1786 4863C2   		movslq	%edx, %rax
 1841 1789 0F8E1102 		jle	.L492
 1841      0000
 1842 178f 83C157   		addl	$87, %ecx
 1843 1792 48C1E804 		shrq	$4, %rax
 1844 1796 884C2467 		movb	%cl, 103(%rsp)
 1845 179a 89C1     		movl	%eax, %ecx
 1846 179c 83E10F   		andl	$15, %ecx
 1847 179f 83F909   		cmpl	$9, %ecx
 1848 17a2 0F8E1102 		jle	.L494
 1848      0000
 1849              	.L523:
 1850 17a8 83C157   		addl	$87, %ecx
 1851 17ab 48C1E804 		shrq	$4, %rax
 1852 17af 884C2466 		movb	%cl, 102(%rsp)
 1853 17b3 89C1     		movl	%eax, %ecx
 1854 17b5 83E10F   		andl	$15, %ecx
 1855 17b8 83F909   		cmpl	$9, %ecx
 1856 17bb 0F8E1102 		jle	.L496
 1856      0000
 1857              	.L524:
 1858 17c1 83C157   		addl	$87, %ecx
 1859 17c4 48C1E804 		shrq	$4, %rax
 1860 17c8 884C2465 		movb	%cl, 101(%rsp)
 1861 17cc 89C1     		movl	%eax, %ecx
 1862 17ce 83E10F   		andl	$15, %ecx
 1863 17d1 83F909   		cmpl	$9, %ecx
 1864 17d4 0F8E1102 		jle	.L498
 1864      0000
 1865              	.L525:
 1866 17da 83C157   		addl	$87, %ecx
 1867 17dd 48C1E804 		shrq	$4, %rax
 1868 17e1 884C2464 		movb	%cl, 100(%rsp)
 1869 17e5 89C1     		movl	%eax, %ecx
 1870 17e7 83E10F   		andl	$15, %ecx
 1871 17ea 83F909   		cmpl	$9, %ecx
 1872 17ed 0F8E1102 		jle	.L500
 1872      0000
 1873              	.L526:
 1874 17f3 83C157   		addl	$87, %ecx
 1875 17f6 48C1E804 		shrq	$4, %rax
 1876 17fa 884C2463 		movb	%cl, 99(%rsp)
 1877 17fe 89C1     		movl	%eax, %ecx
 1878 1800 83E10F   		andl	$15, %ecx
 1879 1803 83F909   		cmpl	$9, %ecx
 1880 1806 0F8E1102 		jle	.L502
 1880      0000
 1881              	.L527:
 1882 180c 83C157   		addl	$87, %ecx
 1883 180f 48C1E804 		shrq	$4, %rax
 1884 1813 884C2462 		movb	%cl, 98(%rsp)
 1885 1817 89C1     		movl	%eax, %ecx
 1886 1819 83E10F   		andl	$15, %ecx
 1887 181c 83F909   		cmpl	$9, %ecx
 1888 181f 0F8E1102 		jle	.L504
 1888      0000
 1889              	.L528:
 1890 1825 48C1E804 		shrq	$4, %rax
 1891 1829 83C157   		addl	$87, %ecx
 1892 182c 83E00F   		andl	$15, %eax
 1893 182f 884C2461 		movb	%cl, 97(%rsp)
 1894 1833 83F809   		cmpl	$9, %eax
 1895 1836 0F8F1102 		jg	.L506
 1895      0000
 1896              	.L529:
 1897 183c 83C030   		addl	$48, %eax
 1898 183f 88442460 		movb	%al, 96(%rsp)
 1899              	.L507:
 1900 1843 440FB67C 		movzbl	103(%rsp), %r15d
 1900      2467
 1901 1849 4C8D7424 		leaq	64(%rsp), %r14
 1901      40
 1902 184e B9720000 		movl	$114, %ecx
 1902      00
 1903 1853 B8220000 		movl	$34, %eax
 1903      00
 1904 1858 66894C24 		movw	%cx, 48(%rsp)
 1904      30
 1905 185d C7442450 		movl	$2110496, 80(%rsp)
 1905      20342000 
 1906 1865 66894424 		movw	%ax, 32(%rsp)
 1906      20
 1907 186a 4C89F1   		movq	%r14, %rcx
 1908 186d 44887C24 		movb	%r15b, 16(%rsp)
 1908      10
 1909              	.L508:
 1910 1872 8B39     		movl	(%rcx), %edi
 1911 1874 4883C104 		addq	$4, %rcx
 1912 1878 8D87FFFE 		leal	-16843009(%rdi), %eax
 1912      FEFE
 1913 187e F7D7     		notl	%edi
 1914 1880 21F8     		andl	%edi, %eax
 1915 1882 25808080 		andl	$-2139062144, %eax
 1915      80
 1916 1887 74E9     		je	.L508
 1917 1889 89C6     		movl	%eax, %esi
 1918 188b C1EE10   		shrl	$16, %esi
 1919 188e A9808000 		testl	$32896, %eax
 1919      00
 1920 1893 0F44C6   		cmove	%esi, %eax
 1921 1896 488D7102 		leaq	2(%rcx), %rsi
 1922 189a 89C7     		movl	%eax, %edi
 1923 189c 480F44CE 		cmove	%rsi, %rcx
 1924 18a0 4000C7   		addb	%al, %dil
 1925 18a3 488D7424 		leaq	16(%rsp), %rsi
 1925      10
 1926 18a8 4883D903 		sbbq	$3, %rcx
 1927 18ac 4C29F1   		subq	%r14, %rcx
 1928 18af 4989F5   		movq	%rsi, %r13
 1929              	.L510:
 1930 18b2 418B7D00 		movl	0(%r13), %edi
 1931 18b6 4983C504 		addq	$4, %r13
 1932 18ba 8D87FFFE 		leal	-16843009(%rdi), %eax
 1932      FEFE
 1933 18c0 F7D7     		notl	%edi
 1934 18c2 21F8     		andl	%edi, %eax
 1935 18c4 25808080 		andl	$-2139062144, %eax
 1935      80
 1936 18c9 74E7     		je	.L510
 1937 18cb 89C7     		movl	%eax, %edi
 1938 18cd 8954240C 		movl	%edx, 12(%rsp)
 1939 18d1 48893424 		movq	%rsi, (%rsp)
 1940 18d5 C1EF10   		shrl	$16, %edi
 1941 18d8 A9808000 		testl	$32896, %eax
 1941      00
 1942 18dd 0F44C7   		cmove	%edi, %eax
 1943 18e0 498D7D02 		leaq	2(%r13), %rdi
 1944 18e4 89C2     		movl	%eax, %edx
 1945 18e6 4C0F44EF 		cmove	%rdi, %r13
 1946 18ea 00C2     		addb	%al, %dl
 1947 18ec 4889DF   		movq	%rbx, %rdi
 1948 18ef 4983DD03 		sbbq	$3, %r13
 1949 18f3 4929F5   		subq	%rsi, %r13
 1950 18f6 4E8D6429 		leaq	2(%rcx,%r13), %r12
 1950      02
 1951 18fb E8000000 		call	strlen
 1951      00
 1952 1900 498D7C04 		leaq	5(%r12,%rax), %rdi
 1952      05
 1953 1905 E8000000 		call	malloc
 1953      00
 1954 190a 8B54240C 		movl	12(%rsp), %edx
 1955 190e 4989C4   		movq	%rax, %r12
 1956 1911 0FB74424 		movzwl	48(%rsp), %eax
 1956      30
 1957 1916 488B3424 		movq	(%rsp), %rsi
 1958 191a 83FA0F   		cmpl	$15, %edx
 1959 191d 66418904 		movw	%ax, (%r12)
 1959      24
 1960 1922 0F8F3801 		jg	.L521
 1960      0000
 1961 1928 498D7C24 		leaq	1(%r12), %rdi
 1961      01
 1962 192d 498D5501 		leaq	1(%r13), %rdx
 1963 1931 E8000000 		call	memcpy
 1963      00
 1964              	.L513:
 1965 1936 488D7424 		leaq	80(%rsp), %rsi
 1965      50
 1966 193b 4C89E7   		movq	%r12, %rdi
 1967 193e E8000000 		call	strcat
 1967      00
 1968 1943 488D7424 		leaq	32(%rsp), %rsi
 1968      20
 1969 1948 4C89E7   		movq	%r12, %rdi
 1970 194b E8000000 		call	strcat
 1970      00
 1971 1950 4889DE   		movq	%rbx, %rsi
 1972 1953 4C89E7   		movq	%r12, %rdi
 1973 1956 E8000000 		call	strcat
 1973      00
 1974 195b 488D7424 		leaq	32(%rsp), %rsi
 1974      20
 1975 1960 4C89E7   		movq	%r12, %rdi
 1976 1963 E8000000 		call	strcat
 1976      00
 1977 1968 4C89E6   		movq	%r12, %rsi
 1978 196b 4889EF   		movq	%rbp, %rdi
 1979 196e E8000000 		call	strcpy
 1979      00
 1980 1973 488B4424 		movq	104(%rsp), %rax
 1980      68
 1981 1978 64483304 		xorq	%fs:40, %rax
 1981      25280000 
 1981      00
 1982 1981 0F85F900 		jne	.L522
 1982      0000
 1983 1987 4883C478 		addq	$120, %rsp
 1984              		.cfi_remember_state
 1985              		.cfi_def_cfa_offset 56
 1986 198b 4C89E7   		movq	%r12, %rdi
 1987 198e 5B       		popq	%rbx
 1988              		.cfi_def_cfa_offset 48
 1989 198f 5D       		popq	%rbp
 1990              		.cfi_def_cfa_offset 40
 1991 1990 415C     		popq	%r12
 1992              		.cfi_def_cfa_offset 32
 1993 1992 415D     		popq	%r13
 1994              		.cfi_def_cfa_offset 24
 1995 1994 415E     		popq	%r14
 1996              		.cfi_def_cfa_offset 16
 1997 1996 415F     		popq	%r15
 1998              		.cfi_def_cfa_offset 8
 1999 1998 E9000000 		jmp	free
 1999      00
 2000 199d 0F1F00   		.p2align 4,,10
 2001              		.p2align 3
 2002              	.L492:
 2003              		.cfi_restore_state
 2004 19a0 83C130   		addl	$48, %ecx
 2005 19a3 48C1E804 		shrq	$4, %rax
 2006 19a7 884C2467 		movb	%cl, 103(%rsp)
 2007 19ab 89C1     		movl	%eax, %ecx
 2008 19ad 83E10F   		andl	$15, %ecx
 2009 19b0 83F909   		cmpl	$9, %ecx
 2010 19b3 0F8FEFFD 		jg	.L523
 2010      FFFF
 2011              	.L494:
 2012 19b9 83C130   		addl	$48, %ecx
 2013 19bc 48C1E804 		shrq	$4, %rax
 2014 19c0 884C2466 		movb	%cl, 102(%rsp)
 2015 19c4 89C1     		movl	%eax, %ecx
 2016 19c6 83E10F   		andl	$15, %ecx
 2017 19c9 83F909   		cmpl	$9, %ecx
 2018 19cc 0F8FEFFD 		jg	.L524
 2018      FFFF
 2019              	.L496:
 2020 19d2 83C130   		addl	$48, %ecx
 2021 19d5 48C1E804 		shrq	$4, %rax
 2022 19d9 884C2465 		movb	%cl, 101(%rsp)
 2023 19dd 89C1     		movl	%eax, %ecx
 2024 19df 83E10F   		andl	$15, %ecx
 2025 19e2 83F909   		cmpl	$9, %ecx
 2026 19e5 0F8FEFFD 		jg	.L525
 2026      FFFF
 2027              	.L498:
 2028 19eb 83C130   		addl	$48, %ecx
 2029 19ee 48C1E804 		shrq	$4, %rax
 2030 19f2 884C2464 		movb	%cl, 100(%rsp)
 2031 19f6 89C1     		movl	%eax, %ecx
 2032 19f8 83E10F   		andl	$15, %ecx
 2033 19fb 83F909   		cmpl	$9, %ecx
 2034 19fe 0F8FEFFD 		jg	.L526
 2034      FFFF
 2035              	.L500:
 2036 1a04 83C130   		addl	$48, %ecx
 2037 1a07 48C1E804 		shrq	$4, %rax
 2038 1a0b 884C2463 		movb	%cl, 99(%rsp)
 2039 1a0f 89C1     		movl	%eax, %ecx
 2040 1a11 83E10F   		andl	$15, %ecx
 2041 1a14 83F909   		cmpl	$9, %ecx
 2042 1a17 0F8FEFFD 		jg	.L527
 2042      FFFF
 2043              	.L502:
 2044 1a1d 83C130   		addl	$48, %ecx
 2045 1a20 48C1E804 		shrq	$4, %rax
 2046 1a24 884C2462 		movb	%cl, 98(%rsp)
 2047 1a28 89C1     		movl	%eax, %ecx
 2048 1a2a 83E10F   		andl	$15, %ecx
 2049 1a2d 83F909   		cmpl	$9, %ecx
 2050 1a30 0F8FEFFD 		jg	.L528
 2050      FFFF
 2051              	.L504:
 2052 1a36 48C1E804 		shrq	$4, %rax
 2053 1a3a 83C130   		addl	$48, %ecx
 2054 1a3d 83E00F   		andl	$15, %eax
 2055 1a40 884C2461 		movb	%cl, 97(%rsp)
 2056 1a44 83F809   		cmpl	$9, %eax
 2057 1a47 0F8EEFFD 		jle	.L529
 2057      FFFF
 2058              	.L506:
 2059 1a4d 83C057   		addl	$87, %eax
 2060 1a50 88442460 		movb	%al, 96(%rsp)
 2061 1a54 E9EAFDFF 		jmp	.L507
 2061      FF
 2062 1a59 0F1F8000 		.p2align 4,,10
 2062      000000
 2063              		.p2align 3
 2064              	.L521:
 2065 1a60 0FB64424 		movzbl	102(%rsp), %eax
 2065      66
 2066 1a65 498D7C24 		leaq	1(%r12), %rdi
 2066      01
 2067 1a6a 4C89F6   		movq	%r14, %rsi
 2068 1a6d 44887C24 		movb	%r15b, 65(%rsp)
 2068      41
 2069 1a72 88442440 		movb	%al, 64(%rsp)
 2070 1a76 E8000000 		call	strcpy
 2070      00
 2071 1a7b E9B6FEFF 		jmp	.L513
 2071      FF
 2072              	.L522:
 2073 1a80 E8000000 		call	__stack_chk_fail
 2073      00
 2074              		.cfi_endproc
 2075              	.LFE64:
 2077              		.section	.text.unlikely
 2078              	.LCOLDE14:
 2079              		.text
 2080              	.LHOTE14:
 2081              		.section	.text.unlikely
 2082              	.LCOLDB15:
 2083              		.text
 2084              	.LHOTB15:
 2085 1a85 90662E0F 		.p2align 4,,15
 2085      1F840000 
 2085      000000
 2086              		.globl	decrypter
 2088              	decrypter:
 2089              	.LFB66:
 2090              		.cfi_startproc
 2091 1a90 4889F2   		movq	%rsi, %rdx
 2092 1a93 4989F1   		movq	%rsi, %r9
 2093 1a96 4989F0   		movq	%rsi, %r8
 2094 1a99 48C1EA1A 		shrq	$26, %rdx
 2095 1a9d 49C1E91E 		shrq	$30, %r9
 2096 1aa1 49C1E81D 		shrq	$29, %r8
 2097 1aa5 4131D1   		xorl	%edx, %r9d
 2098 1aa8 4889F2   		movq	%rsi, %rdx
 2099 1aab 4989F3   		movq	%rsi, %r11
 2100 1aae 48C1EA16 		shrq	$22, %rdx
 2101 1ab2 4989F2   		movq	%rsi, %r10
 2102 1ab5 49C1EB02 		shrq	$2, %r11
 2103 1ab9 4131D1   		xorl	%edx, %r9d
 2104 1abc 4889F2   		movq	%rsi, %rdx
 2105 1abf 49D1EA   		shrq	%r10
 2106 1ac2 48C1EA12 		shrq	$18, %rdx
 2107 1ac6 4889F1   		movq	%rsi, %rcx
 2108 1ac9 4183E301 		andl	$1, %r11d
 2109 1acd 4131D1   		xorl	%edx, %r9d
 2110 1ad0 4889F2   		movq	%rsi, %rdx
 2111 1ad3 4183E201 		andl	$1, %r10d
 2112 1ad7 48C1EA0E 		shrq	$14, %rdx
 2113 1adb 4889F8   		movq	%rdi, %rax
 2114 1ade 4889F7   		movq	%rsi, %rdi
 2115 1ae1 4131D1   		xorl	%edx, %r9d
 2116 1ae4 4889F2   		movq	%rsi, %rdx
 2117 1ae7 48C1EA0A 		shrq	$10, %rdx
 2118 1aeb 4131D1   		xorl	%edx, %r9d
 2119 1aee 4889F2   		movq	%rsi, %rdx
 2120 1af1 48C1EA06 		shrq	$6, %rdx
 2121 1af5 4131D1   		xorl	%edx, %r9d
 2122 1af8 4889F2   		movq	%rsi, %rdx
 2123 1afb 48C1EA19 		shrq	$25, %rdx
 2124 1aff 4183E101 		andl	$1, %r9d
 2125 1b03 4131D0   		xorl	%edx, %r8d
 2126 1b06 4889F2   		movq	%rsi, %rdx
 2127 1b09 48C1EA15 		shrq	$21, %rdx
 2128 1b0d 4131D0   		xorl	%edx, %r8d
 2129 1b10 4889F2   		movq	%rsi, %rdx
 2130 1b13 48C1EA11 		shrq	$17, %rdx
 2131 1b17 4131D0   		xorl	%edx, %r8d
 2132 1b1a 4889F2   		movq	%rsi, %rdx
 2133 1b1d 48C1EA0D 		shrq	$13, %rdx
 2134 1b21 4131D0   		xorl	%edx, %r8d
 2135 1b24 4889F2   		movq	%rsi, %rdx
 2136 1b27 48C1EA09 		shrq	$9, %rdx
 2137 1b2b 4131D0   		xorl	%edx, %r8d
 2138 1b2e 4889F2   		movq	%rsi, %rdx
 2139 1b31 48C1EA05 		shrq	$5, %rdx
 2140 1b35 4131D0   		xorl	%edx, %r8d
 2141 1b38 4889F2   		movq	%rsi, %rdx
 2142 1b3b 4183E001 		andl	$1, %r8d
 2143 1b3f 48C1EA18 		shrq	$24, %rdx
 2144 1b43 48C1E91C 		shrq	$28, %rcx
 2145 1b47 31CA     		xorl	%ecx, %edx
 2146 1b49 4889F1   		movq	%rsi, %rcx
 2147 1b4c 48C1EF08 		shrq	$8, %rdi
 2148 1b50 48C1E914 		shrq	$20, %rcx
 2149 1b54 31F2     		xorl	%esi, %edx
 2150 1b56 31CA     		xorl	%ecx, %edx
 2151 1b58 4889F1   		movq	%rsi, %rcx
 2152 1b5b 48C1E910 		shrq	$16, %rcx
 2153 1b5f 31CA     		xorl	%ecx, %edx
 2154 1b61 4889F1   		movq	%rsi, %rcx
 2155 1b64 48C1E90C 		shrq	$12, %rcx
 2156 1b68 31CA     		xorl	%ecx, %edx
 2157 1b6a 4889F1   		movq	%rsi, %rcx
 2158 1b6d 31FA     		xorl	%edi, %edx
 2159 1b6f 48C1E904 		shrq	$4, %rcx
 2160 1b73 31D1     		xorl	%edx, %ecx
 2161 1b75 4889F2   		movq	%rsi, %rdx
 2162 1b78 48C1EA1B 		shrq	$27, %rdx
 2163 1b7c 83E201   		andl	$1, %edx
 2164 1b7f 48F7C600 		testq	$-2147483648, %rsi
 2164      000080
 2165 1b86 400F95C7 		setne	%dil
 2166 1b8a 31FA     		xorl	%edi, %edx
 2167 1b8c 4889F7   		movq	%rsi, %rdi
 2168 1b8f 48C1EF17 		shrq	$23, %rdi
 2169 1b93 83E701   		andl	$1, %edi
 2170 1b96 31FA     		xorl	%edi, %edx
 2171 1b98 4889F7   		movq	%rsi, %rdi
 2172 1b9b 48C1EF13 		shrq	$19, %rdi
 2173 1b9f 83E701   		andl	$1, %edi
 2174 1ba2 31FA     		xorl	%edi, %edx
 2175 1ba4 4889F7   		movq	%rsi, %rdi
 2176 1ba7 48C1EF0F 		shrq	$15, %rdi
 2177 1bab 83E701   		andl	$1, %edi
 2178 1bae 31FA     		xorl	%edi, %edx
 2179 1bb0 4889F7   		movq	%rsi, %rdi
 2180 1bb3 48C1EF0B 		shrq	$11, %rdi
 2181 1bb7 83E701   		andl	$1, %edi
 2182 1bba 31FA     		xorl	%edi, %edx
 2183 1bbc 4889F7   		movq	%rsi, %rdi
 2184 1bbf 48C1EF07 		shrq	$7, %rdi
 2185 1bc3 83E701   		andl	$1, %edi
 2186 1bc6 31FA     		xorl	%edi, %edx
 2187 1bc8 4889F7   		movq	%rsi, %rdi
 2188 1bcb 48C1EF03 		shrq	$3, %rdi
 2189 1bcf 83E701   		andl	$1, %edi
 2190 1bd2 4038FA   		cmpb	%dil, %dl
 2191 1bd5 0F95C2   		setne	%dl
 2192 1bd8 0FB6FA   		movzbl	%dl, %edi
 2193 1bdb 0FB6D2   		movzbl	%dl, %edx
 2194 1bde 8D3CFD04 		leal	4(,%rdi,8), %edi
 2194      000000
 2195 1be5 C1E203   		sall	$3, %edx
 2196 1be8 4538D9   		cmpb	%r11b, %r9b
 2197 1beb 0F44FA   		cmove	%edx, %edi
 2198 1bee 31D2     		xorl	%edx, %edx
 2199 1bf0 4538D0   		cmpb	%r10b, %r8b
 2200 1bf3 0F95C2   		setne	%dl
 2201 1bf6 8D3C57   		leal	(%rdi,%rdx,2), %edi
 2202 1bf9 89CA     		movl	%ecx, %edx
 2203 1bfb 31C9     		xorl	%ecx, %ecx
 2204 1bfd 83E201   		andl	$1, %edx
 2205 1c00 01FA     		addl	%edi, %edx
 2206 1c02 BF010000 		movl	$1, %edi
 2206      00
 2207 1c07 4883C20F 		addq	$15, %rdx
 2208 1c0b 83E20F   		andl	$15, %edx
 2209 1c0e 6690     		.p2align 4,,10
 2210              		.p2align 3
 2211              	.L534:
 2212 1c10 4989D1   		movq	%rdx, %r9
 2213 1c13 4989D0   		movq	%rdx, %r8
 2214 1c16 4189FA   		movl	%edi, %r10d
 2215 1c19 49C1E11C 		salq	$28, %r9
 2216 1c1d 49C1E018 		salq	$24, %r8
 2217 1c21 41D3E2   		sall	%cl, %r10d
 2218 1c24 4D01C8   		addq	%r9, %r8
 2219 1c27 4989D1   		movq	%rdx, %r9
 2220 1c2a 4C8D5A0F 		leaq	15(%rdx), %r11
 2221 1c2e 49C1E114 		salq	$20, %r9
 2222 1c32 4D63D2   		movslq	%r10d, %r10
 2223 1c35 4D01C8   		addq	%r9, %r8
 2224 1c38 4989D1   		movq	%rdx, %r9
 2225 1c3b 4183E30F 		andl	$15, %r11d
 2226 1c3f 49C1E110 		salq	$16, %r9
 2227 1c43 4D01C8   		addq	%r9, %r8
 2228 1c46 4989D1   		movq	%rdx, %r9
 2229 1c49 49C1E10C 		salq	$12, %r9
 2230 1c4d 4D01C8   		addq	%r9, %r8
 2231 1c50 4989D1   		movq	%rdx, %r9
 2232 1c53 49C1E108 		salq	$8, %r9
 2233 1c57 4D01C8   		addq	%r9, %r8
 2234 1c5a 4989D1   		movq	%rdx, %r9
 2235 1c5d 49C1E104 		salq	$4, %r9
 2236 1c61 4D01C8   		addq	%r9, %r8
 2237 1c64 4901D0   		addq	%rdx, %r8
 2238 1c67 4931C0   		xorq	%rax, %r8
 2239 1c6a 4921F2   		andq	%rsi, %r10
 2240 1c6d 490F44C0 		cmove	%r8, %rax
 2241 1c71 490F44D3 		cmove	%r11, %rdx
 2242 1c75 4883C101 		addq	$1, %rcx
 2243 1c79 4883F920 		cmpq	$32, %rcx
 2244 1c7d 7591     		jne	.L534
 2245 1c7f F3C3     		rep ret
 2246              		.cfi_endproc
 2247              	.LFE66:
 2249              		.section	.text.unlikely
 2250              	.LCOLDE15:
 2251              		.text
 2252              	.LHOTE15:
 2253              		.section	.text.unlikely
 2254              	.LCOLDB16:
 2255              		.text
 2256              	.LHOTB16:
 2257 1c81 0F1F4400 		.p2align 4,,15
 2257      00662E0F 
 2257      1F840000 
 2257      000000
 2258              		.globl	encrypter
 2260              	encrypter:
 2261              	.LFB67:
 2262              		.cfi_startproc
 2263 1c90 4889F2   		movq	%rsi, %rdx
 2264 1c93 4989F1   		movq	%rsi, %r9
 2265 1c96 4989F0   		movq	%rsi, %r8
 2266 1c99 48C1EA1A 		shrq	$26, %rdx
 2267 1c9d 49C1E91E 		shrq	$30, %r9
 2268 1ca1 49C1E81D 		shrq	$29, %r8
 2269 1ca5 4131D1   		xorl	%edx, %r9d
 2270 1ca8 4889F2   		movq	%rsi, %rdx
 2271 1cab 4989F3   		movq	%rsi, %r11
 2272 1cae 48C1EA16 		shrq	$22, %rdx
 2273 1cb2 4989F2   		movq	%rsi, %r10
 2274 1cb5 49C1EB02 		shrq	$2, %r11
 2275 1cb9 4131D1   		xorl	%edx, %r9d
 2276 1cbc 4889F2   		movq	%rsi, %rdx
 2277 1cbf 49D1EA   		shrq	%r10
 2278 1cc2 48C1EA12 		shrq	$18, %rdx
 2279 1cc6 4889F1   		movq	%rsi, %rcx
 2280 1cc9 4183E301 		andl	$1, %r11d
 2281 1ccd 4131D1   		xorl	%edx, %r9d
 2282 1cd0 4889F2   		movq	%rsi, %rdx
 2283 1cd3 4183E201 		andl	$1, %r10d
 2284 1cd7 48C1EA0E 		shrq	$14, %rdx
 2285 1cdb 4889F8   		movq	%rdi, %rax
 2286 1cde 4131D1   		xorl	%edx, %r9d
 2287 1ce1 4889F2   		movq	%rsi, %rdx
 2288 1ce4 48C1EA0A 		shrq	$10, %rdx
 2289 1ce8 4131D1   		xorl	%edx, %r9d
 2290 1ceb 4889F2   		movq	%rsi, %rdx
 2291 1cee 48C1EA06 		shrq	$6, %rdx
 2292 1cf2 4131D1   		xorl	%edx, %r9d
 2293 1cf5 4889F2   		movq	%rsi, %rdx
 2294 1cf8 48C1EA19 		shrq	$25, %rdx
 2295 1cfc 4183E101 		andl	$1, %r9d
 2296 1d00 4131D0   		xorl	%edx, %r8d
 2297 1d03 4889F2   		movq	%rsi, %rdx
 2298 1d06 48C1EA15 		shrq	$21, %rdx
 2299 1d0a 4131D0   		xorl	%edx, %r8d
 2300 1d0d 4889F2   		movq	%rsi, %rdx
 2301 1d10 48C1EA11 		shrq	$17, %rdx
 2302 1d14 4131D0   		xorl	%edx, %r8d
 2303 1d17 4889F2   		movq	%rsi, %rdx
 2304 1d1a 48C1EA0D 		shrq	$13, %rdx
 2305 1d1e 4131D0   		xorl	%edx, %r8d
 2306 1d21 4889F2   		movq	%rsi, %rdx
 2307 1d24 48C1EA09 		shrq	$9, %rdx
 2308 1d28 4131D0   		xorl	%edx, %r8d
 2309 1d2b 4889F2   		movq	%rsi, %rdx
 2310 1d2e 48C1EA05 		shrq	$5, %rdx
 2311 1d32 4131D0   		xorl	%edx, %r8d
 2312 1d35 4889F2   		movq	%rsi, %rdx
 2313 1d38 4183E001 		andl	$1, %r8d
 2314 1d3c 48C1EA18 		shrq	$24, %rdx
 2315 1d40 48C1E91C 		shrq	$28, %rcx
 2316 1d44 31CA     		xorl	%ecx, %edx
 2317 1d46 4889F1   		movq	%rsi, %rcx
 2318 1d49 48C1E914 		shrq	$20, %rcx
 2319 1d4d 31F2     		xorl	%esi, %edx
 2320 1d4f 31CA     		xorl	%ecx, %edx
 2321 1d51 4889F1   		movq	%rsi, %rcx
 2322 1d54 48C1E910 		shrq	$16, %rcx
 2323 1d58 31CA     		xorl	%ecx, %edx
 2324 1d5a 4889F1   		movq	%rsi, %rcx
 2325 1d5d 48C1E90C 		shrq	$12, %rcx
 2326 1d61 31CA     		xorl	%ecx, %edx
 2327 1d63 4889F1   		movq	%rsi, %rcx
 2328 1d66 48C1E908 		shrq	$8, %rcx
 2329 1d6a 31CA     		xorl	%ecx, %edx
 2330 1d6c 4889F1   		movq	%rsi, %rcx
 2331 1d6f 48C1E904 		shrq	$4, %rcx
 2332 1d73 31CA     		xorl	%ecx, %edx
 2333 1d75 4889F1   		movq	%rsi, %rcx
 2334 1d78 48C1E91B 		shrq	$27, %rcx
 2335 1d7c 83E101   		andl	$1, %ecx
 2336 1d7f 48F7C600 		testq	$-2147483648, %rsi
 2336      000080
 2337 1d86 400F95C7 		setne	%dil
 2338 1d8a 31F9     		xorl	%edi, %ecx
 2339 1d8c 4889F7   		movq	%rsi, %rdi
 2340 1d8f 48C1EF17 		shrq	$23, %rdi
 2341 1d93 83E701   		andl	$1, %edi
 2342 1d96 31F9     		xorl	%edi, %ecx
 2343 1d98 4889F7   		movq	%rsi, %rdi
 2344 1d9b 48C1EF13 		shrq	$19, %rdi
 2345 1d9f 83E701   		andl	$1, %edi
 2346 1da2 31F9     		xorl	%edi, %ecx
 2347 1da4 4889F7   		movq	%rsi, %rdi
 2348 1da7 48C1EF0F 		shrq	$15, %rdi
 2349 1dab 83E701   		andl	$1, %edi
 2350 1dae 31F9     		xorl	%edi, %ecx
 2351 1db0 4889F7   		movq	%rsi, %rdi
 2352 1db3 48C1EF0B 		shrq	$11, %rdi
 2353 1db7 83E701   		andl	$1, %edi
 2354 1dba 31F9     		xorl	%edi, %ecx
 2355 1dbc 4889F7   		movq	%rsi, %rdi
 2356 1dbf 48C1EF07 		shrq	$7, %rdi
 2357 1dc3 83E701   		andl	$1, %edi
 2358 1dc6 31F9     		xorl	%edi, %ecx
 2359 1dc8 4889F7   		movq	%rsi, %rdi
 2360 1dcb 48C1EF03 		shrq	$3, %rdi
 2361 1dcf 83E701   		andl	$1, %edi
 2362 1dd2 4038F9   		cmpb	%dil, %cl
 2363 1dd5 0F95C1   		setne	%cl
 2364 1dd8 0FB6F9   		movzbl	%cl, %edi
 2365 1ddb 0FB6C9   		movzbl	%cl, %ecx
 2366 1dde 8D3CFD04 		leal	4(,%rdi,8), %edi
 2366      000000
 2367 1de5 C1E103   		sall	$3, %ecx
 2368 1de8 4538D9   		cmpb	%r11b, %r9b
 2369 1deb 0F44F9   		cmove	%ecx, %edi
 2370 1dee 31C9     		xorl	%ecx, %ecx
 2371 1df0 4538D0   		cmpb	%r10b, %r8b
 2372 1df3 0F95C1   		setne	%cl
 2373 1df6 83E201   		andl	$1, %edx
 2374 1df9 8D0C4F   		leal	(%rdi,%rcx,2), %ecx
 2375 1dfc BF010000 		movl	$1, %edi
 2375      00
 2376 1e01 01CA     		addl	%ecx, %edx
 2377 1e03 31C9     		xorl	%ecx, %ecx
 2378 1e05 4863D2   		movslq	%edx, %rdx
 2379 1e08 0F1F8400 		.p2align 4,,10
 2379      00000000 
 2380              		.p2align 3
 2381              	.L543:
 2382 1e10 4989D1   		movq	%rdx, %r9
 2383 1e13 4989D0   		movq	%rdx, %r8
 2384 1e16 4189FA   		movl	%edi, %r10d
 2385 1e19 49C1E11C 		salq	$28, %r9
 2386 1e1d 49C1E018 		salq	$24, %r8
 2387 1e21 41D3E2   		sall	%cl, %r10d
 2388 1e24 4D01C8   		addq	%r9, %r8
 2389 1e27 4989D1   		movq	%rdx, %r9
 2390 1e2a 4C8D5A01 		leaq	1(%rdx), %r11
 2391 1e2e 49C1E114 		salq	$20, %r9
 2392 1e32 4D63D2   		movslq	%r10d, %r10
 2393 1e35 4D01C8   		addq	%r9, %r8
 2394 1e38 4989D1   		movq	%rdx, %r9
 2395 1e3b 4183E30F 		andl	$15, %r11d
 2396 1e3f 49C1E110 		salq	$16, %r9
 2397 1e43 4D01C8   		addq	%r9, %r8
 2398 1e46 4989D1   		movq	%rdx, %r9
 2399 1e49 49C1E10C 		salq	$12, %r9
 2400 1e4d 4D01C8   		addq	%r9, %r8
 2401 1e50 4989D1   		movq	%rdx, %r9
 2402 1e53 49C1E108 		salq	$8, %r9
 2403 1e57 4D01C8   		addq	%r9, %r8
 2404 1e5a 4989D1   		movq	%rdx, %r9
 2405 1e5d 49C1E104 		salq	$4, %r9
 2406 1e61 4D01C8   		addq	%r9, %r8
 2407 1e64 4901D0   		addq	%rdx, %r8
 2408 1e67 4931C0   		xorq	%rax, %r8
 2409 1e6a 4921F2   		andq	%rsi, %r10
 2410 1e6d 490F45C0 		cmovne	%r8, %rax
 2411 1e71 490F45D3 		cmovne	%r11, %rdx
 2412 1e75 4883C101 		addq	$1, %rcx
 2413 1e79 4883F920 		cmpq	$32, %rcx
 2414 1e7d 7591     		jne	.L543
 2415 1e7f F3C3     		rep ret
 2416              		.cfi_endproc
 2417              	.LFE67:
 2419              		.section	.text.unlikely
 2420              	.LCOLDE16:
 2421              		.text
 2422              	.LHOTE16:
 2423              		.section	.text.unlikely
 2424              	.LCOLDB17:
 2425              		.text
 2426              	.LHOTB17:
 2427 1e81 0F1F4400 		.p2align 4,,15
 2427      00662E0F 
 2427      1F840000 
 2427      000000
 2428              		.globl	send_chan
 2430              	send_chan:
 2431              	.LFB63:
 2432              		.cfi_startproc
 2433 1e90 4157     		pushq	%r15
 2434              		.cfi_def_cfa_offset 16
 2435              		.cfi_offset 15, -16
 2436 1e92 4156     		pushq	%r14
 2437              		.cfi_def_cfa_offset 24
 2438              		.cfi_offset 14, -24
 2439 1e94 4155     		pushq	%r13
 2440              		.cfi_def_cfa_offset 32
 2441              		.cfi_offset 13, -32
 2442 1e96 4154     		pushq	%r12
 2443              		.cfi_def_cfa_offset 40
 2444              		.cfi_offset 12, -40
 2445 1e98 4189D5   		movl	%edx, %r13d
 2446 1e9b 55       		pushq	%rbp
 2447              		.cfi_def_cfa_offset 48
 2448              		.cfi_offset 6, -48
 2449 1e9c 53       		pushq	%rbx
 2450              		.cfi_def_cfa_offset 56
 2451              		.cfi_offset 3, -56
 2452 1e9d 4889F5   		movq	%rsi, %rbp
 2453 1ea0 4881EC88 		subq	$136, %rsp
 2453      000000
 2454              		.cfi_def_cfa_offset 192
 2455 1ea7 488B3500 		movq	Key(%rip), %rsi
 2455      000000
 2456 1eae 64488B04 		movq	%fs:40, %rax
 2456      25280000 
 2456      00
 2457 1eb7 48894424 		movq	%rax, 120(%rsp)
 2457      78
 2458 1ebc 31C0     		xorl	%eax, %eax
 2459 1ebe E8000000 		call	encrypter
 2459      00
 2460 1ec3 4489EA   		movl	%r13d, %edx
 2461 1ec6 4889C1   		movq	%rax, %rcx
 2462 1ec9 C6442411 		movb	$0, 17(%rsp)
 2462      00
 2463 1ece 83E20F   		andl	$15, %edx
 2464 1ed1 C6442442 		movb	$0, 66(%rsp)
 2464      00
 2465 1ed6 4963C5   		movslq	%r13d, %rax
 2466 1ed9 83FA09   		cmpl	$9, %edx
 2467 1edc 0F8EBE02 		jle	.L549
 2467      0000
 2468 1ee2 83C257   		addl	$87, %edx
 2469 1ee5 48C1E804 		shrq	$4, %rax
 2470 1ee9 88542457 		movb	%dl, 87(%rsp)
 2471 1eed 89C2     		movl	%eax, %edx
 2472 1eef 83E20F   		andl	$15, %edx
 2473 1ef2 83FA09   		cmpl	$9, %edx
 2474 1ef5 0F8EBE02 		jle	.L551
 2474      0000
 2475              	.L596:
 2476 1efb 83C257   		addl	$87, %edx
 2477 1efe 48C1E804 		shrq	$4, %rax
 2478 1f02 88542456 		movb	%dl, 86(%rsp)
 2479 1f06 89C2     		movl	%eax, %edx
 2480 1f08 83E20F   		andl	$15, %edx
 2481 1f0b 83FA09   		cmpl	$9, %edx
 2482 1f0e 0F8EBE02 		jle	.L553
 2482      0000
 2483              	.L597:
 2484 1f14 83C257   		addl	$87, %edx
 2485 1f17 48C1E804 		shrq	$4, %rax
 2486 1f1b 88542455 		movb	%dl, 85(%rsp)
 2487 1f1f 89C2     		movl	%eax, %edx
 2488 1f21 83E20F   		andl	$15, %edx
 2489 1f24 83FA09   		cmpl	$9, %edx
 2490 1f27 0F8EBE02 		jle	.L555
 2490      0000
 2491              	.L598:
 2492 1f2d 83C257   		addl	$87, %edx
 2493 1f30 48C1E804 		shrq	$4, %rax
 2494 1f34 88542454 		movb	%dl, 84(%rsp)
 2495 1f38 89C2     		movl	%eax, %edx
 2496 1f3a 83E20F   		andl	$15, %edx
 2497 1f3d 83FA09   		cmpl	$9, %edx
 2498 1f40 0F8EBE02 		jle	.L557
 2498      0000
 2499              	.L599:
 2500 1f46 83C257   		addl	$87, %edx
 2501 1f49 48C1E804 		shrq	$4, %rax
 2502 1f4d 88542453 		movb	%dl, 83(%rsp)
 2503 1f51 89C2     		movl	%eax, %edx
 2504 1f53 83E20F   		andl	$15, %edx
 2505 1f56 83FA09   		cmpl	$9, %edx
 2506 1f59 0F8EBE02 		jle	.L559
 2506      0000
 2507              	.L600:
 2508 1f5f 83C257   		addl	$87, %edx
 2509 1f62 48C1E804 		shrq	$4, %rax
 2510 1f66 88542452 		movb	%dl, 82(%rsp)
 2511 1f6a 89C2     		movl	%eax, %edx
 2512 1f6c 83E20F   		andl	$15, %edx
 2513 1f6f 83FA09   		cmpl	$9, %edx
 2514 1f72 0F8EBE02 		jle	.L561
 2514      0000
 2515              	.L601:
 2516 1f78 48C1E804 		shrq	$4, %rax
 2517 1f7c 83C257   		addl	$87, %edx
 2518 1f7f 83E00F   		andl	$15, %eax
 2519 1f82 88542451 		movb	%dl, 81(%rsp)
 2520 1f86 83F809   		cmpl	$9, %eax
 2521 1f89 0F8FBE02 		jg	.L563
 2521      0000
 2522              	.L602:
 2523 1f8f 83C030   		addl	$48, %eax
 2524 1f92 88442450 		movb	%al, 80(%rsp)
 2525              	.L564:
 2526 1f96 0FB65424 		movzbl	87(%rsp), %edx
 2526      57
 2527 1f9b 48B83030 		movabsq	$3472328296227680304, %rax
 2527      30303030 
 2527      3030
 2528 1fa5 4C8D7424 		leaq	64(%rsp), %r14
 2528      40
 2529 1faa BE200000 		movl	$32, %esi
 2529      00
 2530 1faf 48894424 		movq	%rax, 96(%rsp)
 2530      60
 2531 1fb4 B8770000 		movl	$119, %eax
 2531      00
 2532 1fb9 66897424 		movw	%si, 48(%rsp)
 2532      30
 2533 1fbe C6442468 		movb	$0, 104(%rsp)
 2533      00
 2534 1fc3 4C89F6   		movq	%r14, %rsi
 2535 1fc6 66894424 		movw	%ax, 32(%rsp)
 2535      20
 2536 1fcb 88542410 		movb	%dl, 16(%rsp)
 2537              	.L565:
 2538 1fcf 8B3E     		movl	(%rsi), %edi
 2539 1fd1 4883C604 		addq	$4, %rsi
 2540 1fd5 8D87FFFE 		leal	-16843009(%rdi), %eax
 2540      FEFE
 2541 1fdb F7D7     		notl	%edi
 2542 1fdd 21F8     		andl	%edi, %eax
 2543 1fdf 25808080 		andl	$-2139062144, %eax
 2543      80
 2544 1fe4 74E9     		je	.L565
 2545 1fe6 89C7     		movl	%eax, %edi
 2546 1fe8 4C8D7C24 		leaq	16(%rsp), %r15
 2546      10
 2547 1fed C1EF10   		shrl	$16, %edi
 2548 1ff0 A9808000 		testl	$32896, %eax
 2548      00
 2549 1ff5 0F44C7   		cmove	%edi, %eax
 2550 1ff8 488D7E02 		leaq	2(%rsi), %rdi
 2551 1ffc 4D89FC   		movq	%r15, %r12
 2552 1fff 89C3     		movl	%eax, %ebx
 2553 2001 480F44F7 		cmove	%rdi, %rsi
 2554 2005 00C3     		addb	%al, %bl
 2555 2007 4883DE03 		sbbq	$3, %rsi
 2556 200b 4C29F6   		subq	%r14, %rsi
 2557              	.L567:
 2558 200e 418B3C24 		movl	(%r12), %edi
 2559 2012 4983C404 		addq	$4, %r12
 2560 2016 8D87FFFE 		leal	-16843009(%rdi), %eax
 2560      FEFE
 2561 201c F7D7     		notl	%edi
 2562 201e 21F8     		andl	%edi, %eax
 2563 2020 25808080 		andl	$-2139062144, %eax
 2563      80
 2564 2025 74E7     		je	.L567
 2565 2027 89C7     		movl	%eax, %edi
 2566 2029 8854240F 		movb	%dl, 15(%rsp)
 2567 202d 48890C24 		movq	%rcx, (%rsp)
 2568 2031 C1EF10   		shrl	$16, %edi
 2569 2034 A9808000 		testl	$32896, %eax
 2569      00
 2570 2039 0F44C7   		cmove	%edi, %eax
 2571 203c 498D7C24 		leaq	2(%r12), %rdi
 2571      02
 2572 2041 89C3     		movl	%eax, %ebx
 2573 2043 4C0F44E7 		cmove	%rdi, %r12
 2574 2047 00C3     		addb	%al, %bl
 2575 2049 4983DC03 		sbbq	$3, %r12
 2576 204d 4D29FC   		subq	%r15, %r12
 2577 2050 4A8D7C26 		leaq	11(%rsi,%r12), %rdi
 2577      0B
 2578 2055 E8000000 		call	malloc
 2578      00
 2579 205a 4889C3   		movq	%rax, %rbx
 2580 205d 0FB74424 		movzwl	32(%rsp), %eax
 2580      20
 2581 2062 488B0C24 		movq	(%rsp), %rcx
 2582 2066 0FB65424 		movzbl	15(%rsp), %edx
 2582      0F
 2583 206b 668903   		movw	%ax, (%rbx)
 2584 206e 89C8     		movl	%ecx, %eax
 2585 2070 83E00F   		andl	$15, %eax
 2586 2073 83F809   		cmpl	$9, %eax
 2587 2076 0F8EE401 		jle	.L569
 2587      0000
 2588 207c 83C057   		addl	$87, %eax
 2589 207f 88442467 		movb	%al, 103(%rsp)
 2590              	.L570:
 2591 2083 4889C8   		movq	%rcx, %rax
 2592 2086 48C1E804 		shrq	$4, %rax
 2593 208a 89C1     		movl	%eax, %ecx
 2594 208c 83E10F   		andl	$15, %ecx
 2595 208f 83F909   		cmpl	$9, %ecx
 2596 2092 0F8E5802 		jle	.L571
 2596      0000
 2597 2098 83C157   		addl	$87, %ecx
 2598 209b 884C2466 		movb	%cl, 102(%rsp)
 2599              	.L572:
 2600 209f 48C1E804 		shrq	$4, %rax
 2601 20a3 89C1     		movl	%eax, %ecx
 2602 20a5 83E10F   		andl	$15, %ecx
 2603 20a8 83F909   		cmpl	$9, %ecx
 2604 20ab 0F8E2F02 		jle	.L573
 2604      0000
 2605 20b1 83C157   		addl	$87, %ecx
 2606 20b4 884C2465 		movb	%cl, 101(%rsp)
 2607              	.L574:
 2608 20b8 48C1E804 		shrq	$4, %rax
 2609 20bc 89C1     		movl	%eax, %ecx
 2610 20be 83E10F   		andl	$15, %ecx
 2611 20c1 83F909   		cmpl	$9, %ecx
 2612 20c4 0F8E0602 		jle	.L575
 2612      0000
 2613 20ca 83C157   		addl	$87, %ecx
 2614 20cd 884C2464 		movb	%cl, 100(%rsp)
 2615              	.L576:
 2616 20d1 48C1E804 		shrq	$4, %rax
 2617 20d5 89C1     		movl	%eax, %ecx
 2618 20d7 83E10F   		andl	$15, %ecx
 2619 20da 83F909   		cmpl	$9, %ecx
 2620 20dd 0F8EDD01 		jle	.L577
 2620      0000
 2621 20e3 83C157   		addl	$87, %ecx
 2622 20e6 884C2463 		movb	%cl, 99(%rsp)
 2623              	.L578:
 2624 20ea 48C1E804 		shrq	$4, %rax
 2625 20ee 89C1     		movl	%eax, %ecx
 2626 20f0 83E10F   		andl	$15, %ecx
 2627 20f3 83F909   		cmpl	$9, %ecx
 2628 20f6 0F8EB401 		jle	.L579
 2628      0000
 2629 20fc 83C157   		addl	$87, %ecx
 2630 20ff 884C2462 		movb	%cl, 98(%rsp)
 2631              	.L580:
 2632 2103 48C1E804 		shrq	$4, %rax
 2633 2107 89C1     		movl	%eax, %ecx
 2634 2109 83E10F   		andl	$15, %ecx
 2635 210c 83F909   		cmpl	$9, %ecx
 2636 210f 0F8E8B01 		jle	.L581
 2636      0000
 2637 2115 83C157   		addl	$87, %ecx
 2638 2118 884C2461 		movb	%cl, 97(%rsp)
 2639              	.L582:
 2640 211c 48C1E804 		shrq	$4, %rax
 2641 2120 83E00F   		andl	$15, %eax
 2642 2123 83F809   		cmpl	$9, %eax
 2643 2126 0F8F4401 		jg	.L583
 2643      0000
 2644 212c 83C030   		addl	$48, %eax
 2645 212f 4183FD0F 		cmpl	$15, %r13d
 2646 2133 88442460 		movb	%al, 96(%rsp)
 2647 2137 0F8F4401 		jg	.L594
 2647      0000
 2648              	.L585:
 2649 213d 488D7B01 		leaq	1(%rbx), %rdi
 2650 2141 498D5424 		leaq	1(%r12), %rdx
 2650      01
 2651 2146 4C89FE   		movq	%r15, %rsi
 2652 2149 E8000000 		call	memcpy
 2652      00
 2653              	.L586:
 2654 214e 488D7424 		leaq	48(%rsp), %rsi
 2654      30
 2655 2153 4889DF   		movq	%rbx, %rdi
 2656 2156 E8000000 		call	strcat
 2656      00
 2657 215b 488D7424 		leaq	96(%rsp), %rsi
 2657      60
 2658 2160 4889DF   		movq	%rbx, %rdi
 2659 2163 E8000000 		call	strcat
 2659      00
 2660 2168 4889DE   		movq	%rbx, %rsi
 2661 216b 4889EF   		movq	%rbp, %rdi
 2662 216e E8000000 		call	strcpy
 2662      00
 2663 2173 488B4424 		movq	120(%rsp), %rax
 2663      78
 2664 2178 64483304 		xorq	%fs:40, %rax
 2664      25280000 
 2664      00
 2665 2181 0F857501 		jne	.L595
 2665      0000
 2666 2187 4881C488 		addq	$136, %rsp
 2666      000000
 2667              		.cfi_remember_state
 2668              		.cfi_def_cfa_offset 56
 2669 218e 4889DF   		movq	%rbx, %rdi
 2670 2191 5B       		popq	%rbx
 2671              		.cfi_def_cfa_offset 48
 2672 2192 5D       		popq	%rbp
 2673              		.cfi_def_cfa_offset 40
 2674 2193 415C     		popq	%r12
 2675              		.cfi_def_cfa_offset 32
 2676 2195 415D     		popq	%r13
 2677              		.cfi_def_cfa_offset 24
 2678 2197 415E     		popq	%r14
 2679              		.cfi_def_cfa_offset 16
 2680 2199 415F     		popq	%r15
 2681              		.cfi_def_cfa_offset 8
 2682 219b E9000000 		jmp	free
 2682      00
 2683              		.p2align 4,,10
 2684              		.p2align 3
 2685              	.L549:
 2686              		.cfi_restore_state
 2687 21a0 83C230   		addl	$48, %edx
 2688 21a3 48C1E804 		shrq	$4, %rax
 2689 21a7 88542457 		movb	%dl, 87(%rsp)
 2690 21ab 89C2     		movl	%eax, %edx
 2691 21ad 83E20F   		andl	$15, %edx
 2692 21b0 83FA09   		cmpl	$9, %edx
 2693 21b3 0F8F42FD 		jg	.L596
 2693      FFFF
 2694              	.L551:
 2695 21b9 83C230   		addl	$48, %edx
 2696 21bc 48C1E804 		shrq	$4, %rax
 2697 21c0 88542456 		movb	%dl, 86(%rsp)
 2698 21c4 89C2     		movl	%eax, %edx
 2699 21c6 83E20F   		andl	$15, %edx
 2700 21c9 83FA09   		cmpl	$9, %edx
 2701 21cc 0F8F42FD 		jg	.L597
 2701      FFFF
 2702              	.L553:
 2703 21d2 83C230   		addl	$48, %edx
 2704 21d5 48C1E804 		shrq	$4, %rax
 2705 21d9 88542455 		movb	%dl, 85(%rsp)
 2706 21dd 89C2     		movl	%eax, %edx
 2707 21df 83E20F   		andl	$15, %edx
 2708 21e2 83FA09   		cmpl	$9, %edx
 2709 21e5 0F8F42FD 		jg	.L598
 2709      FFFF
 2710              	.L555:
 2711 21eb 83C230   		addl	$48, %edx
 2712 21ee 48C1E804 		shrq	$4, %rax
 2713 21f2 88542454 		movb	%dl, 84(%rsp)
 2714 21f6 89C2     		movl	%eax, %edx
 2715 21f8 83E20F   		andl	$15, %edx
 2716 21fb 83FA09   		cmpl	$9, %edx
 2717 21fe 0F8F42FD 		jg	.L599
 2717      FFFF
 2718              	.L557:
 2719 2204 83C230   		addl	$48, %edx
 2720 2207 48C1E804 		shrq	$4, %rax
 2721 220b 88542453 		movb	%dl, 83(%rsp)
 2722 220f 89C2     		movl	%eax, %edx
 2723 2211 83E20F   		andl	$15, %edx
 2724 2214 83FA09   		cmpl	$9, %edx
 2725 2217 0F8F42FD 		jg	.L600
 2725      FFFF
 2726              	.L559:
 2727 221d 83C230   		addl	$48, %edx
 2728 2220 48C1E804 		shrq	$4, %rax
 2729 2224 88542452 		movb	%dl, 82(%rsp)
 2730 2228 89C2     		movl	%eax, %edx
 2731 222a 83E20F   		andl	$15, %edx
 2732 222d 83FA09   		cmpl	$9, %edx
 2733 2230 0F8F42FD 		jg	.L601
 2733      FFFF
 2734              	.L561:
 2735 2236 48C1E804 		shrq	$4, %rax
 2736 223a 83C230   		addl	$48, %edx
 2737 223d 83E00F   		andl	$15, %eax
 2738 2240 88542451 		movb	%dl, 81(%rsp)
 2739 2244 83F809   		cmpl	$9, %eax
 2740 2247 0F8E42FD 		jle	.L602
 2740      FFFF
 2741              	.L563:
 2742 224d 83C057   		addl	$87, %eax
 2743 2250 88442450 		movb	%al, 80(%rsp)
 2744 2254 E93DFDFF 		jmp	.L564
 2744      FF
 2745 2259 0F1F8000 		.p2align 4,,10
 2745      000000
 2746              		.p2align 3
 2747              	.L569:
 2748 2260 83C030   		addl	$48, %eax
 2749 2263 88442467 		movb	%al, 103(%rsp)
 2750 2267 E917FEFF 		jmp	.L570
 2750      FF
 2751 226c 0F1F4000 		.p2align 4,,10
 2752              		.p2align 3
 2753              	.L583:
 2754 2270 83C057   		addl	$87, %eax
 2755 2273 4183FD0F 		cmpl	$15, %r13d
 2756 2277 88442460 		movb	%al, 96(%rsp)
 2757 227b 0F8EBCFE 		jle	.L585
 2757      FFFF
 2758              	.L594:
 2759 2281 0FB64424 		movzbl	86(%rsp), %eax
 2759      56
 2760 2286 488D7B01 		leaq	1(%rbx), %rdi
 2761 228a 4C89F6   		movq	%r14, %rsi
 2762 228d 88542441 		movb	%dl, 65(%rsp)
 2763 2291 88442440 		movb	%al, 64(%rsp)
 2764 2295 E8000000 		call	strcpy
 2764      00
 2765 229a E9AFFEFF 		jmp	.L586
 2765      FF
 2766 229f 90       		.p2align 4,,10
 2767              		.p2align 3
 2768              	.L581:
 2769 22a0 83C130   		addl	$48, %ecx
 2770 22a3 884C2461 		movb	%cl, 97(%rsp)
 2771 22a7 E970FEFF 		jmp	.L582
 2771      FF
 2772 22ac 0F1F4000 		.p2align 4,,10
 2773              		.p2align 3
 2774              	.L579:
 2775 22b0 83C130   		addl	$48, %ecx
 2776 22b3 884C2462 		movb	%cl, 98(%rsp)
 2777 22b7 E947FEFF 		jmp	.L580
 2777      FF
 2778 22bc 0F1F4000 		.p2align 4,,10
 2779              		.p2align 3
 2780              	.L577:
 2781 22c0 83C130   		addl	$48, %ecx
 2782 22c3 884C2463 		movb	%cl, 99(%rsp)
 2783 22c7 E91EFEFF 		jmp	.L578
 2783      FF
 2784 22cc 0F1F4000 		.p2align 4,,10
 2785              		.p2align 3
 2786              	.L575:
 2787 22d0 83C130   		addl	$48, %ecx
 2788 22d3 884C2464 		movb	%cl, 100(%rsp)
 2789 22d7 E9F5FDFF 		jmp	.L576
 2789      FF
 2790 22dc 0F1F4000 		.p2align 4,,10
 2791              		.p2align 3
 2792              	.L573:
 2793 22e0 83C130   		addl	$48, %ecx
 2794 22e3 884C2465 		movb	%cl, 101(%rsp)
 2795 22e7 E9CCFDFF 		jmp	.L574
 2795      FF
 2796 22ec 0F1F4000 		.p2align 4,,10
 2797              		.p2align 3
 2798              	.L571:
 2799 22f0 83C130   		addl	$48, %ecx
 2800 22f3 884C2466 		movb	%cl, 102(%rsp)
 2801 22f7 E9A3FDFF 		jmp	.L572
 2801      FF
 2802              	.L595:
 2803 22fc E8000000 		call	__stack_chk_fail
 2803      00
 2804              		.cfi_endproc
 2805              	.LFE63:
 2807              		.section	.text.unlikely
 2808              	.LCOLDE17:
 2809              		.text
 2810              	.LHOTE17:
 2811              		.section	.text.unlikely
 2812              	.LCOLDB18:
 2813              		.text
 2814              	.LHOTB18:
 2815 2301 0F1F4400 		.p2align 4,,15
 2815      00662E0F 
 2815      1F840000 
 2815      000000
 2816              		.globl	send_data
 2818              	send_data:
 2819              	.LFB65:
 2820              		.cfi_startproc
 2821 2310 53       		pushq	%rbx
 2822              		.cfi_def_cfa_offset 16
 2823              		.cfi_offset 3, -16
 2824 2311 4889F3   		movq	%rsi, %rbx
 2825 2314 4883EC30 		subq	$48, %rsp
 2826              		.cfi_def_cfa_offset 64
 2827 2318 488B3500 		movq	Key(%rip), %rsi
 2827      000000
 2828 231f 64488B04 		movq	%fs:40, %rax
 2828      25280000 
 2828      00
 2829 2328 48894424 		movq	%rax, 40(%rsp)
 2829      28
 2830 232d 31C0     		xorl	%eax, %eax
 2831 232f E8000000 		call	encrypter
 2831      00
 2832 2334 89C2     		movl	%eax, %edx
 2833 2336 48B97731 		movabsq	$3472328296226632055, %rcx
 2833      20303030 
 2833      3030
 2834 2340 C6442408 		movb	$0, 8(%rsp)
 2834      00
 2835 2345 83E20F   		andl	$15, %edx
 2836 2348 48894C24 		movq	%rcx, 16(%rsp)
 2836      10
 2837 234d C7442418 		movl	$3158064, 24(%rsp)
 2837      30303000 
 2838 2355 83FA09   		cmpl	$9, %edx
 2839 2358 48890B   		movq	%rcx, (%rbx)
 2840 235b C7430830 		movl	$3158064, 8(%rbx)
 2840      303000
 2841 2362 0F8ED800 		jle	.L604
 2841      0000
 2842 2368 83C257   		addl	$87, %edx
 2843 236b 48C1E804 		shrq	$4, %rax
 2844 236f 88542407 		movb	%dl, 7(%rsp)
 2845 2373 89C2     		movl	%eax, %edx
 2846 2375 83E20F   		andl	$15, %edx
 2847 2378 83FA09   		cmpl	$9, %edx
 2848 237b 0F8ED800 		jle	.L606
 2848      0000
 2849              	.L623:
 2850 2381 83C257   		addl	$87, %edx
 2851 2384 48C1E804 		shrq	$4, %rax
 2852 2388 88542406 		movb	%dl, 6(%rsp)
 2853 238c 89C2     		movl	%eax, %edx
 2854 238e 83E20F   		andl	$15, %edx
 2855 2391 83FA09   		cmpl	$9, %edx
 2856 2394 0F8ED800 		jle	.L608
 2856      0000
 2857              	.L624:
 2858 239a 83C257   		addl	$87, %edx
 2859 239d 48C1E804 		shrq	$4, %rax
 2860 23a1 88542405 		movb	%dl, 5(%rsp)
 2861 23a5 89C2     		movl	%eax, %edx
 2862 23a7 83E20F   		andl	$15, %edx
 2863 23aa 83FA09   		cmpl	$9, %edx
 2864 23ad 0F8ED800 		jle	.L610
 2864      0000
 2865              	.L625:
 2866 23b3 83C257   		addl	$87, %edx
 2867 23b6 48C1E804 		shrq	$4, %rax
 2868 23ba 88542404 		movb	%dl, 4(%rsp)
 2869 23be 89C2     		movl	%eax, %edx
 2870 23c0 83E20F   		andl	$15, %edx
 2871 23c3 83FA09   		cmpl	$9, %edx
 2872 23c6 0F8ED800 		jle	.L612
 2872      0000
 2873              	.L626:
 2874 23cc 83C257   		addl	$87, %edx
 2875 23cf 48C1E804 		shrq	$4, %rax
 2876 23d3 88542403 		movb	%dl, 3(%rsp)
 2877 23d7 89C2     		movl	%eax, %edx
 2878 23d9 83E20F   		andl	$15, %edx
 2879 23dc 83FA09   		cmpl	$9, %edx
 2880 23df 0F8ED800 		jle	.L614
 2880      0000
 2881              	.L627:
 2882 23e5 83C257   		addl	$87, %edx
 2883 23e8 48C1E804 		shrq	$4, %rax
 2884 23ec 88542402 		movb	%dl, 2(%rsp)
 2885 23f0 89C2     		movl	%eax, %edx
 2886 23f2 83E20F   		andl	$15, %edx
 2887 23f5 83FA09   		cmpl	$9, %edx
 2888 23f8 0F8ED800 		jle	.L616
 2888      0000
 2889              	.L628:
 2890 23fe 48C1E804 		shrq	$4, %rax
 2891 2402 83C257   		addl	$87, %edx
 2892 2405 83E00F   		andl	$15, %eax
 2893 2408 88542401 		movb	%dl, 1(%rsp)
 2894 240c 83F809   		cmpl	$9, %eax
 2895 240f 0F8FD800 		jg	.L618
 2895      0000
 2896              	.L629:
 2897 2415 83C030   		addl	$48, %eax
 2898 2418 880424   		movb	%al, (%rsp)
 2899              	.L619:
 2900 241b 488B0424 		movq	(%rsp), %rax
 2901 241f 48894303 		movq	%rax, 3(%rbx)
 2902 2423 488B4424 		movq	40(%rsp), %rax
 2902      28
 2903 2428 64483304 		xorq	%fs:40, %rax
 2903      25280000 
 2903      00
 2904 2431 0F85C100 		jne	.L622
 2904      0000
 2905 2437 4883C430 		addq	$48, %rsp
 2906              		.cfi_remember_state
 2907              		.cfi_def_cfa_offset 16
 2908 243b 5B       		popq	%rbx
 2909              		.cfi_def_cfa_offset 8
 2910 243c C3       		ret
 2911 243d 0F1F00   		.p2align 4,,10
 2912              		.p2align 3
 2913              	.L604:
 2914              		.cfi_restore_state
 2915 2440 83C230   		addl	$48, %edx
 2916 2443 48C1E804 		shrq	$4, %rax
 2917 2447 88542407 		movb	%dl, 7(%rsp)
 2918 244b 89C2     		movl	%eax, %edx
 2919 244d 83E20F   		andl	$15, %edx
 2920 2450 83FA09   		cmpl	$9, %edx
 2921 2453 0F8F28FF 		jg	.L623
 2921      FFFF
 2922              	.L606:
 2923 2459 83C230   		addl	$48, %edx
 2924 245c 48C1E804 		shrq	$4, %rax
 2925 2460 88542406 		movb	%dl, 6(%rsp)
 2926 2464 89C2     		movl	%eax, %edx
 2927 2466 83E20F   		andl	$15, %edx
 2928 2469 83FA09   		cmpl	$9, %edx
 2929 246c 0F8F28FF 		jg	.L624
 2929      FFFF
 2930              	.L608:
 2931 2472 83C230   		addl	$48, %edx
 2932 2475 48C1E804 		shrq	$4, %rax
 2933 2479 88542405 		movb	%dl, 5(%rsp)
 2934 247d 89C2     		movl	%eax, %edx
 2935 247f 83E20F   		andl	$15, %edx
 2936 2482 83FA09   		cmpl	$9, %edx
 2937 2485 0F8F28FF 		jg	.L625
 2937      FFFF
 2938              	.L610:
 2939 248b 83C230   		addl	$48, %edx
 2940 248e 48C1E804 		shrq	$4, %rax
 2941 2492 88542404 		movb	%dl, 4(%rsp)
 2942 2496 89C2     		movl	%eax, %edx
 2943 2498 83E20F   		andl	$15, %edx
 2944 249b 83FA09   		cmpl	$9, %edx
 2945 249e 0F8F28FF 		jg	.L626
 2945      FFFF
 2946              	.L612:
 2947 24a4 83C230   		addl	$48, %edx
 2948 24a7 48C1E804 		shrq	$4, %rax
 2949 24ab 88542403 		movb	%dl, 3(%rsp)
 2950 24af 89C2     		movl	%eax, %edx
 2951 24b1 83E20F   		andl	$15, %edx
 2952 24b4 83FA09   		cmpl	$9, %edx
 2953 24b7 0F8F28FF 		jg	.L627
 2953      FFFF
 2954              	.L614:
 2955 24bd 83C230   		addl	$48, %edx
 2956 24c0 48C1E804 		shrq	$4, %rax
 2957 24c4 88542402 		movb	%dl, 2(%rsp)
 2958 24c8 89C2     		movl	%eax, %edx
 2959 24ca 83E20F   		andl	$15, %edx
 2960 24cd 83FA09   		cmpl	$9, %edx
 2961 24d0 0F8F28FF 		jg	.L628
 2961      FFFF
 2962              	.L616:
 2963 24d6 48C1E804 		shrq	$4, %rax
 2964 24da 83C230   		addl	$48, %edx
 2965 24dd 83E00F   		andl	$15, %eax
 2966 24e0 88542401 		movb	%dl, 1(%rsp)
 2967 24e4 83F809   		cmpl	$9, %eax
 2968 24e7 0F8E28FF 		jle	.L629
 2968      FFFF
 2969              	.L618:
 2970 24ed 83C057   		addl	$87, %eax
 2971 24f0 880424   		movb	%al, (%rsp)
 2972 24f3 E923FFFF 		jmp	.L619
 2972      FF
 2973              	.L622:
 2974 24f8 E8000000 		call	__stack_chk_fail
 2974      00
 2975              		.cfi_endproc
 2976              	.LFE65:
 2978              		.section	.text.unlikely
 2979              	.LCOLDE18:
 2980              		.text
 2981              	.LHOTE18:
 2982              		.section	.text.unlikely
 2983              	.LCOLDB19:
 2984              		.text
 2985              	.LHOTB19:
 2986 24fd 0F1F00   		.p2align 4,,15
 2987              		.globl	nthbit
 2989              	nthbit:
 2990              	.LFB68:
 2991              		.cfi_startproc
 2992 2500 89F1     		movl	%esi, %ecx
 2993 2502 B8010000 		movl	$1, %eax
 2993      00
 2994 2507 D3E0     		sall	%cl, %eax
 2995 2509 4898     		cltq
 2996 250b 4885F8   		testq	%rdi, %rax
 2997 250e 0F95C0   		setne	%al
 2998 2511 C3       		ret
 2999              		.cfi_endproc
 3000              	.LFE68:
 3002              		.section	.text.unlikely
 3003              	.LCOLDE19:
 3004              		.text
 3005              	.LHOTE19:
 3006              		.section	.rodata.str1.1
 3007              	.LC20:
 3008 0036 7200     		.string	"r"
 3009              	.LC21:
 3010 0038 7700     		.string	"w"
 3011              	.LC22:
 3012 003a 74656D70 		.string	"temp.csv"
 3012      2E637376 
 3012      00
 3013              	.LC23:
 3014 0043 25642C25 		.string	"%d,%d,%d,%d,%d\n"
 3014      642C2564 
 3014      2C25642C 
 3014      25640A00 
 3015              	.LC24:
 3016 0053 25642C25 		.string	"%d,%d,%d,%d,%d"
 3016      642C2564 
 3016      2C25642C 
 3016      256400
 3017              		.section	.text.unlikely
 3018              	.LCOLDB25:
 3019              		.text
 3020              	.LHOTB25:
 3021 2512 0F1F4000 		.p2align 4,,15
 3021      662E0F1F 
 3021      84000000 
 3021      0000
 3022              		.globl	editfile
 3024              	editfile:
 3025              	.LFB69:
 3026              		.cfi_startproc
 3027 2520 4157     		pushq	%r15
 3028              		.cfi_def_cfa_offset 16
 3029              		.cfi_offset 15, -16
 3030 2522 4156     		pushq	%r14
 3031              		.cfi_def_cfa_offset 24
 3032              		.cfi_offset 14, -24
 3033 2524 4189F7   		movl	%esi, %r15d
 3034 2527 4155     		pushq	%r13
 3035              		.cfi_def_cfa_offset 32
 3036              		.cfi_offset 13, -32
 3037 2529 4154     		pushq	%r12
 3038              		.cfi_def_cfa_offset 40
 3039              		.cfi_offset 12, -40
 3040 252b BE000000 		movl	$.LC20, %esi
 3040      00
 3041 2530 55       		pushq	%rbp
 3042              		.cfi_def_cfa_offset 48
 3043              		.cfi_offset 6, -48
 3044 2531 53       		pushq	%rbx
 3045              		.cfi_def_cfa_offset 56
 3046              		.cfi_offset 3, -56
 3047 2532 4189FD   		movl	%edi, %r13d
 3048 2535 4889D7   		movq	%rdx, %rdi
 3049 2538 4989CE   		movq	%rcx, %r14
 3050 253b 4883EC48 		subq	$72, %rsp
 3051              		.cfi_def_cfa_offset 128
 3052 253f 48895424 		movq	%rdx, 16(%rsp)
 3052      10
 3053 2544 488D5C24 		leaq	52(%rsp), %rbx
 3053      34
 3054 2549 64488B04 		movq	%fs:40, %rax
 3054      25280000 
 3054      00
 3055 2552 48894424 		movq	%rax, 56(%rsp)
 3055      38
 3056 2557 31C0     		xorl	%eax, %eax
 3057 2559 E8000000 		call	fopen
 3057      00
 3058 255e BE000000 		movl	$.LC21, %esi
 3058      00
 3059 2563 BF000000 		movl	$.LC22, %edi
 3059      00
 3060 2568 4889C5   		movq	%rax, %rbp
 3061 256b E8000000 		call	fopen
 3061      00
 3062 2570 4989C4   		movq	%rax, %r12
 3063 2573 498D461F 		leaq	31(%r14), %rax
 3064 2577 4D85F6   		testq	%r14, %r14
 3065 257a 490F49C6 		cmovns	%r14, %rax
 3066 257e 48C1F805 		sarq	$5, %rax
 3067 2582 48894424 		movq	%rax, 24(%rsp)
 3067      18
 3068 2587 89442404 		movl	%eax, 4(%rsp)
 3069 258b 4C89F0   		movq	%r14, %rax
 3070 258e 83E010   		andl	$16, %eax
 3071 2591 48894424 		movq	%rax, 8(%rsp)
 3071      08
 3072 2596 EB32     		jmp	.L632
 3073 2598 0F1F8400 		.p2align 4,,10
 3073      00000000 
 3074              		.p2align 3
 3075              	.L647:
 3076 25a0 448B4C24 		movl	44(%rsp), %r9d
 3076      2C
 3077 25a5 448B4424 		movl	40(%rsp), %r8d
 3077      28
 3078              	.L634:
 3079 25aa 8B442434 		movl	52(%rsp), %eax
 3080 25ae BA000000 		movl	$.LC23, %edx
 3080      00
 3081 25b3 BE010000 		movl	$1, %esi
 3081      00
 3082 25b8 4C89E7   		movq	%r12, %rdi
 3083 25bb 50       		pushq	%rax
 3084              		.cfi_def_cfa_offset 136
 3085 25bc 8B442438 		movl	56(%rsp), %eax
 3086 25c0 50       		pushq	%rax
 3087              		.cfi_def_cfa_offset 144
 3088 25c1 31C0     		xorl	%eax, %eax
 3089 25c3 E8000000 		call	__fprintf_chk
 3089      00
 3090 25c8 58       		popq	%rax
 3091              		.cfi_def_cfa_offset 136
 3092 25c9 5A       		popq	%rdx
 3093              		.cfi_def_cfa_offset 128
 3094              	.L632:
 3095 25ca 4883EC08 		subq	$8, %rsp
 3096              		.cfi_def_cfa_offset 136
 3097 25ce 31C0     		xorl	%eax, %eax
 3098 25d0 BE000000 		movl	$.LC24, %esi
 3098      00
 3099 25d5 53       		pushq	%rbx
 3100              		.cfi_def_cfa_offset 144
 3101 25d6 4889EF   		movq	%rbp, %rdi
 3102 25d9 4C8D4C24 		leaq	64(%rsp), %r9
 3102      40
 3103 25de 4C8D4424 		leaq	60(%rsp), %r8
 3103      3C
 3104 25e3 488D4C24 		leaq	56(%rsp), %rcx
 3104      38
 3105 25e8 488D5424 		leaq	52(%rsp), %rdx
 3105      34
 3106 25ed E8000000 		call	__isoc99_fscanf
 3106      00
 3107 25f2 83F8FF   		cmpl	$-1, %eax
 3108 25f5 415A     		popq	%r10
 3109              		.cfi_def_cfa_offset 136
 3110 25f7 415B     		popq	%r11
 3111              		.cfi_def_cfa_offset 128
 3112 25f9 7425     		je	.L646
 3113 25fb 8B4C2424 		movl	36(%rsp), %ecx
 3114 25ff 4439E9   		cmpl	%r13d, %ecx
 3115 2602 759C     		jne	.L647
 3116 2604 448B4424 		movl	40(%rsp), %r8d
 3116      28
 3117 2609 448B4C24 		movl	44(%rsp), %r9d
 3117      2C
 3118 260e 4539F8   		cmpl	%r15d, %r8d
 3119 2611 7597     		jne	.L634
 3120 2613 44394C24 		cmpl	%r9d, 4(%rsp)
 3120      04
 3121 2618 7590     		jne	.L634
 3122 261a EBAE     		jmp	.L632
 3123 261c 0F1F4000 		.p2align 4,,10
 3124              		.p2align 3
 3125              	.L646:
 3126 2620 48837C24 		cmpq	$0, 8(%rsp)
 3126      0800
 3127 2626 0F85CC00 		jne	.L648
 3127      0000
 3128              	.L638:
 3129 262c 4889EF   		movq	%rbp, %rdi
 3130 262f E8000000 		call	fclose
 3130      00
 3131 2634 4C89E7   		movq	%r12, %rdi
 3132 2637 E8000000 		call	fclose
 3132      00
 3133 263c 488B7C24 		movq	16(%rsp), %rdi
 3133      10
 3134 2641 BE000000 		movl	$.LC21, %esi
 3134      00
 3135 2646 E8000000 		call	fopen
 3135      00
 3136 264b BE000000 		movl	$.LC20, %esi
 3136      00
 3137 2650 BF000000 		movl	$.LC22, %edi
 3137      00
 3138 2655 4989C4   		movq	%rax, %r12
 3139 2658 E8000000 		call	fopen
 3139      00
 3140 265d 4889C5   		movq	%rax, %rbp
 3141 2660 EB34     		jmp	.L639
 3142              		.p2align 4,,10
 3143 2662 660F1F44 		.p2align 3
 3143      0000
 3144              	.L640:
 3145 2668 8B442434 		movl	52(%rsp), %eax
 3146 266c BE010000 		movl	$1, %esi
 3146      00
 3147 2671 4C89E7   		movq	%r12, %rdi
 3148 2674 BA000000 		movl	$.LC23, %edx
 3148      00
 3149 2679 50       		pushq	%rax
 3150              		.cfi_def_cfa_offset 136
 3151 267a 8B442438 		movl	56(%rsp), %eax
 3152 267e 50       		pushq	%rax
 3153              		.cfi_def_cfa_offset 144
 3154 267f 448B4C24 		movl	60(%rsp), %r9d
 3154      3C
 3155 2684 31C0     		xorl	%eax, %eax
 3156 2686 448B4424 		movl	56(%rsp), %r8d
 3156      38
 3157 268b 8B4C2434 		movl	52(%rsp), %ecx
 3158 268f E8000000 		call	__fprintf_chk
 3158      00
 3159 2694 5E       		popq	%rsi
 3160              		.cfi_def_cfa_offset 136
 3161 2695 5F       		popq	%rdi
 3162              		.cfi_def_cfa_offset 128
 3163              	.L639:
 3164 2696 4883EC08 		subq	$8, %rsp
 3165              		.cfi_def_cfa_offset 136
 3166 269a 31C0     		xorl	%eax, %eax
 3167 269c BE000000 		movl	$.LC24, %esi
 3167      00
 3168 26a1 53       		pushq	%rbx
 3169              		.cfi_def_cfa_offset 144
 3170 26a2 4889EF   		movq	%rbp, %rdi
 3171 26a5 4C8D4C24 		leaq	64(%rsp), %r9
 3171      40
 3172 26aa 4C8D4424 		leaq	60(%rsp), %r8
 3172      3C
 3173 26af 488D4C24 		leaq	56(%rsp), %rcx
 3173      38
 3174 26b4 488D5424 		leaq	52(%rsp), %rdx
 3174      34
 3175 26b9 E8000000 		call	__isoc99_fscanf
 3175      00
 3176 26be 83F8FF   		cmpl	$-1, %eax
 3177 26c1 5A       		popq	%rdx
 3178              		.cfi_def_cfa_offset 136
 3179 26c2 59       		popq	%rcx
 3180              		.cfi_def_cfa_offset 128
 3181 26c3 75A3     		jne	.L640
 3182 26c5 4889EF   		movq	%rbp, %rdi
 3183 26c8 E8000000 		call	fclose
 3183      00
 3184 26cd 4C89E7   		movq	%r12, %rdi
 3185 26d0 E8000000 		call	fclose
 3185      00
 3186 26d5 488B4424 		movq	56(%rsp), %rax
 3186      38
 3187 26da 64483304 		xorq	%fs:40, %rax
 3187      25280000 
 3187      00
 3188 26e3 755B     		jne	.L649
 3189 26e5 4883C448 		addq	$72, %rsp
 3190              		.cfi_remember_state
 3191              		.cfi_def_cfa_offset 56
 3192 26e9 5B       		popq	%rbx
 3193              		.cfi_def_cfa_offset 48
 3194 26ea 5D       		popq	%rbp
 3195              		.cfi_def_cfa_offset 40
 3196 26eb 415C     		popq	%r12
 3197              		.cfi_def_cfa_offset 32
 3198 26ed 415D     		popq	%r13
 3199              		.cfi_def_cfa_offset 24
 3200 26ef 415E     		popq	%r14
 3201              		.cfi_def_cfa_offset 16
 3202 26f1 415F     		popq	%r15
 3203              		.cfi_def_cfa_offset 8
 3204 26f3 C3       		ret
 3205              		.p2align 4,,10
 3206 26f4 0F1F4000 		.p2align 3
 3207              	.L648:
 3208              		.cfi_restore_state
 3209 26f8 4C89F2   		movq	%r14, %rdx
 3210 26fb 4589F8   		movl	%r15d, %r8d
 3211 26fe 4489E9   		movl	%r13d, %ecx
 3212 2701 48C1FA3F 		sarq	$63, %rdx
 3213 2705 BE010000 		movl	$1, %esi
 3213      00
 3214 270a 4C89E7   		movq	%r12, %rdi
 3215 270d 48C1EA3D 		shrq	$61, %rdx
 3216 2711 498D0416 		leaq	(%r14,%rdx), %rax
 3217 2715 49C1EE03 		shrq	$3, %r14
 3218 2719 4183E601 		andl	$1, %r14d
 3219 271d 83E007   		andl	$7, %eax
 3220 2720 4829D0   		subq	%rdx, %rax
 3221 2723 BA000000 		movl	$.LC23, %edx
 3221      00
 3222 2728 50       		pushq	%rax
 3223              		.cfi_def_cfa_offset 136
 3224 2729 4156     		pushq	%r14
 3225              		.cfi_def_cfa_offset 144
 3226 272b 31C0     		xorl	%eax, %eax
 3227 272d 448B4C24 		movl	40(%rsp), %r9d
 3227      28
 3228 2732 E8000000 		call	__fprintf_chk
 3228      00
 3229 2737 4158     		popq	%r8
 3230              		.cfi_def_cfa_offset 136
 3231 2739 4159     		popq	%r9
 3232              		.cfi_def_cfa_offset 128
 3233 273b E9ECFEFF 		jmp	.L638
 3233      FF
 3234              	.L649:
 3235 2740 E8000000 		call	__stack_chk_fail
 3235      00
 3236              		.cfi_endproc
 3237              	.LFE69:
 3239              		.section	.text.unlikely
 3240              	.LCOLDE25:
 3241              		.text
 3242              	.LHOTE25:
 3243              		.section	.rodata.str1.8
 3244 007e 0000     		.align 8
 3245              	.LC26:
 3246 0080 20202020 		.string	"            vendor ID and product ID (e.g 04B4:8613)"
 3246      20202020 
 3246      20202020 
 3246      76656E64 
 3246      6F722049 
 3247              		.section	.rodata.str1.1
 3248              	.LC27:
 3249 0062 3C564944 		.string	"<VID:PID>"
 3249      3A504944 
 3249      3E00
 3250              	.LC28:
 3251 006c 69767000 		.string	"ivp"
 3252              	.LC29:
 3253 0070 6900     		.string	"i"
 3254              		.section	.rodata.str1.8
 3255 00b5 000000   		.align 8
 3256              	.LC30:
 3257 00b8 20202020 		.string	"       VID, PID and opt. dev ID (e.g 1D50:602B:0001)"
 3257      20202056 
 3257      49442C20 
 3257      50494420 
 3257      616E6420 
 3258              		.section	.rodata.str1.1
 3259              	.LC31:
 3260 0072 3C564944 		.string	"<VID:PID[:DID]>"
 3260      3A504944 
 3260      5B3A4449 
 3260      445D3E00 
 3261              	.LC32:
 3262 0082 767000   		.string	"vp"
 3263              	.LC33:
 3264 0085 7600     		.string	"v"
 3265              		.section	.rodata.str1.8
 3266 00ed 000000   		.align 8
 3267              	.LC34:
 3268 00f0 20202020 		.string	"        firmware to RAM-load (or use std fw)"
 3268      20202020 
 3268      6669726D 
 3268      77617265 
 3268      20746F20 
 3269              		.section	.rodata.str1.1
 3270              	.LC35:
 3271 0087 3C666972 		.string	"<firmware.hex>"
 3271      6D776172 
 3271      652E6865 
 3271      783E00
 3272              	.LC36:
 3273 0096 667700   		.string	"fw"
 3274              	.LC37:
 3275 0099 6600     		.string	"f"
 3276              		.section	.rodata.str1.8
 3277 011d 000000   		.align 8
 3278              	.LC38:
 3279 0120 20726561 		.string	" read/write digital ports (e.g B13+,C1-,B2?)"
 3279      642F7772 
 3279      69746520 
 3279      64696769 
 3279      74616C20 
 3280              		.section	.rodata.str1.1
 3281              	.LC39:
 3282 009b 3C626974 		.string	"<bitCfg[,bitCfg]*>"
 3282      4366675B 
 3282      2C626974 
 3282      4366675D 
 3282      2A3E00
 3283              	.LC40:
 3284 00ae 706F7274 		.string	"ports"
 3284      7300
 3285              	.LC41:
 3286 00b4 6400     		.string	"d"
 3287              	.LC42:
 3288 00b6 20202020 		.string	"         query the JTAG chain"
 3288      20202020 
 3288      20717565 
 3288      72792074 
 3288      6865204A 
 3289              	.LC43:
 3290 00d4 3C6A7461 		.string	"<jtagBits>"
 3290      67426974 
 3290      733E00
 3291              	.LC44:
 3292 00df 71756572 		.string	"query"
 3292      7900
 3293              	.LC45:
 3294 00e5 7100     		.string	"q"
 3295              	.LC46:
 3296 00e7 20202020 		.string	"         program a device"
 3296      20202020 
 3296      2070726F 
 3296      6772616D 
 3296      20612064 
 3297              	.LC47:
 3298 0101 3C636F6E 		.string	"<config>"
 3298      6669673E 
 3298      00
 3299              	.LC48:
 3300 010a 70726F67 		.string	"program"
 3300      72616D00 
 3301              	.LC49:
 3302 0112 7000     		.string	"p"
 3303              		.section	.rodata.str1.8
 3304 014d 000000   		.align 8
 3305              	.LC50:
 3306 0150 20202020 		.string	"        which comm conduit to choose (default 0x01)"
 3306      20202020 
 3306      77686963 
 3306      6820636F 
 3306      6D6D2063 
 3307              		.section	.rodata.str1.1
 3308              	.LC51:
 3309 0114 3C636F6E 		.string	"<conduit>"
 3309      64756974 
 3309      3E00
 3310              	.LC52:
 3311 011e 636F6E64 		.string	"conduit"
 3311      75697400 
 3312              	.LC53:
 3313 0126 6300     		.string	"c"
 3314              	.LC54:
 3315 0128 20202020 		.string	"    ##########"
 3315      23232323 
 3315      23232323 
 3315      232300
 3316              	.LC55:
 3317 0137 3C616374 		.string	"<actionString>"
 3317      696F6E53 
 3317      7472696E 
 3317      673E00
 3318              	.LC56:
 3319 0146 6D756C74 		.string	"multiplesteps"
 3319      69706C65 
 3319      73746570 
 3319      7300
 3320              	.LC57:
 3321 0154 6500     		.string	"e"
 3322              		.section	.rodata.str1.8
 3323 0184 00000000 		.align 8
 3324              	.LC58:
 3325 0188 20202020 		.string	"    a series of CommFPGA actions"
 3325      61207365 
 3325      72696573 
 3325      206F6620 
 3325      436F6D6D 
 3326              		.section	.rodata.str1.1
 3327              	.LC59:
 3328 0156 61637469 		.string	"action"
 3328      6F6E00
 3329              	.LC60:
 3330 015d 6100     		.string	"a"
 3331              		.section	.rodata.str1.8
 3332 01a9 00000000 		.align 8
 3332      000000
 3333              	.LC61:
 3334 01b0 20202020 		.string	"                    start up an interactive CommFPGA session"
 3334      20202020 
 3334      20202020 
 3334      20202020 
 3334      20202020 
 3335              		.section	.rodata.str1.1
 3336              	.LC62:
 3337 015f 7368656C 		.string	"shell"
 3337      6C00
 3338              	.LC63:
 3339 0165 7300     		.string	"s"
 3340              		.section	.rodata.str1.8
 3341 01ed 000000   		.align 8
 3342              	.LC64:
 3343 01f0 20202020 		.string	"                enable benchmarking & checksumming"
 3343      20202020 
 3343      20202020 
 3343      20202020 
 3343      656E6162 
 3344              		.section	.rodata.str1.1
 3345              	.LC65:
 3346 0167 62656E63 		.string	"benchmark"
 3346      686D6172 
 3346      6B00
 3347              	.LC66:
 3348 0171 6200     		.string	"b"
 3349              		.section	.rodata.str1.8
 3350 0223 00000000 		.align 8
 3350      00
 3351              	.LC67:
 3352 0228 20202020 		.string	"                    reset the bulk endpoints"
 3352      20202020 
 3352      20202020 
 3352      20202020 
 3352      20202020 
 3353              		.section	.rodata.str1.1
 3354              	.LC68:
 3355 0173 72657365 		.string	"reset"
 3355      7400
 3356              		.section	.rodata.str1.8
 3357 0255 000000   		.align 8
 3358              	.LC69:
 3359 0258 20202077 		.string	"   write data from channel ch to file"
 3359      72697465 
 3359      20646174 
 3359      61206672 
 3359      6F6D2063 
 3360              		.section	.rodata.str1.1
 3361              	.LC70:
 3362 0179 3C63683A 		.string	"<ch:file.bin>"
 3362      66696C65 
 3362      2E62696E 
 3362      3E00
 3363              	.LC71:
 3364 0187 64756D70 		.string	"dumploop"
 3364      6C6F6F70 
 3364      00
 3365              	.LC72:
 3366 0190 6C00     		.string	"l"
 3367              		.section	.rodata.str1.8
 3368 027e 0000     		.align 8
 3369              	.LC73:
 3370 0280 20202020 		.string	"                     print this help and exit"
 3370      20202020 
 3370      20202020 
 3370      20202020 
 3370      20202020 
 3371              		.section	.rodata.str1.1
 3372              	.LC74:
 3373 0192 68656C70 		.string	"help"
 3373      00
 3374              	.LC75:
 3375 0197 6800     		.string	"h"
 3376              		.section	.rodata.str1.8
 3377 02ae 0000     		.align 8
 3378              	.LC76:
 3379 02b0 20202077 		.string	"   write firmware to FX2's EEPROM (!!)"
 3379      72697465 
 3379      20666972 
 3379      6D776172 
 3379      6520746F 
 3380              		.section	.rodata.str1.1
 3381              	.LC77:
 3382 0199 3C737464 		.string	"<std|fw.hex|fw.iic>"
 3382      7C66772E 
 3382      6865787C 
 3382      66772E69 
 3382      69633E00 
 3383              	.LC78:
 3384 01ad 65657072 		.string	"eeprom"
 3384      6F6D00
 3385              		.section	.rodata.str1.8
 3386 02d7 00       		.align 8
 3387              	.LC79:
 3388 02d8 20202020 		.string	"     backup FX2's EEPROM (e.g 128:fw.iic)\n"
 3388      20626163 
 3388      6B757020 
 3388      46583227 
 3388      73204545 
 3389              		.section	.rodata.str1.1
 3390              	.LC80:
 3391 01b4 3C6B6269 		.string	"<kbitSize:fw.iic>"
 3391      7453697A 
 3391      653A6677 
 3391      2E696963 
 3391      3E00
 3392              	.LC81:
 3393 01c6 6261636B 		.string	"backup"
 3393      757000
 3394              	.LC82:
 3395 01cd 666C636C 		.string	"flcli"
 3395      6900
 3396              	.LC83:
 3397 01d3 25733A20 		.string	"%s: insufficient memory\n"
 3397      696E7375 
 3397      66666963 
 3397      69656E74 
 3397      206D656D 
 3398              		.section	.rodata.str1.8
 3399 0303 00000000 		.align 8
 3399      00
 3400              	.LC84:
 3401 0308 46504741 		.string	"FPGALink Command-Line Interface Copyright (C) 2012-2014 Chris McClelland\n\nUsage: %s"
 3401      4C696E6B 
 3401      20436F6D 
 3401      6D616E64 
 3401      2D4C696E 
 3402              		.section	.rodata.str1.1
 3403              	.LC85:
 3404 01ec 0A00     		.string	"\n"
 3405              		.section	.rodata.str1.8
 3406 035c 00000000 		.align 8
 3407              	.LC86:
 3408 0360 0A496E74 		.string	"\nInteract with an FPGALink device.\n\n"
 3408      65726163 
 3408      74207769 
 3408      74682061 
 3408      6E204650 
 3409              		.section	.rodata.str1.1
 3410              	.LC87:
 3411 01ee 2020252D 		.string	"  %-10s %s\n"
 3411      31307320 
 3411      25730A00 
 3412              		.section	.rodata.str1.8
 3413 0385 000000   		.align 8
 3414              	.LC88:
 3415 0388 54727920 		.string	"Try '%s --help' for more information.\n"
 3415      27257320 
 3415      2D2D6865 
 3415      6C702720 
 3415      666F7220 
 3416 03af 00       		.align 8
 3417              	.LC89:
 3418 03b0 41747465 		.string	"Attempting to open connection to FPGALink device %s...\n"
 3418      6D707469 
 3418      6E672074 
 3418      6F206F70 
 3418      656E2063 
 3419              		.section	.rodata.str1.1
 3420              	.LC90:
 3421 01fa 4C6F6164 		.string	"Loading firmware into %s...\n"
 3421      696E6720 
 3421      6669726D 
 3421      77617265 
 3421      20696E74 
 3422              	.LC91:
 3423 0217 41776169 		.string	"Awaiting renumeration"
 3423      74696E67 
 3423      2072656E 
 3423      756D6572 
 3423      6174696F 
 3424              	.LC92:
 3425 022d 2E00     		.string	"."
 3426              		.section	.rodata.str1.8
 3427              		.align 8
 3428              	.LC93:
 3429 03e8 46504741 		.string	"FPGALink device did not renumerate properly as %s\n"
 3429      4C696E6B 
 3429      20646576 
 3429      69636520 
 3429      64696420 
 3430 041b 00000000 		.align 8
 3430      00
 3431              	.LC94:
 3432 0420 41747465 		.string	"Attempting to open connection to FPGLink device %s again...\n"
 3432      6D707469 
 3432      6E672074 
 3432      6F206F70 
 3432      656E2063 
 3433 045d 000000   		.align 8
 3434              	.LC95:
 3435 0460 436F756C 		.string	"Could not open FPGALink device at %s and no initial VID:PID was supplied\n"
 3435      64206E6F 
 3435      74206F70 
 3435      656E2046 
 3435      5047414C 
 3436 04aa 00000000 		.align 8
 3436      0000
 3437              	.LC96:
 3438 04b0 436F6E6E 		.string	"Connected to FPGALink device %s (firmwareID: 0x%04X, firmwareVersion: 0x%08X)\n"
 3438      65637465 
 3438      6420746F 
 3438      20465047 
 3438      414C696E 
 3439 04ff 00       		.align 8
 3440              	.LC97:
 3441 0500 57726974 		.string	"Writing the standard FPGALink firmware to the FX2's EEPROM...\n"
 3441      696E6720 
 3441      74686520 
 3441      7374616E 
 3441      64617264 
 3442 053f 00       		.align 8
 3443              	.LC98:
 3444 0540 57726974 		.string	"Writing custom FPGALink firmware from %s to the FX2's EEPROM...\n"
 3444      696E6720 
 3444      63757374 
 3444      6F6D2046 
 3444      5047414C 
 3445 0581 00000000 		.align 8
 3445      000000
 3446              	.LC99:
 3447 0588 25733A20 		.string	"%s: invalid argument to option --backup=<kbitSize:fw.iic>\n"
 3447      696E7661 
 3447      6C696420 
 3447      61726775 
 3447      6D656E74 
 3448 05c3 00000000 		.align 8
 3448      00
 3449              	.LC100:
 3450 05c8 53617669 		.string	"Saving a backup of %d kbit from the FX2's EEPROM to %s...\n"
 3450      6E672061 
 3450      20626163 
 3450      6B757020 
 3450      6F662025 
 3451              		.section	.rodata.str1.1
 3452              	.LC101:
 3453 022f 436F6E66 		.string	"Configuring ports...\n"
 3453      69677572 
 3453      696E6720 
 3453      706F7274 
 3453      732E2E2E 
 3454              	.LC102:
 3455 0245 25303858 		.string	"%08X"
 3455      00
 3456              		.section	.rodata.str1.8
 3457 0603 00000000 		.align 8
 3457      00
 3458              	.LC103:
 3459 0608 52656164 		.string	"Readback:   28   24   20   16    12    8    4    0\n          %s"
 3459      6261636B 
 3459      3A202020 
 3459      32382020 
 3459      20323420 
 3460              		.section	.rodata.str1.1
 3461              	.LC104:
 3462 024a 20257300 		.string	" %s"
 3463              	.LC105:
 3464 024e 20202573 		.string	"  %s"
 3464      00
 3465              	.LC106:
 3466 0253 2025730A 		.string	" %s\n"
 3466      00
 3467              		.section	.rodata.str1.8
 3468              		.align 8
 3469              	.LC107:
 3470 0648 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain, yielding:\n"
 3470      46504741 
 3470      4C696E6B 
 3470      20646576 
 3470      69636520 
 3471              		.section	.rodata.str1.1
 3472              	.LC108:
 3473 0258 20203078 		.string	"  0x%08X\n"
 3473      25303858 
 3473      0A00
 3474              		.section	.rodata.str1.8
 3475 0685 000000   		.align 8
 3476              	.LC109:
 3477 0688 54686520 		.string	"The FPGALink device at %s scanned its JTAG chain but did not find any attached devices\n"
 3477      46504741 
 3477      4C696E6B 
 3477      20646576 
 3477      69636520 
 3478              		.align 8
 3479              	.LC110:
 3480 06e0 4A544147 		.string	"JTAG chain scan requested but FPGALink device at %s does not support NeroProg\n"
 3480      20636861 
 3480      696E2073 
 3480      63616E20 
 3480      72657175 
 3481              		.section	.rodata.str1.1
 3482              	.LC111:
 3483 0262 50726F67 		.string	"Programming device...\n"
 3483      72616D6D 
 3483      696E6720 
 3483      64657669 
 3483      63652E2E 
 3484              		.section	.rodata.str1.8
 3485 072f 00       		.align 8
 3486              	.LC112:
 3487 0730 50726F67 		.string	"Program operation requested but device at %s does not support NeroProg\n"
 3487      72616D20 
 3487      6F706572 
 3487      6174696F 
 3487      6E207265 
 3488              		.align 8
 3489              	.LC113:
 3490 0778 52656365 		.string	"Receiving coordinates from fpga %s...\n"
 3490      6976696E 
 3490      6720636F 
 3490      6F726469 
 3490      6E617465 
 3491              		.section	.rodata.str1.1
 3492              	.LC114:
 3493 0279 636F6F72 		.string	"coordinate_enc.dat"
 3493      64696E61 
 3493      74655F65 
 3493      6E632E64 
 3493      617400
 3494              		.section	.rodata.str1.8
 3495 079f 00       		.align 8
 3496              	.LC115:
 3497 07a0 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --program?\n"
 3497      46504741 
 3497      4C696E6B 
 3497      20646576 
 3497      69636520 
 3498 07ec 00000000 		.align 8
 3499              	.LC116:
 3500 07f0 41637469 		.string	"Action requested but device at %s does not support CommFPGA\n"
 3500      6F6E2072 
 3500      65717565 
 3500      73746564 
 3500      20627574 
 3501              		.section	.rodata.str1.1
 3502              	.LC117:
 3503 028c 456E6372 		.string	"Encrypted input: "
 3503      79707465 
 3503      6420696E 
 3503      7075743A 
 3503      2000
 3504              	.LC118:
 3505 029e 255800   		.string	"%X"
 3506              	.LC119:
 3507 02a1 436F6F72 		.string	"Coordinates Received: %X,%X\n"
 3507      64696E61 
 3507      74657320 
 3507      52656365 
 3507      69766564 
 3508              		.section	.rodata.str1.8
 3509 082d 000000   		.align 8
 3510              	.LC120:
 3511 0830 53656E64 		.string	"Sending coordinates to fpga %s...\n"
 3511      696E6720 
 3511      636F6F72 
 3511      64696E61 
 3511      74657320 
 3512              		.section	.rodata.str1.1
 3513              	.LC121:
 3514 02be 52656365 		.string	"Receiving ACK1 %s...\n"
 3514      6976696E 
 3514      67204143 
 3514      4B312025 
 3514      732E2E2E 
 3515              	.LC122:
 3516 02d4 41434B2E 		.string	"ACK.dat"
 3516      64617400 
 3517              	.LC123:
 3518 02dc 456E6372 		.string	"Encrypted Ack: "
 3518      79707465 
 3518      64204163 
 3518      6B3A2000 
 3519              	.LC124:
 3520 02ec 53656E64 		.string	"Sending ACK2 %s...\n"
 3520      696E6720 
 3520      41434B32 
 3520      2025732E 
 3520      2E2E0A00 
 3521              	.LC125:
 3522 0300 74726163 		.string	"track_data.csv"
 3522      6B5F6461 
 3522      74612E63 
 3522      737600
 3523              	.LC126:
 3524 030f 4572726F 		.string	"Error! opening file\n"
 3524      7221206F 
 3524      70656E69 
 3524      6E672066 
 3524      696C650A 
 3525              	.LC127:
 3526 0324 53656E64 		.string	"Sending first 4 bytes %s...\n"
 3526      696E6720 
 3526      66697273 
 3526      74203420 
 3526      62797465 
 3527              	.LC128:
 3528 0341 52656164 		.string	"Reading ACK %s...\n"
 3528      696E6720 
 3528      41434B20 
 3528      25732E2E 
 3528      2E0A00
 3529              	.LC129:
 3530 0354 54727969 		.string	"Trying to get data %s...\n"
 3530      6E672074 
 3530      6F206765 
 3530      74206461 
 3530      74612025 
 3531              	.LC130:
 3532 036e 55706461 		.string	"Update.dat"
 3532      74652E64 
 3532      617400
 3533              	.LC131:
 3534 0379 44617461 		.string	"Data received : %X\n"
 3534      20726563 
 3534      65697665 
 3534      64203A20 
 3534      25580A00 
 3535              		.section	.rodata.str1.8
 3536 0853 00000000 		.align 8
 3536      00
 3537              	.LC132:
 3538 0858 45786563 		.string	"Executing CommFPGA actions on FPGALink device %s...\n"
 3538      7574696E 
 3538      6720436F 
 3538      6D6D4650 
 3538      47412061 
 3539 088d 000000   		.align 8
 3540              	.LC133:
 3541 0890 25733A20 		.string	"%s: invalid argument to option -l|--dumploop=<ch:file.bin>\n"
 3541      696E7661 
 3541      6C696420 
 3541      61726775 
 3541      6D656E74 
 3542 08cc 00000000 		.align 8
 3543              	.LC134:
 3544 08d0 436F7079 		.string	"Copying from channel %lu to %s"
 3544      696E6720 
 3544      66726F6D 
 3544      20636861 
 3544      6E6E656C 
 3545              		.section	.rodata.str1.1
 3546              	.LC135:
 3547 038d 0A436175 		.string	"\nCaught SIGINT, quitting...\n"
 3547      67687420 
 3547      53494749 
 3547      4E542C20 
 3547      71756974 
 3548              		.section	.rodata.str1.8
 3549 08ef 00       		.align 8
 3550              	.LC136:
 3551 08f0 0A456E74 		.string	"\nEntering CommFPGA command-line mode:\n"
 3551      6572696E 
 3551      6720436F 
 3551      6D6D4650 
 3551      47412063 
 3552              		.section	.rodata.str1.1
 3553              	.LC137:
 3554 03aa 3E2000   		.string	"> "
 3555              		.section	.rodata.str1.8
 3556 0917 00       		.align 8
 3557              	.LC138:
 3558 0918 54686520 		.string	"The FPGALink device at %s is not ready to talk - did you forget --xsvf?\n"
 3558      46504741 
 3558      4C696E6B 
 3558      20646576 
 3558      69636520 
 3559 0961 00000000 		.align 8
 3559      000000
 3560              	.LC139:
 3561 0968 5368656C 		.string	"Shell requested but device at %s does not support CommFPGA\n"
 3561      6C207265 
 3561      71756573 
 3561      74656420 
 3561      62757420 
 3562              		.section	.rodata.str1.1
 3563              	.LC140:
 3564 03ad 25730A00 		.string	"%s\n"
 3565              	.LC141:
 3566 03b1 53656E64 		.string	"Sending next 4 bytes %s...\n"
 3566      696E6720 
 3566      6E657874 
 3566      20342062 
 3566      79746573 
 3567              	.LC142:
 3568 03cd 53656E64 		.string	"Sending ACK %s...\n"
 3568      696E6720 
 3568      41434B20 
 3568      25732E2E 
 3568      2E0A00
 3569              		.section	.text.unlikely
 3570              	.LCOLDB143:
 3571              		.section	.text.startup,"ax",@progbits
 3572              	.LHOTB143:
 3573              		.p2align 4,,15
 3574              		.globl	main
 3576              	main:
 3577              	.LFB61:
 3578              		.cfi_startproc
 3579 0000 4157     		pushq	%r15
 3580              		.cfi_def_cfa_offset 16
 3581              		.cfi_offset 15, -16
 3582 0002 4156     		pushq	%r14
 3583              		.cfi_def_cfa_offset 24
 3584              		.cfi_offset 14, -24
 3585 0004 B9000000 		movl	$.LC26, %ecx
 3585      00
 3586 0009 4155     		pushq	%r13
 3587              		.cfi_def_cfa_offset 32
 3588              		.cfi_offset 13, -32
 3589 000b 4154     		pushq	%r12
 3590              		.cfi_def_cfa_offset 40
 3591              		.cfi_offset 12, -40
 3592 000d BA000000 		movl	$.LC27, %edx
 3592      00
 3593 0012 55       		pushq	%rbp
 3594              		.cfi_def_cfa_offset 48
 3595              		.cfi_offset 6, -48
 3596 0013 53       		pushq	%rbx
 3597              		.cfi_def_cfa_offset 56
 3598              		.cfi_offset 3, -56
 3599 0014 4881EC58 		subq	$600, %rsp
 3599      020000
 3600              		.cfi_def_cfa_offset 656
 3601 001b 897C2464 		movl	%edi, 100(%rsp)
 3602 001f 48897424 		movq	%rsi, 104(%rsp)
 3602      68
 3603 0024 BF000000 		movl	$.LC29, %edi
 3603      00
 3604 0029 BE000000 		movl	$.LC28, %esi
 3604      00
 3605 002e 64488B04 		movq	%fs:40, %rax
 3605      25280000 
 3605      00
 3606 0037 48898424 		movq	%rax, 584(%rsp)
 3606      48020000 
 3607 003f 31C0     		xorl	%eax, %eax
 3608 0041 E8000000 		call	arg_str0
 3608      00
 3609 0046 B9000000 		movl	$.LC30, %ecx
 3609      00
 3610 004b BA000000 		movl	$.LC31, %edx
 3610      00
 3611 0050 BE000000 		movl	$.LC32, %esi
 3611      00
 3612 0055 BF000000 		movl	$.LC33, %edi
 3612      00
 3613 005a 4989C4   		movq	%rax, %r12
 3614 005d E8000000 		call	arg_str1
 3614      00
 3615 0062 B9000000 		movl	$.LC34, %ecx
 3615      00
 3616 0067 BA000000 		movl	$.LC35, %edx
 3616      00
 3617 006c BE000000 		movl	$.LC36, %esi
 3617      00
 3618 0071 BF000000 		movl	$.LC37, %edi
 3618      00
 3619 0076 4989C5   		movq	%rax, %r13
 3620 0079 E8000000 		call	arg_str0
 3620      00
 3621 007e B9000000 		movl	$.LC38, %ecx
 3621      00
 3622 0083 BA000000 		movl	$.LC39, %edx
 3622      00
 3623 0088 BE000000 		movl	$.LC40, %esi
 3623      00
 3624 008d BF000000 		movl	$.LC41, %edi
 3624      00
 3625 0092 4989C6   		movq	%rax, %r14
 3626 0095 E8000000 		call	arg_str0
 3626      00
 3627 009a B9000000 		movl	$.LC42, %ecx
 3627      00
 3628 009f BA000000 		movl	$.LC43, %edx
 3628      00
 3629 00a4 BE000000 		movl	$.LC44, %esi
 3629      00
 3630 00a9 BF000000 		movl	$.LC45, %edi
 3630      00
 3631 00ae 48894424 		movq	%rax, 16(%rsp)
 3631      10
 3632 00b3 E8000000 		call	arg_str0
 3632      00
 3633 00b8 B9000000 		movl	$.LC46, %ecx
 3633      00
 3634 00bd BA000000 		movl	$.LC47, %edx
 3634      00
 3635 00c2 BE000000 		movl	$.LC48, %esi
 3635      00
 3636 00c7 BF000000 		movl	$.LC49, %edi
 3636      00
 3637 00cc 48894424 		movq	%rax, 24(%rsp)
 3637      18
 3638 00d1 E8000000 		call	arg_str0
 3638      00
 3639 00d6 B9000000 		movl	$.LC50, %ecx
 3639      00
 3640 00db BA000000 		movl	$.LC51, %edx
 3640      00
 3641 00e0 BE000000 		movl	$.LC52, %esi
 3641      00
 3642 00e5 BF000000 		movl	$.LC53, %edi
 3642      00
 3643 00ea 48894424 		movq	%rax, 32(%rsp)
 3643      20
 3644 00ef E8000000 		call	arg_uint0
 3644      00
 3645 00f4 B9000000 		movl	$.LC54, %ecx
 3645      00
 3646 00f9 BA000000 		movl	$.LC55, %edx
 3646      00
 3647 00fe BE000000 		movl	$.LC56, %esi
 3647      00
 3648 0103 BF000000 		movl	$.LC57, %edi
 3648      00
 3649 0108 48894424 		movq	%rax, 40(%rsp)
 3649      28
 3650 010d E8000000 		call	arg_str0
 3650      00
 3651 0112 B9000000 		movl	$.LC58, %ecx
 3651      00
 3652 0117 BA000000 		movl	$.LC55, %edx
 3652      00
 3653 011c BE000000 		movl	$.LC59, %esi
 3653      00
 3654 0121 BF000000 		movl	$.LC60, %edi
 3654      00
 3655 0126 48894424 		movq	%rax, 72(%rsp)
 3655      48
 3656 012b E8000000 		call	arg_str0
 3656      00
 3657 0130 BA000000 		movl	$.LC61, %edx
 3657      00
 3658 0135 BE000000 		movl	$.LC62, %esi
 3658      00
 3659 013a BF000000 		movl	$.LC63, %edi
 3659      00
 3660 013f 48894424 		movq	%rax, 56(%rsp)
 3660      38
 3661 0144 E8000000 		call	arg_lit0
 3661      00
 3662 0149 BA000000 		movl	$.LC64, %edx
 3662      00
 3663 014e BE000000 		movl	$.LC65, %esi
 3663      00
 3664 0153 BF000000 		movl	$.LC66, %edi
 3664      00
 3665 0158 48894424 		movq	%rax, 80(%rsp)
 3665      50
 3666 015d E8000000 		call	arg_lit0
 3666      00
 3667 0162 BA000000 		movl	$.LC67, %edx
 3667      00
 3668 0167 BE000000 		movl	$.LC68, %esi
 3668      00
 3669 016c BF000000 		movl	$.LC20, %edi
 3669      00
 3670 0171 48894424 		movq	%rax, 88(%rsp)
 3670      58
 3671 0176 E8000000 		call	arg_lit0
 3671      00
 3672 017b B9000000 		movl	$.LC69, %ecx
 3672      00
 3673 0180 BA000000 		movl	$.LC70, %edx
 3673      00
 3674 0185 BE000000 		movl	$.LC71, %esi
 3674      00
 3675 018a BF000000 		movl	$.LC72, %edi
 3675      00
 3676 018f 48894424 		movq	%rax, 48(%rsp)
 3676      30
 3677 0194 E8000000 		call	arg_str0
 3677      00
 3678 0199 BA000000 		movl	$.LC73, %edx
 3678      00
 3679 019e BE000000 		movl	$.LC74, %esi
 3679      00
 3680 01a3 BF000000 		movl	$.LC75, %edi
 3680      00
 3681 01a8 48894424 		movq	%rax, 64(%rsp)
 3681      40
 3682 01ad E8000000 		call	arg_lit0
 3682      00
 3683 01b2 31FF     		xorl	%edi, %edi
 3684 01b4 B9000000 		movl	$.LC76, %ecx
 3684      00
 3685 01b9 BA000000 		movl	$.LC77, %edx
 3685      00
 3686 01be BE000000 		movl	$.LC78, %esi
 3686      00
 3687 01c3 4889C3   		movq	%rax, %rbx
 3688 01c6 E8000000 		call	arg_str0
 3688      00
 3689 01cb B9000000 		movl	$.LC79, %ecx
 3689      00
 3690 01d0 BA000000 		movl	$.LC80, %edx
 3690      00
 3691 01d5 BE000000 		movl	$.LC81, %esi
 3691      00
 3692 01da 31FF     		xorl	%edi, %edi
 3693 01dc 4989C7   		movq	%rax, %r15
 3694 01df E8000000 		call	arg_str0
 3694      00
 3695 01e4 BF140000 		movl	$20, %edi
 3695      00
 3696 01e9 48894424 		movq	%rax, 8(%rsp)
 3696      08
 3697 01ee E8000000 		call	arg_end
 3697      00
 3698 01f3 488B4C24 		movq	16(%rsp), %rcx
 3698      10
 3699 01f8 488B5424 		movq	32(%rsp), %rdx
 3699      20
 3700 01fd 4889C5   		movq	%rax, %rbp
 3701 0200 488B7424 		movq	72(%rsp), %rsi
 3701      48
 3702 0205 488B4424 		movq	8(%rsp), %rax
 3702      08
 3703 020a 488DBC24 		leaq	400(%rsp), %rdi
 3703      90010000 
 3704 0212 4C89A424 		movq	%r12, 400(%rsp)
 3704      90010000 
 3705 021a 4C89AC24 		movq	%r13, 408(%rsp)
 3705      98010000 
 3706 0222 48898C24 		movq	%rcx, 424(%rsp)
 3706      A8010000 
 3707 022a 488B4C24 		movq	24(%rsp), %rcx
 3707      18
 3708 022f 48899424 		movq	%rdx, 440(%rsp)
 3708      B8010000 
 3709 0237 488B5424 		movq	56(%rsp), %rdx
 3709      38
 3710 023c 4889B424 		movq	%rsi, 456(%rsp)
 3710      C8010000 
 3711 0244 488B7424 		movq	88(%rsp), %rsi
 3711      58
 3712 0249 48898C24 		movq	%rcx, 432(%rsp)
 3712      B0010000 
 3713 0251 488B4C24 		movq	40(%rsp), %rcx
 3713      28
 3714 0256 48899424 		movq	%rdx, 464(%rsp)
 3714      D0010000 
 3715 025e 488B5424 		movq	48(%rsp), %rdx
 3715      30
 3716 0263 4C89B424 		movq	%r14, 416(%rsp)
 3716      A0010000 
 3717 026b 4889B424 		movq	%rsi, 480(%rsp)
 3717      E0010000 
 3718 0273 48898C24 		movq	%rcx, 448(%rsp)
 3718      C0010000 
 3719 027b 488B4C24 		movq	80(%rsp), %rcx
 3719      50
 3720 0280 48899424 		movq	%rdx, 488(%rsp)
 3720      E8010000 
 3721 0288 48899C24 		movq	%rbx, 504(%rsp)
 3721      F8010000 
 3722 0290 4C89BC24 		movq	%r15, 512(%rsp)
 3722      00020000 
 3723 0298 48898424 		movq	%rax, 520(%rsp)
 3723      08020000 
 3724 02a0 48898C24 		movq	%rcx, 472(%rsp)
 3724      D8010000 
 3725 02a8 488B4C24 		movq	64(%rsp), %rcx
 3725      40
 3726 02ad 4889AC24 		movq	%rbp, 528(%rsp)
 3726      10020000 
 3727 02b5 48C78424 		movq	$0, 144(%rsp)
 3727      90000000 
 3727      00000000 
 3728 02c1 48C78424 		movq	$0, 152(%rsp)
 3728      98000000 
 3728      00000000 
 3729 02cd 48898C24 		movq	%rcx, 496(%rsp)
 3729      F0010000 
 3730 02d5 E8000000 		call	arg_nullcheck
 3730      00
 3731 02da 85C0     		testl	%eax, %eax
 3732 02dc 0F849600 		je	.L651
 3732      0000
 3733 02e2 488B3D00 		movq	stderr(%rip), %rdi
 3733      000000
 3734 02e9 B9000000 		movl	$.LC82, %ecx
 3734      00
 3735 02ee BA000000 		movl	$.LC83, %edx
 3735      00
 3736 02f3 BE010000 		movl	$1, %esi
 3736      00
 3737 02f8 31C0     		xorl	%eax, %eax
 3738 02fa 31ED     		xorl	%ebp, %ebp
 3739 02fc BB010000 		movl	$1, %ebx
 3739      00
 3740 0301 E8000000 		call	__fprintf_chk
 3740      00
 3741              	.L652:
 3742 0306 4889EF   		movq	%rbp, %rdi
 3743 0309 E8000000 		call	free
 3743      00
 3744 030e 488BBC24 		movq	144(%rsp), %rdi
 3744      90000000 
 3745 0316 E8000000 		call	flClose
 3745      00
 3746 031b 488B8C24 		movq	152(%rsp), %rcx
 3746      98000000 
 3747 0323 4885C9   		testq	%rcx, %rcx
 3748 0326 7425     		je	.L806
 3749 0328 488B3D00 		movq	stderr(%rip), %rdi
 3749      000000
 3750 032f BA000000 		movl	$.LC140, %edx
 3750      00
 3751 0334 BE010000 		movl	$1, %esi
 3751      00
 3752 0339 31C0     		xorl	%eax, %eax
 3753 033b E8000000 		call	__fprintf_chk
 3753      00
 3754 0340 488BBC24 		movq	152(%rsp), %rdi
 3754      98000000 
 3755 0348 E8000000 		call	flFreeError
 3755      00
 3756              	.L806:
 3757 034d 89D8     		movl	%ebx, %eax
 3758 034f 488B9C24 		movq	584(%rsp), %rbx
 3758      48020000 
 3759 0357 6448331C 		xorq	%fs:40, %rbx
 3759      25280000 
 3759      00
 3760 0360 0F851E0C 		jne	.L879
 3760      0000
 3761 0366 4881C458 		addq	$600, %rsp
 3761      020000
 3762              		.cfi_remember_state
 3763              		.cfi_def_cfa_offset 56
 3764 036d 5B       		popq	%rbx
 3765              		.cfi_def_cfa_offset 48
 3766 036e 5D       		popq	%rbp
 3767              		.cfi_def_cfa_offset 40
 3768 036f 415C     		popq	%r12
 3769              		.cfi_def_cfa_offset 32
 3770 0371 415D     		popq	%r13
 3771              		.cfi_def_cfa_offset 24
 3772 0373 415E     		popq	%r14
 3773              		.cfi_def_cfa_offset 16
 3774 0375 415F     		popq	%r15
 3775              		.cfi_def_cfa_offset 8
 3776 0377 C3       		ret
 3777              	.L651:
 3778              		.cfi_restore_state
 3779 0378 488B7424 		movq	104(%rsp), %rsi
 3779      68
 3780 037d 8B7C2464 		movl	100(%rsp), %edi
 3781 0381 488D9424 		leaq	400(%rsp), %rdx
 3781      90010000 
 3782 0389 E8000000 		call	arg_parse
 3782      00
 3783 038e 837B6000 		cmpl	$0, 96(%rbx)
 3784 0392 7E62     		jle	.L653
 3785 0394 BA000000 		movl	$.LC82, %edx
 3785      00
 3786 0399 BE000000 		movl	$.LC84, %esi
 3786      00
 3787 039e BF010000 		movl	$1, %edi
 3787      00
 3788 03a3 31C0     		xorl	%eax, %eax
 3789 03a5 31ED     		xorl	%ebp, %ebp
 3790 03a7 31DB     		xorl	%ebx, %ebx
 3791 03a9 E8000000 		call	__printf_chk
 3791      00
 3792 03ae 488B3D00 		movq	stdout(%rip), %rdi
 3792      000000
 3793 03b5 488DB424 		leaq	400(%rsp), %rsi
 3793      90010000 
 3794 03bd BA000000 		movl	$.LC85, %edx
 3794      00
 3795 03c2 E8000000 		call	arg_print_syntax
 3795      00
 3796 03c7 BE000000 		movl	$.LC86, %esi
 3796      00
 3797 03cc BF010000 		movl	$1, %edi
 3797      00
 3798 03d1 31C0     		xorl	%eax, %eax
 3799 03d3 E8000000 		call	__printf_chk
 3799      00
 3800 03d8 488B3D00 		movq	stdout(%rip), %rdi
 3800      000000
 3801 03df 488DB424 		leaq	400(%rsp), %rsi
 3801      90010000 
 3802 03e7 BA000000 		movl	$.LC87, %edx
 3802      00
 3803 03ec E8000000 		call	arg_print_glossary
 3803      00
 3804 03f1 E910FFFF 		jmp	.L652
 3804      FF
 3805              	.L653:
 3806 03f6 85C0     		testl	%eax, %eax
 3807 03f8 7E3D     		jle	.L654
 3808 03fa 488B3D00 		movq	stdout(%rip), %rdi
 3808      000000
 3809 0401 BA000000 		movl	$.LC82, %edx
 3809      00
 3810 0406 4889EE   		movq	%rbp, %rsi
 3811 0409 E8000000 		call	arg_print_errors
 3811      00
 3812 040e B9000000 		movl	$.LC82, %ecx
 3812      00
 3813 0413 BA000000 		movl	$.LC88, %edx
 3813      00
 3814              	.L871:
 3815 0418 488B3D00 		movq	stderr(%rip), %rdi
 3815      000000
 3816 041f BE010000 		movl	$1, %esi
 3816      00
 3817 0424 31C0     		xorl	%eax, %eax
 3818 0426 31ED     		xorl	%ebp, %ebp
 3819 0428 BB0C0000 		movl	$12, %ebx
 3819      00
 3820 042d E8000000 		call	__fprintf_chk
 3820      00
 3821 0432 E9CFFEFF 		jmp	.L652
 3821      FF
 3822              	.L654:
 3823 0437 488DB424 		leaq	152(%rsp), %rsi
 3823      98000000 
 3824 043f 31FF     		xorl	%edi, %edi
 3825 0441 E8000000 		call	flInitialise
 3825      00
 3826 0446 85C0     		testl	%eax, %eax
 3827 0448 740C     		je	.L880
 3828              	.L800:
 3829 044a 31ED     		xorl	%ebp, %ebp
 3830 044c BB010000 		movl	$1, %ebx
 3830      00
 3831 0451 E9B0FEFF 		jmp	.L652
 3831      FF
 3832              	.L880:
 3833 0456 498B4568 		movq	104(%r13), %rax
 3834 045a BE000000 		movl	$.LC89, %esi
 3834      00
 3835 045f BF010000 		movl	$1, %edi
 3835      00
 3836 0464 4C8B28   		movq	(%rax), %r13
 3837 0467 31C0     		xorl	%eax, %eax
 3838 0469 4C89EA   		movq	%r13, %rdx
 3839 046c E8000000 		call	__printf_chk
 3839      00
 3840 0471 488DB424 		leaq	144(%rsp), %rsi
 3840      90000000 
 3841 0479 31D2     		xorl	%edx, %edx
 3842 047b 4C89EF   		movq	%r13, %rdi
 3843 047e E8000000 		call	flOpen
 3843      00
 3844 0483 85C0     		testl	%eax, %eax
 3845 0485 0F841401 		je	.L656
 3845      0000
 3846 048b 41837C24 		cmpl	$0, 96(%r12)
 3846      6000
 3847 0491 0F84C700 		je	.L657
 3847      0000
 3848 0497 498B4424 		movq	104(%r12), %rax
 3848      68
 3849 049c BE000000 		movl	$.LC90, %esi
 3849      00
 3850 04a1 BF010000 		movl	$1, %edi
 3850      00
 3851 04a6 488B18   		movq	(%rax), %rbx
 3852 04a9 31C0     		xorl	%eax, %eax
 3853 04ab 4889DA   		movq	%rbx, %rdx
 3854 04ae E8000000 		call	__printf_chk
 3854      00
 3855 04b3 41837E60 		cmpl	$0, 96(%r14)
 3855      00
 3856 04b8 0F84D102 		je	.L658
 3856      0000
 3857 04be 498B4668 		movq	104(%r14), %rax
 3858 04c2 488D9424 		leaq	152(%rsp), %rdx
 3858      98000000 
 3859 04ca 4889DF   		movq	%rbx, %rdi
 3860 04cd 488B30   		movq	(%rax), %rsi
 3861 04d0 E8000000 		call	flLoadCustomFirmware
 3861      00
 3862              	.L659:
 3863 04d5 85C0     		testl	%eax, %eax
 3864 04d7 0F856DFF 		jne	.L800
 3864      FFFF
 3865 04dd BE000000 		movl	$.LC91, %esi
 3865      00
 3866 04e2 BF010000 		movl	$1, %edi
 3866      00
 3867 04e7 BB3C0000 		movl	$60, %ebx
 3867      00
 3868 04ec E8000000 		call	__printf_chk
 3868      00
 3869 04f1 BFE80300 		movl	$1000, %edi
 3869      00
 3870 04f6 E8000000 		call	flSleep
 3870      00
 3871 04fb EB23     		jmp	.L661
 3872              	.L881:
 3873 04fd BFFA0000 		movl	$250, %edi
 3873      00
 3874 0502 83EB01   		subl	$1, %ebx
 3875 0505 E8000000 		call	flSleep
 3875      00
 3876 050a 80BC24A8 		cmpb	$0, 168(%rsp)
 3876      00000000 
 3877 0512 0F854C04 		jne	.L819
 3877      0000
 3878 0518 85DB     		testl	%ebx, %ebx
 3879 051a 0F844404 		je	.L819
 3879      0000
 3880              	.L661:
 3881 0520 BE000000 		movl	$.LC92, %esi
 3881      00
 3882 0525 BF010000 		movl	$1, %edi
 3882      00
 3883 052a 31C0     		xorl	%eax, %eax
 3884 052c E8000000 		call	__printf_chk
 3884      00
 3885 0531 488B3D00 		movq	stdout(%rip), %rdi
 3885      000000
 3886 0538 E8000000 		call	fflush
 3886      00
 3887 053d 488D9424 		leaq	152(%rsp), %rdx
 3887      98000000 
 3888 0545 488DB424 		leaq	168(%rsp), %rsi
 3888      A8000000 
 3889 054d 4C89EF   		movq	%r13, %rdi
 3890 0550 E8000000 		call	flIsDeviceAvailable
 3890      00
 3891 0555 85C0     		testl	%eax, %eax
 3892 0557 74A4     		je	.L881
 3893 0559 E9ECFEFF 		jmp	.L800
 3893      FF
 3894              	.L657:
 3895 055e 4C89E9   		movq	%r13, %rcx
 3896 0561 BA000000 		movl	$.LC95, %edx
 3896      00
 3897 0566 E9ADFEFF 		jmp	.L871
 3897      FF
 3898              	.L663:
 3899 056b 4C89EA   		movq	%r13, %rdx
 3900 056e BE000000 		movl	$.LC94, %esi
 3900      00
 3901 0573 BF010000 		movl	$1, %edi
 3901      00
 3902 0578 31C0     		xorl	%eax, %eax
 3903 057a E8000000 		call	__printf_chk
 3903      00
 3904 057f 488D9424 		leaq	152(%rsp), %rdx
 3904      98000000 
 3905 0587 488DB424 		leaq	144(%rsp), %rsi
 3905      90000000 
 3906 058f 4C89EF   		movq	%r13, %rdi
 3907 0592 E8000000 		call	flOpen
 3907      00
 3908 0597 85C0     		testl	%eax, %eax
 3909 0599 0F85ABFE 		jne	.L800
 3909      FFFF
 3910              	.L656:
 3911 059f 488BBC24 		movq	144(%rsp), %rdi
 3911      90000000 
 3912 05a7 E8000000 		call	flGetFirmwareVersion
 3912      00
 3913 05ac 488BBC24 		movq	144(%rsp), %rdi
 3913      90000000 
 3914 05b4 89C3     		movl	%eax, %ebx
 3915 05b6 E8000000 		call	flGetFirmwareID
 3915      00
 3916 05bb 4189D8   		movl	%ebx, %r8d
 3917 05be 0FB7C8   		movzwl	%ax, %ecx
 3918 05c1 4C89EA   		movq	%r13, %rdx
 3919 05c4 31C0     		xorl	%eax, %eax
 3920 05c6 BE000000 		movl	$.LC96, %esi
 3920      00
 3921 05cb BF010000 		movl	$1, %edi
 3921      00
 3922 05d0 E8000000 		call	__printf_chk
 3922      00
 3923 05d5 41837F60 		cmpl	$0, 96(%r15)
 3923      00
 3924 05da 745F     		je	.L671
 3925 05dc 498B4768 		movq	104(%r15), %rax
 3926 05e0 488B10   		movq	(%rax), %rdx
 3927 05e3 803A73   		cmpb	$115, (%rdx)
 3928 05e6 0F85BB01 		jne	.L668
 3928      0000
 3929 05ec 807A0174 		cmpb	$116, 1(%rdx)
 3930 05f0 0F85B101 		jne	.L668
 3930      0000
 3931 05f6 807A0264 		cmpb	$100, 2(%rdx)
 3932 05fa 0F85A701 		jne	.L668
 3932      0000
 3933 0600 807A0300 		cmpb	$0, 3(%rdx)
 3934 0604 0F859D01 		jne	.L668
 3934      0000
 3935 060a BE000000 		movl	$.LC97, %esi
 3935      00
 3936 060f BF010000 		movl	$1, %edi
 3936      00
 3937 0614 31C0     		xorl	%eax, %eax
 3938 0616 E8000000 		call	__printf_chk
 3938      00
 3939 061b 488BBC24 		movq	144(%rsp), %rdi
 3939      90000000 
 3940 0623 488D9424 		leaq	152(%rsp), %rdx
 3940      98000000 
 3941 062b 4C89EE   		movq	%r13, %rsi
 3942 062e E8000000 		call	flFlashStandardFirmware
 3942      00
 3943              	.L669:
 3944 0633 85C0     		testl	%eax, %eax
 3945 0635 0F850FFE 		jne	.L800
 3945      FFFF
 3946              	.L671:
 3947 063b 488B4424 		movq	8(%rsp), %rax
 3947      08
 3948 0640 83786000 		cmpl	$0, 96(%rax)
 3949 0644 0F858F01 		jne	.L882
 3949      0000
 3950              	.L667:
 3951 064a 488B4424 		movq	48(%rsp), %rax
 3951      30
 3952 064f 83786000 		cmpl	$0, 96(%rax)
 3953 0653 0F854A03 		jne	.L674
 3953      0000
 3954              	.L677:
 3955 0659 488B4424 		movq	40(%rsp), %rax
 3955      28
 3956 065e BB010000 		movl	$1, %ebx
 3956      00
 3957 0663 83786000 		cmpl	$0, 96(%rax)
 3958 0667 740C     		je	.L676
 3959 0669 488B4424 		movq	40(%rsp), %rax
 3959      28
 3960 066e 488B4068 		movq	104(%rax), %rax
 3961 0672 0FB618   		movzbl	(%rax), %ebx
 3962              	.L676:
 3963 0675 488BBC24 		movq	144(%rsp), %rdi
 3963      90000000 
 3964 067d 440FB6F3 		movzbl	%bl, %r14d
 3965 0681 E8000000 		call	flIsNeroCapable
 3965      00
 3966 0686 488BBC24 		movq	144(%rsp), %rdi
 3966      90000000 
 3967 068e 4489F6   		movl	%r14d, %esi
 3968 0691 89C5     		movl	%eax, %ebp
 3969 0693 E8000000 		call	flIsCommCapable
 3969      00
 3970 0698 88442408 		movb	%al, 8(%rsp)
 3971 069c 488B4424 		movq	16(%rsp), %rax
 3971      10
 3972 06a1 83786000 		cmpl	$0, 96(%rax)
 3973 06a5 0F851A03 		jne	.L883
 3973      0000
 3974              	.L678:
 3975 06ab 488B4424 		movq	24(%rsp), %rax
 3975      18
 3976 06b0 83786000 		cmpl	$0, 96(%rax)
 3977 06b4 0F847701 		je	.L680
 3977      0000
 3978 06ba 4084ED   		testb	%bpl, %bpl
 3979 06bd 0F84B408 		je	.L681
 3979      0000
 3980 06c3 488BBC24 		movq	144(%rsp), %rdi
 3980      90000000 
 3981 06cb 488D9424 		leaq	152(%rsp), %rdx
 3981      98000000 
 3982 06d3 31F6     		xorl	%esi, %esi
 3983 06d5 E8000000 		call	flSelectConduit
 3983      00
 3984 06da 85C0     		testl	%eax, %eax
 3985 06dc 0F8568FD 		jne	.L800
 3985      FFFF
 3986 06e2 488B4424 		movq	24(%rsp), %rax
 3986      18
 3987 06e7 488BBC24 		movq	144(%rsp), %rdi
 3987      90000000 
 3988 06ef 4C8D8C24 		leaq	152(%rsp), %r9
 3988      98000000 
 3989 06f7 488D8C24 		leaq	272(%rsp), %rcx
 3989      10010000 
 3990 06ff 488D9424 		leaq	128(%rsp), %rdx
 3990      80000000 
 3991 0707 41B81000 		movl	$16, %r8d
 3991      0000
 3992 070d 488B4068 		movq	104(%rax), %rax
 3993 0711 488B30   		movq	(%rax), %rsi
 3994 0714 E8000000 		call	jtagScanChain
 3994      00
 3995 0719 85C0     		testl	%eax, %eax
 3996 071b 0F8529FD 		jne	.L800
 3996      FFFF
 3997 0721 83BC2480 		cmpl	$0, 128(%rsp)
 3997      00000000 
 3998 0729 4C89EA   		movq	%r13, %rdx
 3999 072c 0F841810 		je	.L682
 3999      0000
 4000 0732 BE000000 		movl	$.LC107, %esi
 4000      00
 4001 0737 BF010000 		movl	$1, %edi
 4001      00
 4002 073c 31DB     		xorl	%ebx, %ebx
 4003 073e E8000000 		call	__printf_chk
 4003      00
 4004 0743 EB1C     		jmp	.L683
 4005              	.L684:
 4006 0745 8B949C10 		movl	272(%rsp,%rbx,4), %edx
 4006      010000
 4007 074c BE000000 		movl	$.LC108, %esi
 4007      00
 4008 0751 BF010000 		movl	$1, %edi
 4008      00
 4009 0756 31C0     		xorl	%eax, %eax
 4010 0758 4883C301 		addq	$1, %rbx
 4011 075c E8000000 		call	__printf_chk
 4011      00
 4012              	.L683:
 4013 0761 399C2480 		cmpl	%ebx, 128(%rsp)
 4013      000000
 4014 0768 77DB     		ja	.L684
 4015              	.L685:
 4016 076a 488B4424 		movq	32(%rsp), %rax
 4016      20
 4017 076f 83786000 		cmpl	$0, 96(%rax)
 4018 0773 0F84C700 		je	.L686
 4018      0000
 4019 0779 BE000000 		movl	$.LC111, %esi
 4019      00
 4020 077e BF010000 		movl	$1, %edi
 4020      00
 4021 0783 31C0     		xorl	%eax, %eax
 4022 0785 E8000000 		call	__printf_chk
 4022      00
 4023 078a E9620800 		jmp	.L812
 4023      00
 4024              	.L658:
 4025 078f 488D9424 		leaq	152(%rsp), %rdx
 4025      98000000 
 4026 0797 4C89EE   		movq	%r13, %rsi
 4027 079a 4889DF   		movq	%rbx, %rdi
 4028 079d E8000000 		call	flLoadStandardFirmware
 4028      00
 4029 07a2 E92EFDFF 		jmp	.L659
 4029      FF
 4030              	.L668:
 4031 07a7 BE000000 		movl	$.LC98, %esi
 4031      00
 4032 07ac BF010000 		movl	$1, %edi
 4032      00
 4033 07b1 31C0     		xorl	%eax, %eax
 4034 07b3 E8000000 		call	__printf_chk
 4034      00
 4035 07b8 498B4768 		movq	104(%r15), %rax
 4036 07bc 488BBC24 		movq	144(%rsp), %rdi
 4036      90000000 
 4037 07c4 488D9424 		leaq	152(%rsp), %rdx
 4037      98000000 
 4038 07cc 488B30   		movq	(%rax), %rsi
 4039 07cf E8000000 		call	flFlashCustomFirmware
 4039      00
 4040 07d4 E95AFEFF 		jmp	.L669
 4040      FF
 4041              	.L882:
 4042 07d9 488B4424 		movq	8(%rsp), %rax
 4042      08
 4043 07de 488DB424 		leaq	168(%rsp), %rsi
 4043      A8000000 
 4044 07e6 31D2     		xorl	%edx, %edx
 4045 07e8 488B4068 		movq	104(%rax), %rax
 4046 07ec 488B38   		movq	(%rax), %rdi
 4047 07ef E8000000 		call	strtoul
 4047      00
 4048 07f4 488B8C24 		movq	168(%rsp), %rcx
 4048      A8000000 
 4049 07fc 4889C3   		movq	%rax, %rbx
 4050 07ff 80393A   		cmpb	$58, (%rcx)
 4051 0802 0F848107 		je	.L672
 4051      0000
 4052 0808 B9000000 		movl	$.LC82, %ecx
 4052      00
 4053 080d BA000000 		movl	$.LC99, %edx
 4053      00
 4054              	.L874:
 4055 0812 488B3D00 		movq	stderr(%rip), %rdi
 4055      000000
 4056 0819 BE010000 		movl	$1, %esi
 4056      00
 4057 081e 31C0     		xorl	%eax, %eax
 4058 0820 BB0C0000 		movl	$12, %ebx
 4058      00
 4059 0825 E8000000 		call	__fprintf_chk
 4059      00
 4060              	.L795:
 4061 082a 31ED     		xorl	%ebp, %ebp
 4062 082c E9D5FAFF 		jmp	.L652
 4062      FF
 4063              	.L680:
 4064 0831 488B4424 		movq	32(%rsp), %rax
 4064      20
 4065 0836 83786000 		cmpl	$0, 96(%rax)
 4066 083a 0F859B07 		jne	.L884
 4066      0000
 4067              	.L686:
 4068 0840 488B4424 		movq	88(%rsp), %rax
 4068      58
 4069 0845 83786000 		cmpl	$0, 96(%rax)
 4070 0849 7407     		je	.L688
 4071 084b C6050000 		movb	$1, enableBenchmarking(%rip)
 4071      000001
 4072              	.L688:
 4073 0852 488B4424 		movq	72(%rsp), %rax
 4073      48
 4074 0857 83786000 		cmpl	$0, 96(%rax)
 4075 085b 0F850B03 		jne	.L885
 4075      0000
 4076 0861 488B4424 		movq	56(%rsp), %rax
 4076      38
 4077 0866 83786000 		cmpl	$0, 96(%rax)
 4078 086a 0F851908 		jne	.L886
 4078      0000
 4079              	.L787:
 4080 0870 488B4424 		movq	64(%rsp), %rax
 4080      40
 4081 0875 83786000 		cmpl	$0, 96(%rax)
 4082 0879 0F85CE07 		jne	.L887
 4082      0000
 4083              	.L793:
 4084 087f 488B4424 		movq	80(%rsp), %rax
 4084      50
 4085 0884 31ED     		xorl	%ebp, %ebp
 4086 0886 83786000 		cmpl	$0, 96(%rax)
 4087 088a 7507     		jne	.L888
 4088              	.L873:
 4089 088c 31DB     		xorl	%ebx, %ebx
 4090 088e E973FAFF 		jmp	.L652
 4090      FF
 4091              	.L888:
 4092 0893 31C0     		xorl	%eax, %eax
 4093 0895 BE000000 		movl	$.LC136, %esi
 4093      00
 4094 089a BF010000 		movl	$1, %edi
 4094      00
 4095 089f E8000000 		call	__printf_chk
 4095      00
 4096 08a4 807C2408 		cmpb	$0, 8(%rsp)
 4096      00
 4097 08a9 0F84FD0E 		je	.L799
 4097      0000
 4098 08af 488BBC24 		movq	144(%rsp), %rdi
 4098      90000000 
 4099 08b7 488D9424 		leaq	152(%rsp), %rdx
 4099      98000000 
 4100 08bf 4489F6   		movl	%r14d, %esi
 4101 08c2 E8000000 		call	flSelectConduit
 4101      00
 4102 08c7 85C0     		testl	%eax, %eax
 4103 08c9 0F857BFB 		jne	.L800
 4103      FFFF
 4104 08cf 488BBC24 		movq	144(%rsp), %rdi
 4104      90000000 
 4105 08d7 488D9424 		leaq	152(%rsp), %rdx
 4105      98000000 
 4106 08df 488DB424 		leaq	168(%rsp), %rsi
 4106      A8000000 
 4107 08e7 E8000000 		call	flIsFPGARunning
 4107      00
 4108 08ec 85C0     		testl	%eax, %eax
 4109 08ee 0F8556FB 		jne	.L800
 4109      FFFF
 4110 08f4 80BC24A8 		cmpb	$0, 168(%rsp)
 4110      00000000 
 4111 08fc 0F849D0E 		je	.L852
 4111      0000
 4112              	.L842:
 4113 0902 BF000000 		movl	$.LC137, %edi
 4113      00
 4114 0907 E8000000 		call	readline
 4114      00
 4115 090c 4885C0   		testq	%rax, %rax
 4116 090f 4889C5   		movq	%rax, %rbp
 4117 0912 0F8474FF 		je	.L873
 4117      FFFF
 4118 0918 0FB600   		movzbl	(%rax), %eax
 4119 091b 84C0     		testb	%al, %al
 4120 091d 74E3     		je	.L842
 4121 091f 3C71     		cmpb	$113, %al
 4122 0921 0F8465FF 		je	.L873
 4122      FFFF
 4123 0927 4889EF   		movq	%rbp, %rdi
 4124 092a E8000000 		call	add_history
 4124      00
 4125 092f 488BBC24 		movq	144(%rsp), %rdi
 4125      90000000 
 4126 0937 488D9424 		leaq	152(%rsp), %rdx
 4126      98000000 
 4127 093f 4889EE   		movq	%rbp, %rsi
 4128 0942 E8000000 		call	parseLine.constprop.0
 4128      00
 4129 0947 85C0     		testl	%eax, %eax
 4130 0949 0F856A0E 		jne	.L867
 4130      0000
 4131 094f 4889EF   		movq	%rbp, %rdi
 4132 0952 E8000000 		call	free
 4132      00
 4133 0957 807D0071 		cmpb	$113, 0(%rbp)
 4134 095b 75A5     		jne	.L842
 4135 095d 31DB     		xorl	%ebx, %ebx
 4136 095f E9A2F9FF 		jmp	.L652
 4136      FF
 4137              	.L819:
 4138 0964 31C0     		xorl	%eax, %eax
 4139 0966 BE000000 		movl	$.LC85, %esi
 4139      00
 4140 096b BF010000 		movl	$1, %edi
 4140      00
 4141 0970 E8000000 		call	__printf_chk
 4141      00
 4142 0975 80BC24A8 		cmpb	$0, 168(%rsp)
 4142      00000000 
 4143 097d 0F85E8FB 		jne	.L663
 4143      FFFF
 4144 0983 488B3D00 		movq	stderr(%rip), %rdi
 4144      000000
 4145 098a 4C89E9   		movq	%r13, %rcx
 4146 098d BA000000 		movl	$.LC93, %edx
 4146      00
 4147 0992 BE010000 		movl	$1, %esi
 4147      00
 4148 0997 31C0     		xorl	%eax, %eax
 4149 0999 E8000000 		call	__fprintf_chk
 4149      00
 4150 099e E9A7FAFF 		jmp	.L800
 4150      FF
 4151              	.L674:
 4152 09a3 488BBC24 		movq	144(%rsp), %rdi
 4152      90000000 
 4153 09ab 488DB424 		leaq	152(%rsp), %rsi
 4153      98000000 
 4154 09b3 E8000000 		call	flResetToggle
 4154      00
 4155 09b8 85C0     		testl	%eax, %eax
 4156 09ba 0F858AFA 		jne	.L800
 4156      FFFF
 4157 09c0 E994FCFF 		jmp	.L677
 4157      FF
 4158              	.L883:
 4159 09c5 BE000000 		movl	$.LC101, %esi
 4159      00
 4160 09ca BF010000 		movl	$1, %edi
 4160      00
 4161 09cf 31C0     		xorl	%eax, %eax
 4162 09d1 E8000000 		call	__printf_chk
 4162      00
 4163 09d6 488B4424 		movq	16(%rsp), %rax
 4163      10
 4164 09db 488BBC24 		movq	144(%rsp), %rdi
 4164      90000000 
 4165 09e3 488D8C24 		leaq	152(%rsp), %rcx
 4165      98000000 
 4166 09eb 488D9424 		leaq	168(%rsp), %rdx
 4166      A8000000 
 4167 09f3 488B4068 		movq	104(%rax), %rax
 4168 09f7 488B30   		movq	(%rax), %rsi
 4169 09fa E8000000 		call	flMultiBitPortAccess
 4169      00
 4170 09ff 85C0     		testl	%eax, %eax
 4171 0a01 0F8543FA 		jne	.L800
 4171      FFFF
 4172 0a07 448B8424 		movl	168(%rsp), %r8d
 4172      A8000000 
 4173 0a0f 488DBC24 		leaq	544(%rsp), %rdi
 4173      20020000 
 4174 0a17 B9000000 		movl	$.LC102, %ecx
 4174      00
 4175 0a1c BA090000 		movl	$9, %edx
 4175      00
 4176 0a21 BE010000 		movl	$1, %esi
 4176      00
 4177 0a26 31C0     		xorl	%eax, %eax
 4178 0a28 E8000000 		call	__sprintf_chk
 4178      00
 4179 0a2d 0FB68424 		movzbl	544(%rsp), %eax
 4179      20020000 
 4180 0a35 BE000000 		movl	$.LC103, %esi
 4180      00
 4181 0a3a BF010000 		movl	$1, %edi
 4181      00
 4182 0a3f 83E830   		subl	$48, %eax
 4183 0a42 4898     		cltq
 4184 0a44 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4184      00000000 
 4185 0a4c 31C0     		xorl	%eax, %eax
 4186 0a4e E8000000 		call	__printf_chk
 4186      00
 4187 0a53 0FB68424 		movzbl	545(%rsp), %eax
 4187      21020000 
 4188 0a5b BE000000 		movl	$.LC104, %esi
 4188      00
 4189 0a60 BF010000 		movl	$1, %edi
 4189      00
 4190 0a65 83E830   		subl	$48, %eax
 4191 0a68 4898     		cltq
 4192 0a6a 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4192      00000000 
 4193 0a72 31C0     		xorl	%eax, %eax
 4194 0a74 E8000000 		call	__printf_chk
 4194      00
 4195 0a79 0FB68424 		movzbl	546(%rsp), %eax
 4195      22020000 
 4196 0a81 BE000000 		movl	$.LC104, %esi
 4196      00
 4197 0a86 BF010000 		movl	$1, %edi
 4197      00
 4198 0a8b 83E830   		subl	$48, %eax
 4199 0a8e 4898     		cltq
 4200 0a90 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4200      00000000 
 4201 0a98 31C0     		xorl	%eax, %eax
 4202 0a9a E8000000 		call	__printf_chk
 4202      00
 4203 0a9f 0FB68424 		movzbl	547(%rsp), %eax
 4203      23020000 
 4204 0aa7 BE000000 		movl	$.LC104, %esi
 4204      00
 4205 0aac BF010000 		movl	$1, %edi
 4205      00
 4206 0ab1 83E830   		subl	$48, %eax
 4207 0ab4 4898     		cltq
 4208 0ab6 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4208      00000000 
 4209 0abe 31C0     		xorl	%eax, %eax
 4210 0ac0 E8000000 		call	__printf_chk
 4210      00
 4211 0ac5 0FB68424 		movzbl	548(%rsp), %eax
 4211      24020000 
 4212 0acd BE000000 		movl	$.LC105, %esi
 4212      00
 4213 0ad2 BF010000 		movl	$1, %edi
 4213      00
 4214 0ad7 83E830   		subl	$48, %eax
 4215 0ada 4898     		cltq
 4216 0adc 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4216      00000000 
 4217 0ae4 31C0     		xorl	%eax, %eax
 4218 0ae6 E8000000 		call	__printf_chk
 4218      00
 4219 0aeb 0FB68424 		movzbl	549(%rsp), %eax
 4219      25020000 
 4220 0af3 BE000000 		movl	$.LC104, %esi
 4220      00
 4221 0af8 BF010000 		movl	$1, %edi
 4221      00
 4222 0afd 83E830   		subl	$48, %eax
 4223 0b00 4898     		cltq
 4224 0b02 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4224      00000000 
 4225 0b0a 31C0     		xorl	%eax, %eax
 4226 0b0c E8000000 		call	__printf_chk
 4226      00
 4227 0b11 0FB68424 		movzbl	550(%rsp), %eax
 4227      26020000 
 4228 0b19 BE000000 		movl	$.LC104, %esi
 4228      00
 4229 0b1e BF010000 		movl	$1, %edi
 4229      00
 4230 0b23 83E830   		subl	$48, %eax
 4231 0b26 4898     		cltq
 4232 0b28 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4232      00000000 
 4233 0b30 31C0     		xorl	%eax, %eax
 4234 0b32 E8000000 		call	__printf_chk
 4234      00
 4235 0b37 0FB68424 		movzbl	551(%rsp), %eax
 4235      27020000 
 4236 0b3f BE000000 		movl	$.LC106, %esi
 4236      00
 4237 0b44 BF010000 		movl	$1, %edi
 4237      00
 4238 0b49 83E830   		subl	$48, %eax
 4239 0b4c 4898     		cltq
 4240 0b4e 488B14C5 		movq	nibbles(,%rax,8), %rdx
 4240      00000000 
 4241 0b56 31C0     		xorl	%eax, %eax
 4242 0b58 E8000000 		call	__printf_chk
 4242      00
 4243 0b5d BF640000 		movl	$100, %edi
 4243      00
 4244 0b62 E8000000 		call	flSleep
 4244      00
 4245 0b67 E93FFBFF 		jmp	.L678
 4245      FF
 4246              	.L885:
 4247 0b6c 4531FF   		xorl	%r15d, %r15d
 4248 0b6f C7442428 		movl	$0, 40(%rsp)
 4248      00000000 
 4249 0b77 C7442420 		movl	$0, 32(%rsp)
 4249      00000000 
 4250 0b7f C7442438 		movl	$0, 56(%rsp)
 4250      00000000 
 4251 0b87 C7442410 		movl	$0, 16(%rsp)
 4251      00000000 
 4252 0b8f C7442418 		movl	$63, 24(%rsp)
 4252      3F000000 
 4253              	.L690:
 4254 0b97 448B6424 		movl	16(%rsp), %r12d
 4254      10
 4255              	.L692:
 4256 0b9c 44396424 		cmpl	%r12d, 24(%rsp)
 4256      18
 4257 0ba1 0F8C3E07 		jl	.L889
 4257      0000
 4258 0ba7 4585FF   		testl	%r15d, %r15d
 4259 0baa 0F85CB00 		jne	.L693
 4259      0000
 4260 0bb0 31C0     		xorl	%eax, %eax
 4261 0bb2 4C89EA   		movq	%r13, %rdx
 4262 0bb5 BE000000 		movl	$.LC113, %esi
 4262      00
 4263 0bba BF010000 		movl	$1, %edi
 4263      00
 4264 0bbf E8000000 		call	__printf_chk
 4264      00
 4265 0bc4 807C2408 		cmpb	$0, 8(%rsp)
 4265      00
 4266 0bc9 0F840907 		je	.L724
 4266      0000
 4267 0bcf 488BBC24 		movq	144(%rsp), %rdi
 4267      90000000 
 4268 0bd7 488D9424 		leaq	152(%rsp), %rdx
 4268      98000000 
 4269 0bdf 4489F6   		movl	%r14d, %esi
 4270 0be2 E8000000 		call	flSelectConduit
 4270      00
 4271 0be7 85C0     		testl	%eax, %eax
 4272 0be9 0F85E003 		jne	.L797
 4272      0000
 4273 0bef 488BBC24 		movq	144(%rsp), %rdi
 4273      90000000 
 4274 0bf7 488D9424 		leaq	152(%rsp), %rdx
 4274      98000000 
 4275 0bff 488DB424 		leaq	168(%rsp), %rsi
 4275      A8000000 
 4276 0c07 E8000000 		call	flIsFPGARunning
 4276      00
 4277 0c0c 85C0     		testl	%eax, %eax
 4278 0c0e 0F85BB03 		jne	.L797
 4278      0000
 4279 0c14 80BC24A8 		cmpb	$0, 168(%rsp)
 4279      00000000 
 4280 0c1c 0F84700B 		je	.L728
 4280      0000
 4281 0c22 488DBC24 		leaq	552(%rsp), %rdi
 4281      28020000 
 4282 0c2a 4489F8   		movl	%r15d, %eax
 4283 0c2d 438D1424 		leal	(%r12,%r12), %edx
 4284 0c31 488DB424 		leaq	544(%rsp), %rsi
 4284      20020000 
 4285 0c39 B9080000 		movl	$8, %ecx
 4285      00
 4286 0c3e 48C78424 		movq	$32, 544(%rsp)
 4286      20020000 
 4286      20000000 
 4287 0c4a F3AB     		rep stosl
 4288 0c4c BF000000 		movl	$.LC114, %edi
 4288      00
 4289 0c51 E8000000 		call	read_chan
 4289      00
 4290 0c56 488BBC24 		movq	144(%rsp), %rdi
 4290      90000000 
 4291 0c5e 488D9424 		leaq	152(%rsp), %rdx
 4291      98000000 
 4292 0c66 488DB424 		leaq	544(%rsp), %rsi
 4292      20020000 
 4293 0c6e E8000000 		call	parseLine.constprop.0
 4293      00
 4294 0c73 85C0     		testl	%eax, %eax
 4295 0c75 0F850E0B 		jne	.L862
 4295      0000
 4296              	.L693:
 4297 0c7b BE000000 		movl	$.LC20, %esi
 4297      00
 4298 0c80 BF000000 		movl	$.LC114, %edi
 4298      00
 4299 0c85 31DB     		xorl	%ebx, %ebx
 4300 0c87 E8000000 		call	fopen
 4300      00
 4301 0c8c BE000000 		movl	$.LC117, %esi
 4301      00
 4302 0c91 4889C5   		movq	%rax, %rbp
 4303 0c94 BF010000 		movl	$1, %edi
 4303      00
 4304 0c99 31C0     		xorl	%eax, %eax
 4305 0c9b E8000000 		call	__printf_chk
 4305      00
 4306 0ca0 EB29     		jmp	.L701
 4307              	.L704:
 4308 0ca2 0FBED0   		movsbl	%al, %edx
 4309 0ca5 84C0     		testb	%al, %al
 4310 0ca7 BE000000 		movl	$.LC118, %esi
 4310      00
 4311 0cac 8D8A0001 		leal	256(%rdx), %ecx
 4311      0000
 4312 0cb2 BF010000 		movl	$1, %edi
 4312      00
 4313 0cb7 0F48D1   		cmovs	%ecx, %edx
 4314 0cba 48C1E308 		salq	$8, %rbx
 4315 0cbe 4863C2   		movslq	%edx, %rax
 4316 0cc1 4801C3   		addq	%rax, %rbx
 4317 0cc4 31C0     		xorl	%eax, %eax
 4318 0cc6 E8000000 		call	__printf_chk
 4318      00
 4319              	.L701:
 4320 0ccb 4889EF   		movq	%rbp, %rdi
 4321 0cce E8000000 		call	fgetc
 4321      00
 4322 0cd3 3CFF     		cmpb	$-1, %al
 4323 0cd5 75CB     		jne	.L704
 4324 0cd7 BE000000 		movl	$.LC85, %esi
 4324      00
 4325 0cdc BF010000 		movl	$1, %edi
 4325      00
 4326 0ce1 31C0     		xorl	%eax, %eax
 4327 0ce3 E8000000 		call	__printf_chk
 4327      00
 4328 0ce8 4889EF   		movq	%rbp, %rdi
 4329 0ceb E8000000 		call	fclose
 4329      00
 4330 0cf0 488B3500 		movq	Key(%rip), %rsi
 4330      000000
 4331 0cf7 4889DF   		movq	%rbx, %rdi
 4332 0cfa BB100000 		movl	$16, %ebx
 4332      00
 4333 0cff E8000000 		call	decrypter
 4333      00
 4334 0d04 4899     		cqto
 4335 0d06 BE000000 		movl	$.LC119, %esi
 4335      00
 4336 0d0b BF010000 		movl	$1, %edi
 4336      00
 4337 0d10 48F7FB   		idivq	%rbx
 4338 0d13 89D1     		movl	%edx, %ecx
 4339 0d15 89542428 		movl	%edx, 40(%rsp)
 4340 0d19 89442420 		movl	%eax, 32(%rsp)
 4341 0d1d 4889D3   		movq	%rdx, %rbx
 4342 0d20 4889C5   		movq	%rax, %rbp
 4343 0d23 89C2     		movl	%eax, %edx
 4344 0d25 31C0     		xorl	%eax, %eax
 4345 0d27 E8000000 		call	__printf_chk
 4345      00
 4346 0d2c 31C0     		xorl	%eax, %eax
 4347 0d2e 4C89EA   		movq	%r13, %rdx
 4348 0d31 BE000000 		movl	$.LC120, %esi
 4348      00
 4349 0d36 BF010000 		movl	$1, %edi
 4349      00
 4350 0d3b E8000000 		call	__printf_chk
 4350      00
 4351 0d40 807C2408 		cmpb	$0, 8(%rsp)
 4351      00
 4352 0d45 0F848D05 		je	.L724
 4352      0000
 4353 0d4b 488BBC24 		movq	144(%rsp), %rdi
 4353      90000000 
 4354 0d53 488D9424 		leaq	152(%rsp), %rdx
 4354      98000000 
 4355 0d5b 4489F6   		movl	%r14d, %esi
 4356 0d5e E8000000 		call	flSelectConduit
 4356      00
 4357 0d63 85C0     		testl	%eax, %eax
 4358 0d65 0F856402 		jne	.L797
 4358      0000
 4359 0d6b 488BBC24 		movq	144(%rsp), %rdi
 4359      90000000 
 4360 0d73 488D9424 		leaq	152(%rsp), %rdx
 4360      98000000 
 4361 0d7b 488DB424 		leaq	168(%rsp), %rsi
 4361      A8000000 
 4362 0d83 E8000000 		call	flIsFPGARunning
 4362      00
 4363 0d88 85C0     		testl	%eax, %eax
 4364 0d8a 0F853F02 		jne	.L797
 4364      0000
 4365 0d90 80BC24A8 		cmpb	$0, 168(%rsp)
 4365      00000000 
 4366 0d98 0F84F409 		je	.L728
 4366      0000
 4367 0d9e 488DBC24 		leaq	552(%rsp), %rdi
 4367      28020000 
 4368 0da6 B9080000 		movl	$8, %ecx
 4368      00
 4369 0dab 478D3C24 		leal	(%r12,%r12), %r15d
 4370 0daf 488DB424 		leaq	544(%rsp), %rsi
 4370      20020000 
 4371 0db7 48C78424 		movq	$32, 544(%rsp)
 4371      20020000 
 4371      20000000 
 4372 0dc3 F3AB     		rep stosl
 4373 0dc5 89EF     		movl	%ebp, %edi
 4374 0dc7 418D5701 		leal	1(%r15), %edx
 4375 0dcb C1E704   		sall	$4, %edi
 4376 0dce 01DF     		addl	%ebx, %edi
 4377 0dd0 4863FF   		movslq	%edi, %rdi
 4378 0dd3 E8000000 		call	send_chan
 4378      00
 4379 0dd8 488BBC24 		movq	144(%rsp), %rdi
 4379      90000000 
 4380 0de0 488D9424 		leaq	152(%rsp), %rdx
 4380      98000000 
 4381 0de8 488DB424 		leaq	544(%rsp), %rsi
 4381      20020000 
 4382 0df0 E8000000 		call	parseLine.constprop.0
 4382      00
 4383 0df5 85C0     		testl	%eax, %eax
 4384 0df7 0F858C09 		jne	.L862
 4384      0000
 4385 0dfd C7442430 		movl	$2, 48(%rsp)
 4385      02000000 
 4386              	.L711:
 4387 0e05 4C89EA   		movq	%r13, %rdx
 4388 0e08 BE000000 		movl	$.LC121, %esi
 4388      00
 4389 0e0d BF010000 		movl	$1, %edi
 4389      00
 4390 0e12 31C0     		xorl	%eax, %eax
 4391 0e14 E8000000 		call	__printf_chk
 4391      00
 4392 0e19 488BBC24 		movq	144(%rsp), %rdi
 4392      90000000 
 4393 0e21 488D9424 		leaq	152(%rsp), %rdx
 4393      98000000 
 4394 0e29 4489F6   		movl	%r14d, %esi
 4395 0e2c E8000000 		call	flSelectConduit
 4395      00
 4396 0e31 85C0     		testl	%eax, %eax
 4397 0e33 0F859601 		jne	.L797
 4397      0000
 4398 0e39 488BBC24 		movq	144(%rsp), %rdi
 4398      90000000 
 4399 0e41 488D9424 		leaq	152(%rsp), %rdx
 4399      98000000 
 4400 0e49 488DB424 		leaq	168(%rsp), %rsi
 4400      A8000000 
 4401 0e51 E8000000 		call	flIsFPGARunning
 4401      00
 4402 0e56 85C0     		testl	%eax, %eax
 4403 0e58 0F857101 		jne	.L797
 4403      0000
 4404 0e5e 80BC24A8 		cmpb	$0, 168(%rsp)
 4404      00000000 
 4405 0e66 0F842609 		je	.L728
 4405      0000
 4406 0e6c 488DBC24 		leaq	552(%rsp), %rdi
 4406      28020000 
 4407 0e74 488DB424 		leaq	544(%rsp), %rsi
 4407      20020000 
 4408 0e7c B9080000 		movl	$8, %ecx
 4408      00
 4409 0e81 4489FA   		movl	%r15d, %edx
 4410 0e84 48C78424 		movq	$32, 544(%rsp)
 4410      20020000 
 4410      20000000 
 4411 0e90 F3AB     		rep stosl
 4412 0e92 BF000000 		movl	$.LC122, %edi
 4412      00
 4413 0e97 E8000000 		call	read_chan
 4413      00
 4414 0e9c 488BBC24 		movq	144(%rsp), %rdi
 4414      90000000 
 4415 0ea4 488D9424 		leaq	152(%rsp), %rdx
 4415      98000000 
 4416 0eac 488DB424 		leaq	544(%rsp), %rsi
 4416      20020000 
 4417 0eb4 E8000000 		call	parseLine.constprop.0
 4417      00
 4418 0eb9 85C0     		testl	%eax, %eax
 4419 0ebb 0F85C808 		jne	.L862
 4419      0000
 4420 0ec1 BE000000 		movl	$.LC20, %esi
 4420      00
 4421 0ec6 BF000000 		movl	$.LC122, %edi
 4421      00
 4422 0ecb 31DB     		xorl	%ebx, %ebx
 4423 0ecd E8000000 		call	fopen
 4423      00
 4424 0ed2 BE000000 		movl	$.LC123, %esi
 4424      00
 4425 0ed7 4889C5   		movq	%rax, %rbp
 4426 0eda BF010000 		movl	$1, %edi
 4426      00
 4427 0edf 31C0     		xorl	%eax, %eax
 4428 0ee1 E8000000 		call	__printf_chk
 4428      00
 4429 0ee6 EB29     		jmp	.L717
 4430              	.L720:
 4431 0ee8 0FBED0   		movsbl	%al, %edx
 4432 0eeb 84C0     		testb	%al, %al
 4433 0eed BE000000 		movl	$.LC118, %esi
 4433      00
 4434 0ef2 8D8A0001 		leal	256(%rdx), %ecx
 4434      0000
 4435 0ef8 BF010000 		movl	$1, %edi
 4435      00
 4436 0efd 0F48D1   		cmovs	%ecx, %edx
 4437 0f00 48C1E308 		salq	$8, %rbx
 4438 0f04 4863C2   		movslq	%edx, %rax
 4439 0f07 4801C3   		addq	%rax, %rbx
 4440 0f0a 31C0     		xorl	%eax, %eax
 4441 0f0c E8000000 		call	__printf_chk
 4441      00
 4442              	.L717:
 4443 0f11 4889EF   		movq	%rbp, %rdi
 4444 0f14 E8000000 		call	fgetc
 4444      00
 4445 0f19 3CFF     		cmpb	$-1, %al
 4446 0f1b 75CB     		jne	.L720
 4447 0f1d BE000000 		movl	$.LC85, %esi
 4447      00
 4448 0f22 BF010000 		movl	$1, %edi
 4448      00
 4449 0f27 31C0     		xorl	%eax, %eax
 4450 0f29 E8000000 		call	__printf_chk
 4450      00
 4451 0f2e 4889EF   		movq	%rbp, %rdi
 4452 0f31 E8000000 		call	fclose
 4452      00
 4453 0f36 488B3500 		movq	Key(%rip), %rsi
 4453      000000
 4454 0f3d 4889DF   		movq	%rbx, %rdi
 4455 0f40 E8000000 		call	decrypter
 4455      00
 4456 0f45 483B0500 		cmpq	Kack1(%rip), %rax
 4456      000000
 4457 0f4c 0F840E08 		je	.L721
 4457      0000
 4458 0f52 BF050000 		movl	$5, %edi
 4458      00
 4459 0f57 E8000000 		call	sleep
 4459      00
 4460 0f5c 836C2430 		subl	$1, 48(%rsp)
 4460      01
 4461 0f61 0F859EFE 		jne	.L711
 4461      FFFF
 4462 0f67 4183C401 		addl	$1, %r12d
 4463 0f6b 4531FF   		xorl	%r15d, %r15d
 4464 0f6e 4183E43F 		andl	$63, %r12d
 4465 0f72 E925FCFF 		jmp	.L692
 4465      FF
 4466              	.L681:
 4467 0f77 4C89E9   		movq	%r13, %rcx
 4468 0f7a BA000000 		movl	$.LC110, %edx
 4468      00
 4469 0f7f E994F4FF 		jmp	.L871
 4469      FF
 4470              	.L879:
 4471 0f84 E8000000 		call	__stack_chk_fail
 4471      00
 4472              	.L672:
 4473 0f89 4883C101 		addq	$1, %rcx
 4474 0f8d 89C2     		movl	%eax, %edx
 4475 0f8f BE000000 		movl	$.LC100, %esi
 4475      00
 4476 0f94 BF010000 		movl	$1, %edi
 4476      00
 4477 0f99 31C0     		xorl	%eax, %eax
 4478 0f9b 48898C24 		movq	%rcx, 168(%rsp)
 4478      A8000000 
 4479 0fa3 E8000000 		call	__printf_chk
 4479      00
 4480 0fa8 488B9424 		movq	168(%rsp), %rdx
 4480      A8000000 
 4481 0fb0 488BBC24 		movq	144(%rsp), %rdi
 4481      90000000 
 4482 0fb8 488D8C24 		leaq	152(%rsp), %rcx
 4482      98000000 
 4483 0fc0 89DE     		movl	%ebx, %esi
 4484 0fc2 E8000000 		call	flSaveFirmware
 4484      00
 4485 0fc7 85C0     		testl	%eax, %eax
 4486 0fc9 0F847BF6 		je	.L667
 4486      FFFF
 4487              	.L797:
 4488 0fcf BB010000 		movl	$1, %ebx
 4488      00
 4489 0fd4 31ED     		xorl	%ebp, %ebp
 4490 0fd6 E92BF3FF 		jmp	.L652
 4490      FF
 4491              	.L884:
 4492 0fdb 31C0     		xorl	%eax, %eax
 4493 0fdd BE000000 		movl	$.LC111, %esi
 4493      00
 4494 0fe2 BF010000 		movl	$1, %edi
 4494      00
 4495 0fe7 E8000000 		call	__printf_chk
 4495      00
 4496 0fec 4084ED   		testb	%bpl, %bpl
 4497 0fef 744F     		je	.L687
 4498              	.L812:
 4499 0ff1 488BBC24 		movq	144(%rsp), %rdi
 4499      90000000 
 4500 0ff9 488D9424 		leaq	152(%rsp), %rdx
 4500      98000000 
 4501 1001 31F6     		xorl	%esi, %esi
 4502 1003 E8000000 		call	flSelectConduit
 4502      00
 4503 1008 85C0     		testl	%eax, %eax
 4504 100a 0F853AF4 		jne	.L800
 4504      FFFF
 4505 1010 488B4424 		movq	32(%rsp), %rax
 4505      20
 4506 1015 488BBC24 		movq	144(%rsp), %rdi
 4506      90000000 
 4507 101d 488D8C24 		leaq	152(%rsp), %rcx
 4507      98000000 
 4508 1025 31D2     		xorl	%edx, %edx
 4509 1027 488B4068 		movq	104(%rax), %rax
 4510 102b 488B30   		movq	(%rax), %rsi
 4511 102e E8000000 		call	flProgram
 4511      00
 4512 1033 85C0     		testl	%eax, %eax
 4513 1035 0F850FF4 		jne	.L800
 4513      FFFF
 4514 103b E900F8FF 		jmp	.L686
 4514      FF
 4515              	.L687:
 4516 1040 4C89E9   		movq	%r13, %rcx
 4517 1043 BA000000 		movl	$.LC112, %edx
 4517      00
 4518 1048 E9CBF3FF 		jmp	.L871
 4518      FF
 4519              	.L887:
 4520 104d 488B4068 		movq	104(%rax), %rax
 4521 1051 488DB424 		leaq	160(%rsp), %rsi
 4521      A0000000 
 4522 1059 BA0A0000 		movl	$10, %edx
 4522      00
 4523 105e 488B38   		movq	(%rax), %rdi
 4524 1061 E8000000 		call	strtoul
 4524      00
 4525 1066 488B8C24 		movq	160(%rsp), %rcx
 4525      A0000000 
 4526 106e 4889C3   		movq	%rax, %rbx
 4527 1071 80393A   		cmpb	$58, (%rcx)
 4528 1074 0F84C000 		je	.L794
 4528      0000
 4529 107a B9000000 		movl	$.LC82, %ecx
 4529      00
 4530 107f BA000000 		movl	$.LC133, %edx
 4530      00
 4531 1084 E989F7FF 		jmp	.L874
 4531      FF
 4532              	.L886:
 4533 1089 31C0     		xorl	%eax, %eax
 4534 108b 4C89EA   		movq	%r13, %rdx
 4535 108e BE000000 		movl	$.LC132, %esi
 4535      00
 4536 1093 BF010000 		movl	$1, %edi
 4536      00
 4537 1098 E8000000 		call	__printf_chk
 4537      00
 4538 109d 807C2408 		cmpb	$0, 8(%rsp)
 4538      00
 4539 10a2 0F848500 		je	.L788
 4539      0000
 4540 10a8 488BBC24 		movq	144(%rsp), %rdi
 4540      90000000 
 4541 10b0 488D9424 		leaq	152(%rsp), %rdx
 4541      98000000 
 4542 10b8 4489F6   		movl	%r14d, %esi
 4543 10bb E8000000 		call	flSelectConduit
 4543      00
 4544 10c0 85C0     		testl	%eax, %eax
 4545 10c2 0F8507FF 		jne	.L797
 4545      FFFF
 4546 10c8 488BBC24 		movq	144(%rsp), %rdi
 4546      90000000 
 4547 10d0 488D9424 		leaq	152(%rsp), %rdx
 4547      98000000 
 4548 10d8 488DB424 		leaq	168(%rsp), %rsi
 4548      A8000000 
 4549 10e0 E8000000 		call	flIsFPGARunning
 4549      00
 4550 10e5 85C0     		testl	%eax, %eax
 4551 10e7 0F85E2FE 		jne	.L797
 4551      FFFF
 4552 10ed 80BC24A8 		cmpb	$0, 168(%rsp)
 4552      00000000 
 4553 10f5 0F849706 		je	.L728
 4553      0000
 4554 10fb 488B4424 		movq	56(%rsp), %rax
 4554      38
 4555 1100 488BBC24 		movq	144(%rsp), %rdi
 4555      90000000 
 4556 1108 488D9424 		leaq	152(%rsp), %rdx
 4556      98000000 
 4557 1110 488B4068 		movq	104(%rax), %rax
 4558 1114 488B30   		movq	(%rax), %rsi
 4559 1117 E8000000 		call	parseLine.constprop.0
 4559      00
 4560 111c 85C0     		testl	%eax, %eax
 4561 111e 89C3     		movl	%eax, %ebx
 4562 1120 0F844AF7 		je	.L787
 4562      FFFF
 4563 1126 31ED     		xorl	%ebp, %ebp
 4564 1128 E9D9F1FF 		jmp	.L652
 4564      FF
 4565              	.L788:
 4566 112d 4C89E9   		movq	%r13, %rcx
 4567 1130 BA000000 		movl	$.LC116, %edx
 4567      00
 4568 1135 E9DEF2FF 		jmp	.L871
 4568      FF
 4569              	.L794:
 4570 113a 4883C101 		addq	$1, %rcx
 4571 113e 4889C2   		movq	%rax, %rdx
 4572 1141 BE000000 		movl	$.LC134, %esi
 4572      00
 4573 1146 BF010000 		movl	$1, %edi
 4573      00
 4574 114b 31C0     		xorl	%eax, %eax
 4575 114d 48898C24 		movq	%rcx, 160(%rsp)
 4575      A0000000 
 4576 1155 E8000000 		call	__printf_chk
 4576      00
 4577 115a 488BBC24 		movq	160(%rsp), %rdi
 4577      A0000000 
 4578 1162 BE000000 		movl	$.LC2, %esi
 4578      00
 4579 1167 E8000000 		call	fopen
 4579      00
 4580 116c 4885C0   		testq	%rax, %rax
 4581 116f 4889C5   		movq	%rax, %rbp
 4582 1172 0F842403 		je	.L817
 4582      0000
 4583 1178 E8000000 		call	sigRegisterHandler
 4583      00
 4584 117d 488BBC24 		movq	144(%rsp), %rdi
 4584      90000000 
 4585 1185 488D9424 		leaq	152(%rsp), %rdx
 4585      98000000 
 4586 118d 4489F6   		movl	%r14d, %esi
 4587 1190 E8000000 		call	flSelectConduit
 4587      00
 4588 1195 85C0     		testl	%eax, %eax
 4589 1197 0F8532FE 		jne	.L797
 4589      FFFF
 4590 119d 488BBC24 		movq	144(%rsp), %rdi
 4590      90000000 
 4591 11a5 0FB6DB   		movzbl	%bl, %ebx
 4592 11a8 4C8D8424 		leaq	152(%rsp), %r8
 4592      98000000 
 4593 11b0 31C9     		xorl	%ecx, %ecx
 4594 11b2 41B9FFFF 		movl	$4294967295, %r9d
 4594      FFFF
 4595 11b8 BA005800 		movl	$22528, %edx
 4595      00
 4596 11bd 89DE     		movl	%ebx, %esi
 4597 11bf E8000000 		call	flReadChannelAsyncSubmit
 4597      00
 4598 11c4 85C0     		testl	%eax, %eax
 4599 11c6 0F8503FE 		jne	.L797
 4599      FFFF
 4600              	.L798:
 4601 11cc 488BBC24 		movq	144(%rsp), %rdi
 4601      90000000 
 4602 11d4 4C8D8424 		leaq	152(%rsp), %r8
 4602      98000000 
 4603 11dc 31C9     		xorl	%ecx, %ecx
 4604 11de 41B9FFFF 		movl	$4294967295, %r9d
 4604      FFFF
 4605 11e4 BA005800 		movl	$22528, %edx
 4605      00
 4606 11e9 89DE     		movl	%ebx, %esi
 4607 11eb E8000000 		call	flReadChannelAsyncSubmit
 4607      00
 4608 11f0 85C0     		testl	%eax, %eax
 4609 11f2 0F85D7FD 		jne	.L797
 4609      FFFF
 4610 11f8 488D8C24 		leaq	140(%rsp), %rcx
 4610      8C000000 
 4611 1200 488BBC24 		movq	144(%rsp), %rdi
 4611      90000000 
 4612 1208 4C8D8424 		leaq	152(%rsp), %r8
 4612      98000000 
 4613 1210 488DB424 		leaq	168(%rsp), %rsi
 4613      A8000000 
 4614 1218 41B9FFFF 		movl	$4294967295, %r9d
 4614      FFFF
 4615 121e 4889CA   		movq	%rcx, %rdx
 4616 1221 E8000000 		call	flReadChannelAsyncAwait
 4616      00
 4617 1226 85C0     		testl	%eax, %eax
 4618 1228 0F85A1FD 		jne	.L797
 4618      FFFF
 4619 122e 8B94248C 		movl	140(%rsp), %edx
 4619      000000
 4620 1235 488BBC24 		movq	168(%rsp), %rdi
 4620      A8000000 
 4621 123d 4889E9   		movq	%rbp, %rcx
 4622 1240 BE010000 		movl	$1, %esi
 4622      00
 4623 1245 E8000000 		call	fwrite
 4623      00
 4624 124a BE000000 		movl	$.LC92, %esi
 4624      00
 4625 124f BF010000 		movl	$1, %edi
 4625      00
 4626 1254 31C0     		xorl	%eax, %eax
 4627 1256 E8000000 		call	__printf_chk
 4627      00
 4628 125b E8000000 		call	sigIsRaised
 4628      00
 4629 1260 84C0     		testb	%al, %al
 4630 1262 0F8464FF 		je	.L798
 4630      FFFF
 4631 1268 BE000000 		movl	$.LC135, %esi
 4631      00
 4632 126d BF010000 		movl	$1, %edi
 4632      00
 4633 1272 31C0     		xorl	%eax, %eax
 4634 1274 E8000000 		call	__printf_chk
 4634      00
 4635 1279 488D8C24 		leaq	140(%rsp), %rcx
 4635      8C000000 
 4636 1281 488BBC24 		movq	144(%rsp), %rdi
 4636      90000000 
 4637 1289 4C8D8424 		leaq	152(%rsp), %r8
 4637      98000000 
 4638 1291 488DB424 		leaq	168(%rsp), %rsi
 4638      A8000000 
 4639 1299 41B9FFFF 		movl	$4294967295, %r9d
 4639      FFFF
 4640 129f 4889CA   		movq	%rcx, %rdx
 4641 12a2 E8000000 		call	flReadChannelAsyncAwait
 4641      00
 4642 12a7 85C0     		testl	%eax, %eax
 4643 12a9 0F8520FD 		jne	.L797
 4643      FFFF
 4644 12af 8B94248C 		movl	140(%rsp), %edx
 4644      000000
 4645 12b6 488BBC24 		movq	168(%rsp), %rdi
 4645      A8000000 
 4646 12be 4889E9   		movq	%rbp, %rcx
 4647 12c1 BE010000 		movl	$1, %esi
 4647      00
 4648 12c6 E8000000 		call	fwrite
 4648      00
 4649 12cb 4889EF   		movq	%rbp, %rdi
 4650 12ce E8000000 		call	fclose
 4650      00
 4651 12d3 E9A7F5FF 		jmp	.L793
 4651      FF
 4652              	.L724:
 4653 12d8 4C89E9   		movq	%r13, %rcx
 4654 12db BA000000 		movl	$.LC116, %edx
 4654      00
 4655 12e0 E92DF5FF 		jmp	.L874
 4655      FF
 4656              	.L889:
 4657 12e5 31C0     		xorl	%eax, %eax
 4658 12e7 4C89EA   		movq	%r13, %rdx
 4659 12ea BE000000 		movl	$.LC124, %esi
 4659      00
 4660 12ef BF010000 		movl	$1, %edi
 4660      00
 4661 12f4 E8000000 		call	__printf_chk
 4661      00
 4662 12f9 807C2408 		cmpb	$0, 8(%rsp)
 4662      00
 4663 12fe 74D8     		je	.L724
 4664              	.L807:
 4665 1300 488BBC24 		movq	144(%rsp), %rdi
 4665      90000000 
 4666 1308 488D9424 		leaq	152(%rsp), %rdx
 4666      98000000 
 4667 1310 4489F6   		movl	%r14d, %esi
 4668 1313 E8000000 		call	flSelectConduit
 4668      00
 4669 1318 85C0     		testl	%eax, %eax
 4670 131a 0F85AFFC 		jne	.L797
 4670      FFFF
 4671 1320 488BBC24 		movq	144(%rsp), %rdi
 4671      90000000 
 4672 1328 488D9424 		leaq	152(%rsp), %rdx
 4672      98000000 
 4673 1330 488DB424 		leaq	168(%rsp), %rsi
 4673      A8000000 
 4674 1338 E8000000 		call	flIsFPGARunning
 4674      00
 4675 133d 85C0     		testl	%eax, %eax
 4676 133f 0F858AFC 		jne	.L797
 4676      FFFF
 4677 1345 80BC24A8 		cmpb	$0, 168(%rsp)
 4677      00000000 
 4678 134d 0F843F04 		je	.L728
 4678      0000
 4679 1353 488DBC24 		leaq	552(%rsp), %rdi
 4679      28020000 
 4680 135b B9080000 		movl	$8, %ecx
 4680      00
 4681 1360 488DB424 		leaq	544(%rsp), %rsi
 4681      20020000 
 4682 1368 48C78424 		movq	$32, 544(%rsp)
 4682      20020000 
 4682      20000000 
 4683 1374 F3AB     		rep stosl
 4684 1376 8B442410 		movl	16(%rsp), %eax
 4685 137a 488B3D00 		movq	Kack2(%rip), %rdi
 4685      000000
 4686 1381 8D2C00   		leal	(%rax,%rax), %ebp
 4687 1384 8D4501   		leal	1(%rbp), %eax
 4688 1387 89C2     		movl	%eax, %edx
 4689 1389 89442430 		movl	%eax, 48(%rsp)
 4690 138d E8000000 		call	send_chan
 4690      00
 4691 1392 488BBC24 		movq	144(%rsp), %rdi
 4691      90000000 
 4692 139a 488D9424 		leaq	152(%rsp), %rdx
 4692      98000000 
 4693 13a2 488DB424 		leaq	544(%rsp), %rsi
 4693      20020000 
 4694 13aa E8000000 		call	parseLine.constprop.0
 4694      00
 4695 13af 85C0     		testl	%eax, %eax
 4696 13b1 89C3     		movl	%eax, %ebx
 4697 13b3 0F8571F4 		jne	.L795
 4697      FFFF
 4698 13b9 31C0     		xorl	%eax, %eax
 4699              	.L730:
 4700 13bb C78404B0 		movl	$0, 176(%rsp,%rax)
 4700      00000000 
 4700      000000
 4701 13c6 C78404D0 		movl	$0, 208(%rsp,%rax)
 4701      00000000 
 4701      000000
 4702 13d1 C78404F0 		movl	$0, 240(%rsp,%rax)
 4702      00000000 
 4702      000000
 4703 13dc 4883C004 		addq	$4, %rax
 4704 13e0 4883F820 		cmpq	$32, %rax
 4705 13e4 75D5     		jne	.L730
 4706 13e6 BE000000 		movl	$.LC20, %esi
 4706      00
 4707 13eb BF000000 		movl	$.LC125, %edi
 4707      00
 4708 13f0 E8000000 		call	fopen
 4708      00
 4709 13f5 4885C0   		testq	%rax, %rax
 4710 13f8 4889C3   		movq	%rax, %rbx
 4711 13fb 7511     		jne	.L732
 4712 13fd BE000000 		movl	$.LC126, %esi
 4712      00
 4713 1402 BF010000 		movl	$1, %edi
 4713      00
 4714 1407 31C0     		xorl	%eax, %eax
 4715 1409 E8000000 		call	__printf_chk
 4715      00
 4716              	.L732:
 4717 140e 50       		pushq	%rax
 4718              		.cfi_def_cfa_offset 664
 4719 140f BE000000 		movl	$.LC24, %esi
 4719      00
 4720 1414 4889DF   		movq	%rbx, %rdi
 4721 1417 488D8424 		leaq	176(%rsp), %rax
 4721      B0000000 
 4722 141f 50       		pushq	%rax
 4723              		.cfi_def_cfa_offset 672
 4724 1420 31C0     		xorl	%eax, %eax
 4725 1422 4C8D8C24 		leaq	176(%rsp), %r9
 4725      B0000000 
 4726 142a 4C8D8424 		leaq	156(%rsp), %r8
 4726      9C000000 
 4727 1432 488D8C24 		leaq	152(%rsp), %rcx
 4727      98000000 
 4728 143a 488D9424 		leaq	148(%rsp), %rdx
 4728      94000000 
 4729 1442 E8000000 		call	__isoc99_fscanf
 4729      00
 4730 1447 83C001   		addl	$1, %eax
 4731 144a 5A       		popq	%rdx
 4732              		.cfi_def_cfa_offset 664
 4733 144b 59       		popq	%rcx
 4734              		.cfi_def_cfa_offset 656
 4735 144c 745A     		je	.L890
 4736 144e 8B442420 		movl	32(%rsp), %eax
 4737 1452 39842484 		cmpl	%eax, 132(%rsp)
 4737      000000
 4738 1459 75B3     		jne	.L732
 4739 145b 8B442428 		movl	40(%rsp), %eax
 4740 145f 39842488 		cmpl	%eax, 136(%rsp)
 4740      000000
 4741 1466 75A6     		jne	.L732
 4742 1468 48638424 		movslq	140(%rsp), %rax
 4742      8C000000 
 4743 1470 8B9424A8 		movl	168(%rsp), %edx
 4743      000000
 4744 1477 899484F0 		movl	%edx, 240(%rsp,%rax,4)
 4744      000000
 4745 147e 8B9424A0 		movl	160(%rsp), %edx
 4745      000000
 4746 1485 C78484D0 		movl	$1, 208(%rsp,%rax,4)
 4746      00000001 
 4746      000000
 4747 1490 899484B0 		movl	%edx, 176(%rsp,%rax,4)
 4747      000000
 4748 1497 E972FFFF 		jmp	.L732
 4748      FF
 4749              	.L817:
 4750 149c BB0B0000 		movl	$11, %ebx
 4750      00
 4751 14a1 31ED     		xorl	%ebp, %ebp
 4752 14a3 E95EEEFF 		jmp	.L652
 4752      FF
 4753              	.L890:
 4754 14a8 4889DF   		movq	%rbx, %rdi
 4755 14ab E8000000 		call	fclose
 4755      00
 4756 14b0 31C0     		xorl	%eax, %eax
 4757              	.L735:
 4758 14b2 8B9484D0 		movl	208(%rsp,%rax,4), %edx
 4758      000000
 4759 14b9 8D0C42   		leal	(%rdx,%rax,2), %ecx
 4760 14bc 8B9484B0 		movl	176(%rsp,%rax,4), %edx
 4760      000000
 4761 14c3 8D0C4A   		leal	(%rdx,%rcx,2), %ecx
 4762 14c6 8B9484F0 		movl	240(%rsp,%rax,4), %edx
 4762      000000
 4763 14cd 8D14CA   		leal	(%rdx,%rcx,8), %edx
 4764 14d0 4863D2   		movslq	%edx, %rdx
 4765 14d3 488994C4 		movq	%rdx, 336(%rsp,%rax,8)
 4765      50010000 
 4766 14db 4883C001 		addq	$1, %rax
 4767 14df 4883F808 		cmpq	$8, %rax
 4768 14e3 75CD     		jne	.L735
 4769 14e5 488D8424 		leaq	336(%rsp), %rax
 4769      50010000 
 4770 14ed 488D9424 		leaq	368(%rsp), %rdx
 4770      70010000 
 4771 14f5 4531E4   		xorl	%r12d, %r12d
 4772 14f8 31DB     		xorl	%ebx, %ebx
 4773              	.L736:
 4774 14fa 48C1E308 		salq	$8, %rbx
 4775 14fe 49C1E408 		salq	$8, %r12
 4776 1502 480318   		addq	(%rax), %rbx
 4777 1505 4C036020 		addq	32(%rax), %r12
 4778 1509 4883C008 		addq	$8, %rax
 4779 150d 4839C2   		cmpq	%rax, %rdx
 4780 1510 75E8     		jne	.L736
 4781 1512 4C89EA   		movq	%r13, %rdx
 4782 1515 BE000000 		movl	$.LC127, %esi
 4782      00
 4783 151a BF010000 		movl	$1, %edi
 4783      00
 4784 151f 31C0     		xorl	%eax, %eax
 4785 1521 E8000000 		call	__printf_chk
 4785      00
 4786 1526 488BBC24 		movq	144(%rsp), %rdi
 4786      90000000 
 4787 152e 488D9424 		leaq	152(%rsp), %rdx
 4787      98000000 
 4788 1536 4489F6   		movl	%r14d, %esi
 4789 1539 E8000000 		call	flSelectConduit
 4789      00
 4790 153e 85C0     		testl	%eax, %eax
 4791 1540 0F8589FA 		jne	.L797
 4791      FFFF
 4792 1546 488BBC24 		movq	144(%rsp), %rdi
 4792      90000000 
 4793 154e 488D9424 		leaq	152(%rsp), %rdx
 4793      98000000 
 4794 1556 488D7424 		leaq	127(%rsp), %rsi
 4794      7F
 4795 155b E8000000 		call	flIsFPGARunning
 4795      00
 4796 1560 85C0     		testl	%eax, %eax
 4797 1562 0F8567FA 		jne	.L797
 4797      FFFF
 4798 1568 807C247F 		cmpb	$0, 127(%rsp)
 4798      00
 4799 156d 0F841F02 		je	.L728
 4799      0000
 4800 1573 8B542430 		movl	48(%rsp), %edx
 4801 1577 488DBC24 		leaq	552(%rsp), %rdi
 4801      28020000 
 4802 157f 488DB424 		leaq	544(%rsp), %rsi
 4802      20020000 
 4803 1587 B9080000 		movl	$8, %ecx
 4803      00
 4804 158c 48C78424 		movq	$32, 544(%rsp)
 4804      20020000 
 4804      20000000 
 4805 1598 F3AB     		rep stosl
 4806 159a 4889DF   		movq	%rbx, %rdi
 4807 159d E8000000 		call	send_chan
 4807      00
 4808 15a2 488BBC24 		movq	144(%rsp), %rdi
 4808      90000000 
 4809 15aa 488D9424 		leaq	152(%rsp), %rdx
 4809      98000000 
 4810 15b2 488DB424 		leaq	544(%rsp), %rsi
 4810      20020000 
 4811 15ba E8000000 		call	parseLine.constprop.0
 4811      00
 4812 15bf 85C0     		testl	%eax, %eax
 4813 15c1 89C3     		movl	%eax, %ebx
 4814 15c3 0F8561F2 		jne	.L795
 4814      FFFF
 4815 15c9 C7442440 		movl	$256, 64(%rsp)
 4815      00010000 
 4816 15d1 4C896424 		movq	%r12, 72(%rsp)
 4816      48
 4817              	.L742:
 4818 15d6 4C89EA   		movq	%r13, %rdx
 4819 15d9 BE000000 		movl	$.LC128, %esi
 4819      00
 4820 15de BF010000 		movl	$1, %edi
 4820      00
 4821 15e3 31C0     		xorl	%eax, %eax
 4822 15e5 E8000000 		call	__printf_chk
 4822      00
 4823 15ea 488BBC24 		movq	144(%rsp), %rdi
 4823      90000000 
 4824 15f2 488D9424 		leaq	152(%rsp), %rdx
 4824      98000000 
 4825 15fa 4489F6   		movl	%r14d, %esi
 4826 15fd E8000000 		call	flSelectConduit
 4826      00
 4827 1602 85C0     		testl	%eax, %eax
 4828 1604 0F85C5F9 		jne	.L797
 4828      FFFF
 4829 160a 488BBC24 		movq	144(%rsp), %rdi
 4829      90000000 
 4830 1612 488D9424 		leaq	152(%rsp), %rdx
 4830      98000000 
 4831 161a 488D7424 		leaq	127(%rsp), %rsi
 4831      7F
 4832 161f E8000000 		call	flIsFPGARunning
 4832      00
 4833 1624 85C0     		testl	%eax, %eax
 4834 1626 0F85A3F9 		jne	.L797
 4834      FFFF
 4835 162c 807C247F 		cmpb	$0, 127(%rsp)
 4835      00
 4836 1631 0F845B01 		je	.L728
 4836      0000
 4837 1637 488DBC24 		leaq	552(%rsp), %rdi
 4837      28020000 
 4838 163f 488DB424 		leaq	544(%rsp), %rsi
 4838      20020000 
 4839 1647 B9080000 		movl	$8, %ecx
 4839      00
 4840 164c 89EA     		movl	%ebp, %edx
 4841 164e 48C78424 		movq	$32, 544(%rsp)
 4841      20020000 
 4841      20000000 
 4842 165a F3AB     		rep stosl
 4843 165c BF000000 		movl	$.LC122, %edi
 4843      00
 4844 1661 E8000000 		call	read_chan
 4844      00
 4845 1666 488BBC24 		movq	144(%rsp), %rdi
 4845      90000000 
 4846 166e 488D9424 		leaq	152(%rsp), %rdx
 4846      98000000 
 4847 1676 488DB424 		leaq	544(%rsp), %rsi
 4847      20020000 
 4848 167e E8000000 		call	parseLine.constprop.0
 4848      00
 4849 1683 85C0     		testl	%eax, %eax
 4850 1685 0F85FE00 		jne	.L862
 4850      0000
 4851 168b BE000000 		movl	$.LC20, %esi
 4851      00
 4852 1690 BF000000 		movl	$.LC122, %edi
 4852      00
 4853 1695 31DB     		xorl	%ebx, %ebx
 4854 1697 E8000000 		call	fopen
 4854      00
 4855 169c BE000000 		movl	$.LC123, %esi
 4855      00
 4856 16a1 4989C4   		movq	%rax, %r12
 4857 16a4 BF010000 		movl	$1, %edi
 4857      00
 4858 16a9 31C0     		xorl	%eax, %eax
 4859 16ab E8000000 		call	__printf_chk
 4859      00
 4860 16b0 EB29     		jmp	.L748
 4861              	.L751:
 4862 16b2 0FBED0   		movsbl	%al, %edx
 4863 16b5 84C0     		testb	%al, %al
 4864 16b7 BE000000 		movl	$.LC118, %esi
 4864      00
 4865 16bc 8D8A0001 		leal	256(%rdx), %ecx
 4865      0000
 4866 16c2 BF010000 		movl	$1, %edi
 4866      00
 4867 16c7 0F48D1   		cmovs	%ecx, %edx
 4868 16ca 48C1E308 		salq	$8, %rbx
 4869 16ce 4863C2   		movslq	%edx, %rax
 4870 16d1 4801C3   		addq	%rax, %rbx
 4871 16d4 31C0     		xorl	%eax, %eax
 4872 16d6 E8000000 		call	__printf_chk
 4872      00
 4873              	.L748:
 4874 16db 4C89E7   		movq	%r12, %rdi
 4875 16de E8000000 		call	fgetc
 4875      00
 4876 16e3 3CFF     		cmpb	$-1, %al
 4877 16e5 75CB     		jne	.L751
 4878 16e7 BE000000 		movl	$.LC85, %esi
 4878      00
 4879 16ec BF010000 		movl	$1, %edi
 4879      00
 4880 16f1 31C0     		xorl	%eax, %eax
 4881 16f3 E8000000 		call	__printf_chk
 4881      00
 4882 16f8 4C89E7   		movq	%r12, %rdi
 4883 16fb E8000000 		call	fclose
 4883      00
 4884 1700 488B3500 		movq	Key(%rip), %rsi
 4884      000000
 4885 1707 4889DF   		movq	%rbx, %rdi
 4886 170a E8000000 		call	decrypter
 4886      00
 4887 170f 4898     		cltq
 4888 1711 483B0500 		cmpq	Kack1(%rip), %rax
 4888      000000
 4889 1718 0F84A200 		je	.L752
 4889      0000
 4890 171e BF010000 		movl	$1, %edi
 4890      00
 4891 1723 E8000000 		call	sleep
 4891      00
 4892 1728 836C2440 		subl	$1, 64(%rsp)
 4892      01
 4893 172d 0F85A3FE 		jne	.L742
 4893      FFFF
 4894              	.L786:
 4895 1733 837C2438 		cmpl	$1, 56(%rsp)
 4895      01
 4896 1738 8B442418 		movl	24(%rsp), %eax
 4897 173c 0F444424 		cmove	16(%rsp), %eax
 4897      10
 4898 1741 89442418 		movl	%eax, 24(%rsp)
 4899 1745 E94DF4FF 		jmp	.L690
 4899      FF
 4900              	.L682:
 4901 174a BE000000 		movl	$.LC109, %esi
 4901      00
 4902 174f BF010000 		movl	$1, %edi
 4902      00
 4903 1754 31C0     		xorl	%eax, %eax
 4904 1756 E8000000 		call	__printf_chk
 4904      00
 4905 175b E90AF0FF 		jmp	.L685
 4905      FF
 4906              	.L721:
 4907 1760 4C89EA   		movq	%r13, %rdx
 4908 1763 BE000000 		movl	$.LC124, %esi
 4908      00
 4909 1768 BF010000 		movl	$1, %edi
 4909      00
 4910 176d 31C0     		xorl	%eax, %eax
 4911 176f 4531FF   		xorl	%r15d, %r15d
 4912 1772 E8000000 		call	__printf_chk
 4912      00
 4913 1777 44896424 		movl	%r12d, 16(%rsp)
 4913      10
 4914 177c C7442438 		movl	$1, 56(%rsp)
 4914      01000000 
 4915 1784 E977FBFF 		jmp	.L807
 4915      FF
 4916              	.L862:
 4917 1789 89C3     		movl	%eax, %ebx
 4918 178b 31ED     		xorl	%ebp, %ebp
 4919 178d E974EBFF 		jmp	.L652
 4919      FF
 4920              	.L728:
 4921 1792 4C89E9   		movq	%r13, %rcx
 4922 1795 BA000000 		movl	$.LC115, %edx
 4922      00
 4923 179a E973F0FF 		jmp	.L874
 4923      FF
 4924              	.L852:
 4925 179f 4C89E9   		movq	%r13, %rcx
 4926 17a2 BA000000 		movl	$.LC138, %edx
 4926      00
 4927 17a7 E96CECFF 		jmp	.L871
 4927      FF
 4928              	.L799:
 4929 17ac 4C89E9   		movq	%r13, %rcx
 4930 17af BA000000 		movl	$.LC139, %edx
 4930      00
 4931 17b4 E95FECFF 		jmp	.L871
 4931      FF
 4932              	.L867:
 4933 17b9 89C3     		movl	%eax, %ebx
 4934 17bb E946EBFF 		jmp	.L652
 4934      FF
 4935              	.L752:
 4936 17c0 4C89EA   		movq	%r13, %rdx
 4937 17c3 BE000000 		movl	$.LC141, %esi
 4937      00
 4938 17c8 BF010000 		movl	$1, %edi
 4938      00
 4939 17cd 31C0     		xorl	%eax, %eax
 4940 17cf 4C8B6424 		movq	72(%rsp), %r12
 4940      48
 4941 17d4 E8000000 		call	__printf_chk
 4941      00
 4942 17d9 488BBC24 		movq	144(%rsp), %rdi
 4942      90000000 
 4943 17e1 488D9424 		leaq	152(%rsp), %rdx
 4943      98000000 
 4944 17e9 4489F6   		movl	%r14d, %esi
 4945 17ec E8000000 		call	flSelectConduit
 4945      00
 4946 17f1 85C0     		testl	%eax, %eax
 4947 17f3 0F85D6F7 		jne	.L797
 4947      FFFF
 4948 17f9 488BBC24 		movq	144(%rsp), %rdi
 4948      90000000 
 4949 1801 488D9424 		leaq	152(%rsp), %rdx
 4949      98000000 
 4950 1809 488D7424 		leaq	127(%rsp), %rsi
 4950      7F
 4951 180e E8000000 		call	flIsFPGARunning
 4951      00
 4952 1813 85C0     		testl	%eax, %eax
 4953 1815 0F85B4F7 		jne	.L797
 4953      FFFF
 4954 181b 807C247F 		cmpb	$0, 127(%rsp)
 4954      00
 4955 1820 0F846CFF 		je	.L728
 4955      FFFF
 4956 1826 8B542430 		movl	48(%rsp), %edx
 4957 182a 488DBC24 		leaq	552(%rsp), %rdi
 4957      28020000 
 4958 1832 488DB424 		leaq	544(%rsp), %rsi
 4958      20020000 
 4959 183a B9080000 		movl	$8, %ecx
 4959      00
 4960 183f 48C78424 		movq	$32, 544(%rsp)
 4960      20020000 
 4960      20000000 
 4961 184b F3AB     		rep stosl
 4962 184d 4C89E7   		movq	%r12, %rdi
 4963 1850 E8000000 		call	send_chan
 4963      00
 4964 1855 488BBC24 		movq	144(%rsp), %rdi
 4964      90000000 
 4965 185d 488D9424 		leaq	152(%rsp), %rdx
 4965      98000000 
 4966 1865 488DB424 		leaq	544(%rsp), %rsi
 4966      20020000 
 4967 186d E8000000 		call	parseLine.constprop.0
 4967      00
 4968 1872 85C0     		testl	%eax, %eax
 4969 1874 89C3     		movl	%eax, %ebx
 4970 1876 0F85AEEF 		jne	.L795
 4970      FFFF
 4971 187c C7442440 		movl	$256, 64(%rsp)
 4971      00010000 
 4972              	.L758:
 4973 1884 4C89EA   		movq	%r13, %rdx
 4974 1887 BE000000 		movl	$.LC128, %esi
 4974      00
 4975 188c BF010000 		movl	$1, %edi
 4975      00
 4976 1891 31C0     		xorl	%eax, %eax
 4977 1893 E8000000 		call	__printf_chk
 4977      00
 4978 1898 488BBC24 		movq	144(%rsp), %rdi
 4978      90000000 
 4979 18a0 488D9424 		leaq	152(%rsp), %rdx
 4979      98000000 
 4980 18a8 4489F6   		movl	%r14d, %esi
 4981 18ab E8000000 		call	flSelectConduit
 4981      00
 4982 18b0 85C0     		testl	%eax, %eax
 4983 18b2 0F8517F7 		jne	.L797
 4983      FFFF
 4984 18b8 488BBC24 		movq	144(%rsp), %rdi
 4984      90000000 
 4985 18c0 488D9424 		leaq	152(%rsp), %rdx
 4985      98000000 
 4986 18c8 488D7424 		leaq	127(%rsp), %rsi
 4986      7F
 4987 18cd E8000000 		call	flIsFPGARunning
 4987      00
 4988 18d2 85C0     		testl	%eax, %eax
 4989 18d4 0F85F5F6 		jne	.L797
 4989      FFFF
 4990 18da 807C247F 		cmpb	$0, 127(%rsp)
 4990      00
 4991 18df 0F84ADFE 		je	.L728
 4991      FFFF
 4992 18e5 488DBC24 		leaq	552(%rsp), %rdi
 4992      28020000 
 4993 18ed 488DB424 		leaq	544(%rsp), %rsi
 4993      20020000 
 4994 18f5 B9080000 		movl	$8, %ecx
 4994      00
 4995 18fa 89EA     		movl	%ebp, %edx
 4996 18fc 48C78424 		movq	$32, 544(%rsp)
 4996      20020000 
 4996      20000000 
 4997 1908 F3AB     		rep stosl
 4998 190a BF000000 		movl	$.LC122, %edi
 4998      00
 4999 190f E8000000 		call	read_chan
 4999      00
 5000 1914 488BBC24 		movq	144(%rsp), %rdi
 5000      90000000 
 5001 191c 488D9424 		leaq	152(%rsp), %rdx
 5001      98000000 
 5002 1924 488DB424 		leaq	544(%rsp), %rsi
 5002      20020000 
 5003 192c E8000000 		call	parseLine.constprop.0
 5003      00
 5004 1931 85C0     		testl	%eax, %eax
 5005 1933 0F8550FE 		jne	.L862
 5005      FFFF
 5006 1939 BE000000 		movl	$.LC20, %esi
 5006      00
 5007 193e BF000000 		movl	$.LC122, %edi
 5007      00
 5008 1943 31DB     		xorl	%ebx, %ebx
 5009 1945 E8000000 		call	fopen
 5009      00
 5010 194a BE000000 		movl	$.LC123, %esi
 5010      00
 5011 194f 4989C4   		movq	%rax, %r12
 5012 1952 BF010000 		movl	$1, %edi
 5012      00
 5013 1957 31C0     		xorl	%eax, %eax
 5014 1959 E8000000 		call	__printf_chk
 5014      00
 5015 195e EB29     		jmp	.L764
 5016              	.L767:
 5017 1960 0FBED0   		movsbl	%al, %edx
 5018 1963 84C0     		testb	%al, %al
 5019 1965 BE000000 		movl	$.LC118, %esi
 5019      00
 5020 196a 8D8A0001 		leal	256(%rdx), %ecx
 5020      0000
 5021 1970 BF010000 		movl	$1, %edi
 5021      00
 5022 1975 0F48D1   		cmovs	%ecx, %edx
 5023 1978 48C1E308 		salq	$8, %rbx
 5024 197c 4863C2   		movslq	%edx, %rax
 5025 197f 4801C3   		addq	%rax, %rbx
 5026 1982 31C0     		xorl	%eax, %eax
 5027 1984 E8000000 		call	__printf_chk
 5027      00
 5028              	.L764:
 5029 1989 4C89E7   		movq	%r12, %rdi
 5030 198c E8000000 		call	fgetc
 5030      00
 5031 1991 3CFF     		cmpb	$-1, %al
 5032 1993 75CB     		jne	.L767
 5033 1995 BE000000 		movl	$.LC85, %esi
 5033      00
 5034 199a BF010000 		movl	$1, %edi
 5034      00
 5035 199f 31C0     		xorl	%eax, %eax
 5036 19a1 E8000000 		call	__printf_chk
 5036      00
 5037 19a6 4C89E7   		movq	%r12, %rdi
 5038 19a9 E8000000 		call	fclose
 5038      00
 5039 19ae 488B3500 		movq	Key(%rip), %rsi
 5039      000000
 5040 19b5 4889DF   		movq	%rbx, %rdi
 5041 19b8 E8000000 		call	decrypter
 5041      00
 5042 19bd 4898     		cltq
 5043 19bf 483B0500 		cmpq	Kack1(%rip), %rax
 5043      000000
 5044 19c6 741A     		je	.L768
 5045 19c8 BF010000 		movl	$1, %edi
 5045      00
 5046 19cd E8000000 		call	sleep
 5046      00
 5047 19d2 836C2440 		subl	$1, 64(%rsp)
 5047      01
 5048 19d7 0F85A7FE 		jne	.L758
 5048      FFFF
 5049 19dd E951FDFF 		jmp	.L786
 5049      FF
 5050              	.L768:
 5051 19e2 4C89EA   		movq	%r13, %rdx
 5052 19e5 BE000000 		movl	$.LC142, %esi
 5052      00
 5053 19ea BF010000 		movl	$1, %edi
 5053      00
 5054 19ef 31C0     		xorl	%eax, %eax
 5055 19f1 E8000000 		call	__printf_chk
 5055      00
 5056 19f6 488BBC24 		movq	144(%rsp), %rdi
 5056      90000000 
 5057 19fe 488D9424 		leaq	152(%rsp), %rdx
 5057      98000000 
 5058 1a06 4489F6   		movl	%r14d, %esi
 5059 1a09 E8000000 		call	flSelectConduit
 5059      00
 5060 1a0e 85C0     		testl	%eax, %eax
 5061 1a10 0F85B9F5 		jne	.L797
 5061      FFFF
 5062 1a16 488BBC24 		movq	144(%rsp), %rdi
 5062      90000000 
 5063 1a1e 488D9424 		leaq	152(%rsp), %rdx
 5063      98000000 
 5064 1a26 488D7424 		leaq	127(%rsp), %rsi
 5064      7F
 5065 1a2b E8000000 		call	flIsFPGARunning
 5065      00
 5066 1a30 85C0     		testl	%eax, %eax
 5067 1a32 0F8597F5 		jne	.L797
 5067      FFFF
 5068 1a38 807C247F 		cmpb	$0, 127(%rsp)
 5068      00
 5069 1a3d 0F844FFD 		je	.L728
 5069      FFFF
 5070 1a43 488DBC24 		leaq	552(%rsp), %rdi
 5070      28020000 
 5071 1a4b B9080000 		movl	$8, %ecx
 5071      00
 5072 1a50 8B542430 		movl	48(%rsp), %edx
 5073 1a54 488DB424 		leaq	544(%rsp), %rsi
 5073      20020000 
 5074 1a5c 48C78424 		movq	$32, 544(%rsp)
 5074      20020000 
 5074      20000000 
 5075 1a68 F3AB     		rep stosl
 5076 1a6a 488B3D00 		movq	Kack2(%rip), %rdi
 5076      000000
 5077 1a71 E8000000 		call	send_chan
 5077      00
 5078 1a76 488BBC24 		movq	144(%rsp), %rdi
 5078      90000000 
 5079 1a7e 488D9424 		leaq	152(%rsp), %rdx
 5079      98000000 
 5080 1a86 488DB424 		leaq	544(%rsp), %rsi
 5080      20020000 
 5081 1a8e E8000000 		call	parseLine.constprop.0
 5081      00
 5082 1a93 85C0     		testl	%eax, %eax
 5083 1a95 89C3     		movl	%eax, %ebx
 5084 1a97 0F858DED 		jne	.L795
 5084      FFFF
 5085 1a9d 4C89EA   		movq	%r13, %rdx
 5086 1aa0 BE000000 		movl	$.LC129, %esi
 5086      00
 5087 1aa5 BF010000 		movl	$1, %edi
 5087      00
 5088 1aaa 31C0     		xorl	%eax, %eax
 5089 1aac E8000000 		call	__printf_chk
 5089      00
 5090 1ab1 488BBC24 		movq	144(%rsp), %rdi
 5090      90000000 
 5091 1ab9 488D9424 		leaq	152(%rsp), %rdx
 5091      98000000 
 5092 1ac1 4489F6   		movl	%r14d, %esi
 5093 1ac4 E8000000 		call	flSelectConduit
 5093      00
 5094 1ac9 85C0     		testl	%eax, %eax
 5095 1acb 0F85FEF4 		jne	.L797
 5095      FFFF
 5096 1ad1 488BBC24 		movq	144(%rsp), %rdi
 5096      90000000 
 5097 1ad9 488D9424 		leaq	152(%rsp), %rdx
 5097      98000000 
 5098 1ae1 488D7424 		leaq	127(%rsp), %rsi
 5098      7F
 5099 1ae6 E8000000 		call	flIsFPGARunning
 5099      00
 5100 1aeb 85C0     		testl	%eax, %eax
 5101 1aed 0F85DCF4 		jne	.L797
 5101      FFFF
 5102 1af3 807C247F 		cmpb	$0, 127(%rsp)
 5102      00
 5103 1af8 0F8494FC 		je	.L728
 5103      FFFF
 5104 1afe 488DBC24 		leaq	552(%rsp), %rdi
 5104      28020000 
 5105 1b06 89D8     		movl	%ebx, %eax
 5106 1b08 488DB424 		leaq	544(%rsp), %rsi
 5106      20020000 
 5107 1b10 B9080000 		movl	$8, %ecx
 5107      00
 5108 1b15 89EA     		movl	%ebp, %edx
 5109 1b17 48C78424 		movq	$32, 544(%rsp)
 5109      20020000 
 5109      20000000 
 5110 1b23 F3AB     		rep stosl
 5111 1b25 BF000000 		movl	$.LC130, %edi
 5111      00
 5112 1b2a E8000000 		call	read_chan
 5112      00
 5113 1b2f 488BBC24 		movq	144(%rsp), %rdi
 5113      90000000 
 5114 1b37 488D9424 		leaq	152(%rsp), %rdx
 5114      98000000 
 5115 1b3f 488DB424 		leaq	544(%rsp), %rsi
 5115      20020000 
 5116 1b47 E8000000 		call	parseLine.constprop.0
 5116      00
 5117 1b4c 85C0     		testl	%eax, %eax
 5118 1b4e 89C3     		movl	%eax, %ebx
 5119 1b50 0F85D4EC 		jne	.L795
 5119      FFFF
 5120 1b56 BE000000 		movl	$.LC20, %esi
 5120      00
 5121 1b5b BF000000 		movl	$.LC130, %edi
 5121      00
 5122 1b60 31DB     		xorl	%ebx, %ebx
 5123 1b62 E8000000 		call	fopen
 5123      00
 5124 1b67 4889C5   		movq	%rax, %rbp
 5125              	.L778:
 5126 1b6a 4889EF   		movq	%rbp, %rdi
 5127 1b6d E8000000 		call	fgetc
 5127      00
 5128 1b72 3CFF     		cmpb	$-1, %al
 5129 1b74 741A     		je	.L891
 5130 1b76 0FBED0   		movsbl	%al, %edx
 5131 1b79 84C0     		testb	%al, %al
 5132 1b7b 8D8A0001 		leal	256(%rdx), %ecx
 5132      0000
 5133 1b81 0F48D1   		cmovs	%ecx, %edx
 5134 1b84 48C1E308 		salq	$8, %rbx
 5135 1b88 4863D2   		movslq	%edx, %rdx
 5136 1b8b 4801D3   		addq	%rdx, %rbx
 5137 1b8e EBDA     		jmp	.L778
 5138              	.L891:
 5139 1b90 4889EF   		movq	%rbp, %rdi
 5140 1b93 E8000000 		call	fclose
 5140      00
 5141 1b98 488B3500 		movq	Key(%rip), %rsi
 5141      000000
 5142 1b9f 4889DF   		movq	%rbx, %rdi
 5143 1ba2 BB000100 		movl	$256, %ebx
 5143      00
 5144 1ba7 E8000000 		call	decrypter
 5144      00
 5145 1bac 4899     		cqto
 5146 1bae 4889C1   		movq	%rax, %rcx
 5147 1bb1 48F7FB   		idivq	%rbx
 5148 1bb4 4883F801 		cmpq	$1, %rax
 5149 1bb8 4889D3   		movq	%rdx, %rbx
 5150 1bbb 7449     		je	.L892
 5151 1bbd 4531FF   		xorl	%r15d, %r15d
 5152 1bc0 4885C0   		testq	%rax, %rax
 5153 1bc3 0F856AFB 		jne	.L786
 5153      FFFF
 5154 1bc9 BE000000 		movl	$.LC20, %esi
 5154      00
 5155 1bce BF000000 		movl	$.LC130, %edi
 5155      00
 5156 1bd3 E8000000 		call	fopen
 5156      00
 5157 1bd8 BE000000 		movl	$.LC21, %esi
 5157      00
 5158 1bdd BF000000 		movl	$.LC114, %edi
 5158      00
 5159 1be2 4889C3   		movq	%rax, %rbx
 5160 1be5 E8000000 		call	fopen
 5160      00
 5161 1bea 4889C5   		movq	%rax, %rbp
 5162              	.L784:
 5163 1bed 4889DF   		movq	%rbx, %rdi
 5164 1bf0 E8000000 		call	fgetc
 5164      00
 5165 1bf5 3CFF     		cmpb	$-1, %al
 5166 1bf7 743E     		je	.L893
 5167 1bf9 0FBEF8   		movsbl	%al, %edi
 5168 1bfc 4889EE   		movq	%rbp, %rsi
 5169 1bff E8000000 		call	fputc
 5169      00
 5170 1c04 EBE7     		jmp	.L784
 5171              	.L892:
 5172 1c06 0FB6D1   		movzbl	%cl, %edx
 5173 1c09 BE000000 		movl	$.LC131, %esi
 5173      00
 5174 1c0e BF010000 		movl	$1, %edi
 5174      00
 5175 1c13 31C0     		xorl	%eax, %eax
 5176 1c15 4531FF   		xorl	%r15d, %r15d
 5177 1c18 E8000000 		call	__printf_chk
 5177      00
 5178 1c1d 8B742428 		movl	40(%rsp), %esi
 5179 1c21 8B7C2420 		movl	32(%rsp), %edi
 5180 1c25 4889D9   		movq	%rbx, %rcx
 5181 1c28 BA000000 		movl	$.LC125, %edx
 5181      00
 5182 1c2d E8000000 		call	editfile
 5182      00
 5183 1c32 E9FCFAFF 		jmp	.L786
 5183      FF
 5184              	.L893:
 5185 1c37 4889EF   		movq	%rbp, %rdi
 5186 1c3a 41BF0100 		movl	$1, %r15d
 5186      0000
 5187 1c40 E8000000 		call	fclose
 5187      00
 5188 1c45 4889DF   		movq	%rbx, %rdi
 5189 1c48 E8000000 		call	fclose
 5189      00
 5190 1c4d E9E1FAFF 		jmp	.L786
 5190      FF
 5191              		.cfi_endproc
 5192              	.LFE61:
 5194              		.section	.text.unlikely
 5195              	.LCOLDE143:
 5196              		.section	.text.startup
 5197              	.LHOTE143:
 5198              		.section	.rodata.str1.1
 5199              	.LC144:
 5200 03e0 30303030 		.string	"0000"
 5200      00
 5201              	.LC145:
 5202 03e5 30303031 		.string	"0001"
 5202      00
 5203              	.LC146:
 5204 03ea 30303130 		.string	"0010"
 5204      00
 5205              	.LC147:
 5206 03ef 30303131 		.string	"0011"
 5206      00
 5207              	.LC148:
 5208 03f4 30313030 		.string	"0100"
 5208      00
 5209              	.LC149:
 5210 03f9 30313031 		.string	"0101"
 5210      00
 5211              	.LC150:
 5212 03fe 30313130 		.string	"0110"
 5212      00
 5213              	.LC151:
 5214 0403 30313131 		.string	"0111"
 5214      00
 5215              	.LC152:
 5216 0408 31303030 		.string	"1000"
 5216      00
 5217              	.LC153:
 5218 040d 31303031 		.string	"1001"
 5218      00
 5219              	.LC154:
 5220 0412 58585858 		.string	"XXXX"
 5220      00
 5221              	.LC155:
 5222 0417 31303130 		.string	"1010"
 5222      00
 5223              	.LC156:
 5224 041c 31303131 		.string	"1011"
 5224      00
 5225              	.LC157:
 5226 0421 31313030 		.string	"1100"
 5226      00
 5227              	.LC158:
 5228 0426 31313031 		.string	"1101"
 5228      00
 5229              	.LC159:
 5230 042b 31313130 		.string	"1110"
 5230      00
 5231              	.LC160:
 5232 0430 31313131 		.string	"1111"
 5232      00
 5233              		.section	.rodata
 5234              		.align 32
 5237              	nibbles:
 5238 0000 00000000 		.quad	.LC144
 5238      00000000 
 5239 0008 00000000 		.quad	.LC145
 5239      00000000 
 5240 0010 00000000 		.quad	.LC146
 5240      00000000 
 5241 0018 00000000 		.quad	.LC147
 5241      00000000 
 5242 0020 00000000 		.quad	.LC148
 5242      00000000 
 5243 0028 00000000 		.quad	.LC149
 5243      00000000 
 5244 0030 00000000 		.quad	.LC150
 5244      00000000 
 5245 0038 00000000 		.quad	.LC151
 5245      00000000 
 5246 0040 00000000 		.quad	.LC152
 5246      00000000 
 5247 0048 00000000 		.quad	.LC153
 5247      00000000 
 5248 0050 00000000 		.quad	.LC154
 5248      00000000 
 5249 0058 00000000 		.quad	.LC154
 5249      00000000 
 5250 0060 00000000 		.quad	.LC154
 5250      00000000 
 5251 0068 00000000 		.quad	.LC154
 5251      00000000 
 5252 0070 00000000 		.quad	.LC154
 5252      00000000 
 5253 0078 00000000 		.quad	.LC154
 5253      00000000 
 5254 0080 00000000 		.quad	.LC154
 5254      00000000 
 5255 0088 00000000 		.quad	.LC155
 5255      00000000 
 5256 0090 00000000 		.quad	.LC156
 5256      00000000 
 5257 0098 00000000 		.quad	.LC157
 5257      00000000 
 5258 00a0 00000000 		.quad	.LC158
 5258      00000000 
 5259 00a8 00000000 		.quad	.LC159
 5259      00000000 
 5260 00b0 00000000 		.quad	.LC160
 5260      00000000 
 5261              		.section	.rodata.str1.1
 5262              	.LC161:
 5263 0435 556E7061 		.string	"Unparseable hex number"
 5263      72736561 
 5263      626C6520 
 5263      68657820 
 5263      6E756D62 
 5264              	.LC162:
 5265 044c 4368616E 		.string	"Channel out of range"
 5265      6E656C20 
 5265      6F757420 
 5265      6F662072 
 5265      616E6765 
 5266              	.LC163:
 5267 0461 436F6E64 		.string	"Conduit out of range"
 5267      75697420 
 5267      6F757420 
 5267      6F662072 
 5267      616E6765 
 5268              	.LC164:
 5269 0476 496C6C65 		.string	"Illegal character"
 5269      67616C20 
 5269      63686172 
 5269      61637465 
 5269      7200
 5270              	.LC165:
 5271 0488 556E7465 		.string	"Unterminated string"
 5271      726D696E 
 5271      61746564 
 5271      20737472 
 5271      696E6700 
 5272              	.LC166:
 5273 049c 4E6F206D 		.string	"No memory"
 5273      656D6F72 
 5273      7900
 5274              	.LC167:
 5275 04a6 456D7074 		.string	"Empty string"
 5275      79207374 
 5275      72696E67 
 5275      00
 5276              	.LC168:
 5277 04b3 4F646420 		.string	"Odd number of digits"
 5277      6E756D62 
 5277      6572206F 
 5277      66206469 
 5277      67697473 
 5278              	.LC169:
 5279 04c8 43616E6E 		.string	"Cannot load file"
 5279      6F74206C 
 5279      6F616420 
 5279      66696C65 
 5279      00
 5280              	.LC170:
 5281 04d9 43616E6E 		.string	"Cannot save file"
 5281      6F742073 
 5281      61766520 
 5281      66696C65 
 5281      00
 5282              	.LC171:
 5283 04ea 42616420 		.string	"Bad arguments"
 5283      61726775 
 5283      6D656E74 
 5283      7300
 5284              		.section	.rodata
 5285 00b8 00000000 		.align 32
 5285      00000000 
 5288              	errMessages:
 5289 00c0 00000000 		.quad	0
 5289      00000000 
 5290 00c8 00000000 		.quad	0
 5290      00000000 
 5291 00d0 00000000 		.quad	.LC161
 5291      00000000 
 5292 00d8 00000000 		.quad	.LC162
 5292      00000000 
 5293 00e0 00000000 		.quad	.LC163
 5293      00000000 
 5294 00e8 00000000 		.quad	.LC164
 5294      00000000 
 5295 00f0 00000000 		.quad	.LC165
 5295      00000000 
 5296 00f8 00000000 		.quad	.LC166
 5296      00000000 
 5297 0100 00000000 		.quad	.LC167
 5297      00000000 
 5298 0108 00000000 		.quad	.LC168
 5298      00000000 
 5299 0110 00000000 		.quad	.LC169
 5299      00000000 
 5300 0118 00000000 		.quad	.LC170
 5300      00000000 
 5301 0120 00000000 		.quad	.LC171
 5301      00000000 
 5302              		.globl	Kack2
 5303              		.data
 5304              		.align 8
 5307              	Kack2:
 5308 0000 12010000 		.quad	274
 5308      00000000 
 5309              		.globl	Kack1
 5310              		.align 8
 5313              	Kack1:
 5314 0008 12010000 		.quad	274
 5314      00000000 
 5315              		.globl	Key
 5316              		.align 8
 5319              	Key:
 5320 0010 0F000000 		.quad	15
 5320      00000000 
 5321              		.local	enableBenchmarking
 5322              		.comm	enableBenchmarking,1,1
 5323              		.local	ptr
 5324              		.comm	ptr,8,8
 5325              		.section	.rodata.cst8,"aM",@progbits,8
 5326              		.align 8
 5327              	.LC4:
 5328 0000 00000000 		.long	0
 5329 0004 80842E41 		.long	1093567616
 5330              		.align 8
 5331              	.LC5:
 5332 0008 00000000 		.long	0
 5333 000c 00003041 		.long	1093664768
 5334              		.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609"
 5335              		.section	.note.GNU-stack,"",@progbits
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccqO1m0j.s:11     .text:0000000000000000 doWrite
     /tmp/ccqO1m0j.s:254    .text:0000000000000290 parseLine.constprop.0
     /tmp/ccqO1m0j.s:5324   .bss:0000000000000008 ptr
     /tmp/ccqO1m0j.s:5288   .rodata:00000000000000c0 errMessages
                             .bss:0000000000000000 enableBenchmarking
     /tmp/ccqO1m0j.s:1679   .text:0000000000001620 decToHexa32
     /tmp/ccqO1m0j.s:1807   .text:0000000000001750 read_chan
     /tmp/ccqO1m0j.s:2088   .text:0000000000001a90 decrypter
     /tmp/ccqO1m0j.s:2260   .text:0000000000001c90 encrypter
     /tmp/ccqO1m0j.s:2430   .text:0000000000001e90 send_chan
     /tmp/ccqO1m0j.s:5319   .data:0000000000000010 Key
     /tmp/ccqO1m0j.s:2818   .text:0000000000002310 send_data
     /tmp/ccqO1m0j.s:2989   .text:0000000000002500 nthbit
     /tmp/ccqO1m0j.s:3024   .text:0000000000002520 editfile
     /tmp/ccqO1m0j.s:3576   .text.startup:0000000000000000 main
     /tmp/ccqO1m0j.s:5237   .rodata:0000000000000000 nibbles
     /tmp/ccqO1m0j.s:5313   .data:0000000000000008 Kack1
     /tmp/ccqO1m0j.s:5307   .data:0000000000000000 Kack2
     /tmp/ccqO1m0j.s:5327   .rodata.cst8:0000000000000000 .LC4
     /tmp/ccqO1m0j.s:5331   .rodata.cst8:0000000000000008 .LC5

UNDEFINED SYMBOLS
fread
flAwaitAsyncWrites
flWriteChannelAsync
errPrefix
__stack_chk_fail
bufInitialise
__errno_location
strtoul
flSelectConduit
bufDestroy
free
stderr
__fprintf_chk
malloc
bufAppendConst
gettimeofday
flReadChannel
__printf_chk
strncpy
fopen
fclose
flWriteChannel
dump
flReadChannelAsyncSubmit
flReadChannelAsyncAwait
fwrite
strlen
memcpy
strcat
strcpy
__isoc99_fscanf
arg_str0
arg_str1
arg_uint0
arg_lit0
arg_end
arg_nullcheck
flClose
flFreeError
arg_parse
stdout
arg_print_syntax
arg_print_glossary
arg_print_errors
flInitialise
flOpen
flLoadCustomFirmware
flSleep
fflush
flIsDeviceAvailable
flGetFirmwareVersion
flGetFirmwareID
flFlashStandardFirmware
flIsNeroCapable
flIsCommCapable
jtagScanChain
flLoadStandardFirmware
flFlashCustomFirmware
flIsFPGARunning
readline
add_history
flResetToggle
flMultiBitPortAccess
__sprintf_chk
fgetc
sleep
flSaveFirmware
flProgram
sigRegisterHandler
sigIsRaised
fputc
